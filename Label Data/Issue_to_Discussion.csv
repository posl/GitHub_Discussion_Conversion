,URL,Created,Comment_removeclass,Comment_time,Post_Index,Check_Point,Category
0,https://github.com/angular/angularfire/discussions/2844,2021-05-21 10:24:06.000000,This issue does not seem to follow the issue template. Make sure you provide all the required information.,2021-05-21 10:24:08.000000,1,,Invalid issues
1,https://github.com/angular/angularfire/discussions/2844,2021-05-21 10:24:06.000000,"Moving to discussions.
Our current recommendation is to use the emulators entirely in AngularFire, as swapping out AngularFireModule for initializeTestApp is not trivial (and likely not possible with the current AF API).
Including auth https://firebase.google.com/docs/emulator-suite/connect_auth",2021-05-25 19:47:13.000000,2,1.0,Invalid issues
2,https://github.com/angular/angularfire/discussions/2949,2021-09-12 04:13:19.000000,This issue does not seem to follow the issue template. Make sure you provide all the required information.,2021-09-12 04:13:21.000000,1,,Not a bug
3,https://github.com/angular/angularfire/discussions/2949,2021-09-12 04:13:19.000000,"Converting to a discussion, if a bug is found we can open one.",2021-09-14 07:20:23.000000,2,1.0,Not a bug
4,https://github.com/ant-design/ant-design/discussions/29818,2021-03-18 21:07:48.000000,Try to drop usage of babel-plugin-import.,2021-03-19 01:38:11.000000,1,,Non Actionable Topic
5,https://github.com/ant-design/ant-design/discussions/29818,2021-03-18 21:07:48.000000,Since this not a bug or feature request. Move to discussion instead.,2021-03-19 03:44:32.000000,2,1.0,Non Actionable Topic
6,https://github.com/apollographql/apollo-client/discussions/6293,2020-05-16 17:24:46.000000,Thanks for the feature request @darkbasic. I'm going to convert this to a discussion (we're trialing GH's beta discussions feature).,2020-05-20 01:26:00.000000,1,1.0,Non Actionable Topic
7,https://github.com/apollographql/apollo-server/discussions/4432,2020-07-30 18:07:26.000000,"@jhampton It looks like this repo has access to the Github Discussions Beta.
Should we move this over there? https://github.com/apollographql/apollo-server/discussions",2020-07-30 18:18:26.000000,1,1.0,Non Actionable Topic
8,https://github.com/aws-amplify/amplify-js/discussions/8106,2021-04-13 11:17:02.000000,"One idea, we don't do much error trapping or retries when it comes to DataStore, we treat it currently as fire and forget assuming that its doing a lot of the smart retry stuff under the hood. Should we be adding in more error catching to try to catch a missed/bad sync and retrying? I don't think so, seems a bit of a duplication but I could be wrong. That raises a whole other question about best practise usage of DataStore with error handling, I might put that in another issue though.",2021-04-13 11:41:50.000000,1,,Non Actionable Topic
9,https://github.com/aws-amplify/amplify-js/discussions/8106,2021-04-13 11:17:02.000000,"Hey 👋 Thanks for raising this! After reading over this issue, it appears to be more of a general question or topic for discussion and will be labeled as such. This is to differentiate it from the other types of issues and make sure it receives the attention it deserves.
I have also asked a member of the team that, to my knowledge, is focused on this area of Amplify to take a look and give their feedback when/if they can.
I hope that helps!",2021-04-13 19:05:47.000000,2,1.0,Non Actionable Topic
10,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Hi @laclance 👋 thanks for raising this issue. In our documentation, we recommend listening to the signout event from the Auth category to trigger a DataStore.clear call.
I think there might be a race condition happening between the graphql call datastore makes and the clear/signout operations but this should work.
ex.
",2021-11-29 14:44:42.000000,1,,Further discussion
11,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"ok thank you but how do I trigger the signOut event? It's a custom login, do I have to use amplify authentication in order to clear datastore on signout?",2021-11-29 14:51:41.000000,2,,Further discussion
12,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Ohh okay. Well, in that case, maybe you could use the API.graphql method to create that record before DataStore gets cleared? I think the issue is mainly that you're trying to save a record to the local database, which DataStore will always do, but the graphql queries happen separately apart from the DataStore operations. So, it might make more sense to make a call directly to the API so you don't have to worry about the DataStore websocket connection closing before the local record can be synced to the server.
something like this:
",2021-11-29 18:37:14.000000,3,,Further discussion
13,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,Ok yeah thank you that's probably the best idea.,2021-11-29 18:42:27.000000,4,,Further discussion
14,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,No problem 😄  Let me know if that works for you!,2021-11-29 18:44:12.000000,5,,Further discussion
15,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,@chrisbonifacio is there a way to check a record has been synced to the cloud? Comparing the SubscriptionMessage when offline and online they seem to be identical?,2021-11-30 15:47:28.000000,6,,Further discussion
16,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,The problem I'm having is similar to this one #6488. If the internet goes down and I do a Datastore.save to the local db while still offline and then when the internet comes on again datastore does not sync right away and if a user wants to log out before the sync occurs I can't tell which items in the local db have been synced to the cloud or not.,2021-12-01 05:21:42.000000,7,,Further discussion
17,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"
graphql

Also tried this and get same error.",2021-12-01 11:15:12.000000,8,,Further discussion
18,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,Can also get the same error without trying to save right before clearing. If you do a datastore.save while offline then at any point in time clear the db and then at any point in time go online again you will get the error. So doesn't matter whether or not I try to save data before clearing will still get the error if I clear the db at any point in time while there are unsynced records.,2021-12-01 12:29:33.000000,9,,Further discussion
19,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"
is there a way to check a record has been synced to the cloud? Comparing the SubscriptionMessage when offline and online they seem to be identical?

As far as I know, there are two ways:

Using the Hub utility


console logs


Using DataStore.observeQuery


console logs
",2021-12-01 20:35:39.000000,10,,Further discussion
20,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Maybe I'm misunderstanding the use case here, but why are you clearing the local database if you are anticipating the user to perform operations offline? Do you expect multiple users to be logged into the same device? If the same user is signing in, it might be best to leave the data cached locally and only clear the database if a different user logs in.
https://docs.amplify.aws/lib/datastore/sync/q/platform/js/#clear-local-data",2021-12-01 20:47:17.000000,11,,Further discussion
21,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,Thanks but those solutions don't tell me if data has synced to the cloud only locally because even when offline datastore says items are synced. Yes there are multiple users and their data needs to be private.,2021-12-02 03:30:09.000000,12,,Further discussion
22,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"So whether online or offline this is what I get:

If offline then will get event: 'modelSynced' when I come online again which is great because I can check if 'outboxMutationEnqueued' fires then wait for 'modelSynced' to check if data has been synced but if online then 'modelSynced' events only fires when I refresh the page.",2021-12-02 05:26:52.000000,13,,Further discussion
23,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,That I can manage though but main issue is still if app is online I want to clear datastore but save unsynced data before doing so but I get the 'Failed to execute' error.,2021-12-02 06:35:07.000000,14,,Further discussion
24,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"@laclance ah okay, I see what you mean. Hmm, I'm not really sure if there's a reliable way to make sure records are synced to the server before clearing, especially if offline.
Personally, I wouldn't clear the local database unless a different user logs into the same device to try to avoid the edge case of a user logging out while offline causing records to be lost before synced. But, I may just be missing some experience on how to properly handle this.
I'm going to reach out to the DataStore team to see if I can get some feedback for you on what might be the best way to approach this.",2021-12-02 15:48:23.000000,15,,Further discussion
25,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Ok cool thanks so much, the only problem with not clearing is that other users can see the data in the indexdb via browser dev tools.",2021-12-02 17:01:20.000000,16,,Further discussion
26,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"No problem! As a quick note, the team has pointed out that the event for when a local change has been synced to the cloud would be outboxMutationProcessed, rather than the enqueued changes.
Still in talks about this with the team. Thank you for bearing with me in the meantime!",2021-12-02 17:42:04.000000,17,,Further discussion
27,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"No problem thanks, yes I did see that but it's the same problem as the 'modelSynced' event, the events don't always get fired if you do not have a stable internet connection.",2021-12-02 18:01:08.000000,18,,Further discussion
28,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"All of a sudden getting this error and can't get rid of it.
index.ts:594 Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'lastFullSync')",2021-12-03 14:02:27.000000,19,,Further discussion
29,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"@chrisbonifacio deleted amplify project and recreated from scratch but still the the same error, not sure if I should maybe open a new issue because I don't know how to reproduce it, all I did was try to run Datastore.clear() after doing multiple updates, which I tried many times before without receiving this error.
",2021-12-06 13:33:41.000000,20,,Further discussion
30,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Re-created the project again with a different table name and created a fresh frontend app with only Amplify.configure(aws_exports); and DataStore.start() and get these 2 errors:

",2021-12-07 17:04:52.000000,21,,Further discussion
31,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"looking into similar issues in the past, these errors seem to be caused by a few things.

Make sure DataStore is enabled for the project, of course
Remove any unnecessary amplify packages (I see you have both @aws-amplify/core and @aws-amplify/datastore. You can either try only installing aws-amplify from which you can still import the scoped packages if it's the only package installed. Or, you can remove @aws-amplify/core because its already listed as a dependency of the scoped datastore package.
Replace DataStore.start() with DataStore.query()
",2021-12-09 05:05:21.000000,22,,Further discussion
32,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Thank you, looks like replacing dataStore.start() with DataStore.query() works, I thought the first query() called start() anyway.",2021-12-09 06:21:52.000000,23,,Further discussion
33,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Also have to use the aws-amplify package now, but we were using datastore fine for almost a year with @aws-amplify/core and @aws-amplify/datastore.",2021-12-09 06:36:03.000000,24,,Further discussion
34,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,Still get the same error when I start using Datastore more after the first DataStore.query().,2021-12-09 06:49:59.000000,25,,Further discussion
35,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Ok now it seems to only throw errors on start and clear.
DataStore.start() gives Cannot read properties of undefined (reading 'lastFullSync') but we can use query instead.
DataStore.clear() still gives DOMException: Failed to execute 'transaction' on 'IDBDatabase': The database connection is closing. and we do want to be able to clear the db to not allow users to view other users' private information via browser dev tools.
Also using the aws-amplify package, types are not inferred which is quite annoying also can't do things like jump to the definition.",2021-12-09 12:09:39.000000,26,,Further discussion
36,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Yeah, we're still working to improve TypeScript support in our library.
I was thinking about the issue you're having with clearing the database and have some thoughts I'd like to run by you because with most of the syncing process being automated and requiring an active network connection, data loss is difficult to avoid if a user were to sign out and, as a result, clear the database while offline before records have a chance to sync.
I think the documentation's recommendation of real world usage being to clear the local db if a different user logs in makes more sense than simply clearing the db on signOut.
Definitely don't want to try to save a record before the database is cleared because, as mentioned before, the time it takes between a save and a clear won't be enough to ensure the record was synced through the outbox process anyway. This will probably always result in the `Failed to execute 'transaction' on 'IDBDatabase' error.
So, I was wondering if maybe there is some room for letting the data exist in the local store at least until the network status comes back online. There is also a networkStatus event from the Hub's datastore listener that could maybe be used to check if the user is online and only clear the database if they are logged out with an active connection?",2021-12-09 17:12:50.000000,27,,Further discussion
37,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Okay, thank you. Yes but as mentioned we don't want to to allow users to view other users' private information via the dev tools. The networkStatus still returns true if there is a network but no internet connection. So I'm using outboxStatus and outboxMutationProcessed to check if everything has synced then running clear() after a small delay. If data doesn't get synced after a certain amount of time then I encrypt it and store it locally. Using the hub events was causing a bit of a problem with an unstable internet connection but due to the other errors we haven't had a chance to fully test it yet.",2021-12-09 17:27:48.000000,28,,Further discussion
38,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Okay yeah that makes sense and aligns with what the team has explained to me about what is probably the best way to handle this scenario (using the outbox status and mutationProcessed events).
Because the original issue is not a bug and intended behavior I'd close this issue but I believe this is worth a more in-depth discussion so we can move it to discussions instead to keep this open for feedback.",2021-12-10 18:37:18.000000,29,1.0,Further discussion
39,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Not quite the original issue but I feel like it shouldn't be the intended behavior. As I mentioned, the outboxStatus and mutationProcessed events often don't work without a stable internet connection, same goes for subscriptions. Also if a user logs out and the internet goes off for a second and datastore stops and mutations don't get processed you going to see the same error when a user logs in and DataStore.clear() is called. Is one purpose of datastore not suppose to be the aid in offline/online data synchronization?",2021-12-10 18:56:28.000000,30,,Further discussion
40,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,Just got the same error now after running DataStore.clear() and I've had a stable internet connection and have not done a mutation.,2021-12-11 07:02:14.000000,31,,Further discussion
41,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,Is there any progress on this?,2022-03-21 11:19:33.000000,32,,Further discussion
42,https://github.com/aws-amplify/amplify-js/discussions/9388,2021-11-26 09:52:36.000000,"Also having this issue, would love a solution",2022-04-11 02:11:48.000000,33,,Further discussion
43,https://github.com/bokeh/bokeh/discussions/11268,2021-05-12 04:00:18.000000,"
(...) to include the Bokeh toolbar in the browser's standard tab order. If that proves to not be feasible (e.g. because of limitations of the canvas)

Toolbar is DOM/CSS so it can participate in tab order. It's just that its implementation is bad, using plain <div> as buttons.",2021-05-12 12:04:33.000000,1,,Non Actionable Topic
44,https://github.com/bokeh/bokeh/discussions/11268,2021-05-12 04:00:18.000000,"@tcmetzger, please split this issue into multiple feature requests, as this issue is not actionable, i.e. it's not clear when this issue would be closed. If you just want to discuss the broad usability issue, please convert this to a discussion (""Convert to discussion"" in the side panel).",2021-05-12 12:07:54.000000,2,1.0,Non Actionable Topic
45,https://github.com/bokeh/bokeh/discussions/11268,2021-05-12 04:00:18.000000,"sidebar: I had not actually noticed ""Convert to Discussion"" before, I will probably make extensive use of that on the next full issue tracker triage I perform. I do agree this would be good as a discussion that can then be used to precipitate specific issues out of.",2021-05-12 15:23:52.000000,3,,Non Actionable Topic
46,https://github.com/bokeh/bokeh/discussions/11268,2021-05-12 04:00:18.000000,"@mattpap I'm glad to hear that the tab order would be possible, I'll make a separate issue for that. I also was not aware of the ""convert do discussion"" button, and I agree that this does make more sense as a discussion!",2021-05-12 19:31:04.000000,4,,Non Actionable Topic
47,https://github.com/bokeh/bokeh/discussions/11268,2021-05-12 04:00:18.000000,"@mattpap What are your thoughts on:

Some of the existing tools could also be updated to be more easily used with a keyboard, for example by enabling the use of arrow keys with the pan tool or enabling ""+"" and ""-"" with the wheel zoom tool.

(I'd probably make that it's own, separate issue, even though it only makes sense in connction with #11266.)",2021-05-12 19:42:39.000000,5,,Non Actionable Topic
48,https://github.com/bokeh/bokeh/discussions/11269,2021-05-04 21:40:15.000000,"
It would be great to cut down the overall docs build time

Any initial ideas?",2021-05-04 22:58:27.000000,1,,Non Actionable Topic
49,https://github.com/bokeh/bokeh/discussions/11269,2021-05-04 21:40:15.000000,"There are two cases: speeding up local development, and speeding up CI
The first is probably somewhat easy to make some quick improvements for. We can add flags to suppress different parts of the build, i.e. don't build the sitemap, or the formatted source, or even skip building plots. So if you just need to see how some new edited text renders, that should help significantly.
Additionally, I think our invalidation of built plots is probably overly aggressive. I suspect it is possible to make things smarter in ways that will not trigger full rebuilds of plots as often. That would also help local development.
Improving CI is another matter, and would require some actual investigation. It's possible we are doing some things with sphinx in ways that could be more intrinsically efficient, or it's even possible that there are improvements we could make to sphinx itself and push upstream. But this is a more involved case, for sure.",2021-05-10 17:17:44.000000,2,,Non Actionable Topic
50,https://github.com/bokeh/bokeh/discussions/11269,2021-05-04 21:40:15.000000,"This thread seemed to be another great candidate for ""transfer to discussion""! Based on what we have discussed so far, I have created two specific issues:

An issue to add flags to suppress different parts of the build (#11270)
An issue to make invalidation of built plots less aggressive (#11271)

I believe improvements to the CI would warrant more discussion first, so I have not opened an issue on that.",2021-05-13 04:26:02.000000,3,1.0,Non Actionable Topic
51,https://github.com/bokeh/bokeh/discussions/11310,2021-05-28 16:01:53.000000,"typing_extensions may still be useful, because we would like to take advantage of the new TypeGuard type (https://www.python.org/dev/peps/pep-0647/), which will be available officially in Python 3.10.",2021-05-28 16:16:25.000000,1,,Non Actionable Topic
52,https://github.com/bokeh/bokeh/discussions/11310,2021-05-28 16:01:53.000000,"
in case you skip dependency on 3.7

We have no plans to do this",2021-05-28 20:38:53.000000,2,,Non Actionable Topic
53,https://github.com/bokeh/bokeh/discussions/11310,2021-05-28 16:01:53.000000,"Hmm, perhaps, this is all wrong. typing_extensions will never go away and it doesn’t make sense to try.",2021-05-28 20:42:07.000000,3,,Non Actionable Topic
54,https://github.com/bokeh/bokeh/discussions/11310,2021-05-28 16:01:53.000000,"typing_extensions may only be removed as soon as nothing is needed from it. At bare minimum that won't be until we change to make Python 3.8 is the minimum Python version, and that will not happen in the immediate term (we only just made 3.7 the minimum for the upcoming Bokeh 2.4 version). However, if we decide to employ TypeGuard then it would not be until Python 3.10 is made the minimum version, and that's considerably further in the future.
This doesn't seem like a pressing  concern, though? As dependencies go, typing_extensions is unproblematic to install with either conda or pip, is actively maintained by the Python devs directly, and is relatively small (~10s of kb). Is there some other specific problem or concern that weighs in on this?
[note: moving to discussion]",2021-05-28 20:51:57.000000,4,1.0,Non Actionable Topic
55,https://github.com/bootstrap-vue/bootstrap-vue/discussions/6228,2020-12-18 14:38:41.000000,"You're not using the modal-footer slot, you've added a modal-footer prop.
The markup should be.

You can take a look at the Vue docs if want more information about how slots work.
https://vuejs.org/v2/guide/components-slots.html#Named-Slots",2020-12-18 14:51:28.000000,1,,Non Actionable Topic
56,https://github.com/bootstrap-vue/bootstrap-vue/discussions/6228,2020-12-18 14:38:41.000000,"For future Questions, please use the Discussion section on our GitHub page.
You can then create it under the Q&A category.
https://github.com/bootstrap-vue/bootstrap-vue/discussions",2020-12-18 14:52:42.000000,2,1.0,Non Actionable Topic
57,https://github.com/chartjs/Chart.js/discussions/9295,2021-06-20 05:05:04.000000,"Replacing ScriptBundle with Bundle for chart.js makes it work. That removes jsMinify from the picture.
You'll need to find out what exactly does it minify incorrectly. It might be something we can change though.",2021-06-20 06:35:19.000000,1,,Not a Bug
58,https://github.com/chartjs/Chart.js/discussions/9295,2021-06-20 05:05:04.000000,"Thanks for your response.  None of the scripts output by RenderScript() are minified (it's a debug build).  Is jsMinify still a player in that case?  Used dozens of third-party scripts in MVC over the last 10 years, first time I've ever seen this.  Have no idea how'd I'd go about debugging it.",2021-06-20 06:57:42.000000,2,,Not a Bug
59,https://github.com/chartjs/Chart.js/discussions/9295,2021-06-20 05:05:04.000000,"Similar in SO: https://stackoverflow.com/questions/30219807/object-reference-not-set-to-an-instance-of-an-object-in-layout-cshtml-after-upd (where I got the idea to try Bundle instead of ScriptBundle)
(Converted to discussion, as this is not really a bug in Chart.js.)",2021-06-20 07:08:27.000000,3,1.0,Not a Bug
60,https://github.com/ColorlibHQ/AdminLTE/discussions/3909,2021-08-24 17:54:43.000000,"
Don't use the Bug Report for Questions, for this we have GitHub's discussions or our discord.
You can update AdminLTE 2.x to use Bootstrap 5 but this will cost much work to get it working without bugs
",2021-08-24 18:13:25.000000,1,1.0,Non Actionable Topic
61,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"We have done this simple test page to try out few scenarios with Playready security level. Use MSEdge for playready testing, you need quite recent PC hardware to have a valid trusted environment blocks.
I'll create a new test content with 4K resolution in few days.
https://refapp.hbbtv.org/dash/test_dashjs_sl3000.html
",2022-01-14 10:25:08.000000,1,,Already fixed
62,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@markriley9999 @Murmur Thank you for the detailed description. We will check this and make a proposal how to move on. As far as I understand com.microsoft.playready.recommendation should be used as the default. We could fallback to com.microsoft.playready if com.microsoft.playready.recommendation  is not supported. To my best knowledge there is also  com.microsoft.playready.hardware to enforce Hardware DRM, so in theory there are three different system strings.",2022-01-18 07:31:46.000000,2,,Already fixed
63,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"I added a first draft for a solution in #3859. The idea is described in the PR. Basically, it allows us to define multiple system strings to be applied by priority for the different DRM systems. This is work in progress I did not carefully test this yet, further adjustments might be required. However, any feedback is welcome.
@bbert fyi, maybe you also want to comment",2022-01-18 20:57:11.000000,3,,Already fixed
64,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"i must admit that it's not clear to me as to whether the requirement to use the 'com.microsoft.playready.recommendation' keysystem applies only to the Edge browser or whether it should be applied across all browsers (i assumed the latter...).
does anyone know?  is this documented anywhere?
i'm wondering if @swenkeratmicrosoft can clarify.  thanks!",2022-01-24 13:46:43.000000,4,,Already fixed
65,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"For key system string:
On Windows, I am unaware of any browser that supports PlayReady except Edge.  For Edge, com.microsoft.playready.recommendation is the correct key system string.
If any other browsers support playready, it's up to them what key systems they support and how they support them, e.g. they could decide to implement com.microsoft.playready such that it remaps to com.microsoft.playready.recommendation before it calls into the OS, or they might use com.microsoft.playready.recommendation only and not support com.microsoft.playready at all, or whatever they wish to do.  Microsoft has no control over that.
On non-Windows, there are multiple possibilities for the key system string.

If the browser implementation is directly passing the key system string to PlayReady porting kit 3.3 or higher without changes, then the correct key system string is:  com.microsoft.playready.recommendation.
If the browser implementation is directly passing the key system string to PlayReady porting kit 3.2 or lower without changes, then the correct key system string is:  com.microsoft.playready.
If the browser implementation is modifying the key system string before passing it into the PlayReady porting kit, I have no way of knowing what modifications they do, so I can't assist with giving you the correct key system string.

For robustness level / hardware DRM:
Edge on Windows should properly map 3000 to hardware DRM.  If you're having trouble getting that to work properly, you can also use the key system string com.microsoft.playready.recommendation.3000 (windows only) to force hwdrm for video.  If the key system string com.microsoft.playready.recommendation is not supported, you CAN fallback to com.microsoft.playready (or com.microsoft.playready.hardware) for the legacy implementation.  However, the legacy implementation has MANY incompatibilities with the EME spec AND we may remove support for it entirely in the future.  I strongly recommend against using the legacy implementation under any circumstances.
Again, I can't speak to non-Edge Windows browsers.
For non-windows, the PlayReady porting kit doesn't know what level it is running at - only the OEM implementing the device can determine that.  As a result, it is up to the browser to correctly implement the robustness level value to reject robustness level 3000 when it is not supported.
For persistent state:
Unless you have a strong reason not to, I recommend always specifying persistent state as ""required"".
For distinctive identifiers:
Always specify distinctive identifiers to ""required"".  PlayReady requires distinctive identifiers for all implementations on all platforms.
Hope that helps,
-Sam Wenker with the Microsoft PlayReady team",2022-01-24 16:43:22.000000,5,,Already fixed
66,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"Mixing in HbbTV and SmartTV platforms. Everything was clear until .recommendation | SL3000 came into play :)
DashJs on MSE-EME SmartTVs, how do should Playready be initialized for SL3000 mode in SmartTVs, is videoRobustness | persistentState flags necessary etc..
In the old times just give mpdUrl + Laurl and play.",2022-01-24 18:36:20.000000,6,,Already fixed
67,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"My apologies - I had some incorrect information in my previous post.
I've updated it with a lot of details which should hopefully answer your questions.
-Sam Wenker with the Microsoft PlayReady team",2022-01-24 19:08:41.000000,7,,Already fixed
68,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"Here's some additional background and context on this.
The reason for having two key system strings for PlayReady is because Microsoft had major customers requesting EME support long before the EME spec became a recommendation - it was still in draft.  As a result, Microsoft implemented com.microsoft.playready based on that draft spec.  The EME spec changed substantially after that implementation was released - so much so that there was no way to modify the existing implementation to be compatible with both the final recommendation spec and existing websites - Microsoft had a choice of either breaking existing websites or not being spec compliant, and we chose the latter.  Since EME provides no way to specify additional key-system-specific data in the MediaKeySystemConfiguration, we had no choice but to create a new key system string for the new, spec-compliant implementation.
Unfortunately, that does add a bunch of nuance to how playready is used.  If you're only dealing with recent Windows OS, recent Edge, and recent third party browsers built on a recent PK and not doing anything unusual with the key system string in their implementations (where ""recent"" is relative in all cases), it's pretty simple - com.microsoft.playready.recommendation with robustness string 3000 if desired.  But as soon as you start factoring in all the combinations of older implementations, things get wonky.
-Sam Wenker with the Microsoft PlayReady team",2022-01-24 19:18:34.000000,8,,Already fixed
69,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@swenkeratmicrosoft Thank you for the detailed description.
@bbert @markriley9999 @Murmur I think #3859 offers the required flexibility. We can use different systems strings with that PR, persistentState and distinctiveIdentifier can be set via API as well. What do you think? Also, should we add the logic of #3859 to the older EME versions (2014, 0.1b) as well if possible?",2022-01-25 10:40:26.000000,9,,Already fixed
70,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@dsilhavy @swenkeratmicrosoft  I think so #3859 could provide a flexibility without a need to do an obscure configName = MSEdgeVersion < X THEN .playready ELSE .playready.recommendation application level code.
If content owners require a Playready SL3000 then ""videoRobustness"" : ""3000"" flag is mandatory in a dashjs protData{} configuration object. This need a modern intel cpu Win10 machine to make SL3000 playable.
Hbbtv-SmartTV implementation details is an another story I need to study more, this genre is also moving to MSE-EME player stack but the browser engine is not always a carbon copy of pc browsers.",2022-01-25 11:01:35.000000,10,,Already fixed
71,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@Murmur - Correction: It's the graphics card that needs to support SL3000, and modern graphics cards from several vendors (Intel, Amd, NVidia, Arm) support it.  An intel CPU is not required (although Intel graphics cards in particular might require an Intel CPU - I'm not sure there).
-Sam Wenker with the Microsoft PlayReady team",2022-01-25 16:09:37.000000,11,,Already fixed
72,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"Hi All
thanks @swenkeratmicrosoft for the background info.
what a fascinating can of worms :)
I think @Murmur summed it up well with
'Everything was clear until .recommendation | SL3000 came into play :)'
Support of PlayReady (+SL3000) via a Browser CDM is on the cusp, in the UK, to being widely supported by embedded TV browsers - so it's important to standardise where possible (which I’m sure that we all agree upon).
I personally have already started to see fragmentation in the (TV) industry where some manufacturers support SL3000 via the 'legacy' keysystem (""com.microsoft.playready"") and others via the newer keysystem (""com.microsoft.playready.recommendation"").
I think we have an opportunity now (but, which is quickly passing) to standardise on a single keysystem.
I appreciate that @dsilhavy proposal would appear to be very pragmatic and I think functionally will serve our purpose in the context of getting SL3000 to work with DASHJS, so that's good. :)
However, clear guidance to the TV manufacturers (who will then feed this back to embedded browser suppliers - sometimes the same entity) as to exactly which system should be used, for new devices, would be very useful and personally my vote would be not to use the legacy ""com.microsoft.playready"" keysystem for new devices, ie @swenkeratmicrosoft's recomendation #1:

I appreciate that we may be stepping outside the remit of DASHJS here (but I guess it is still related...).
look forward to hearing your thoughts! :)",2022-01-25 17:31:55.000000,12,,Already fixed
73,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"#3859 is merged, thank you all for the feedback. I am converting this to a discussion thread.",2022-01-31 16:47:33.000000,13,1.0,Already fixed
74,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"As an fyi: I had to revert the system string order to com.microsoft.playready as the default system. I saw multiple ""invalid state errors"" when trying to update the key session using com.microsoft.playready.recommendation.  I am not sure what causes this as it works fine with com.microsoft.playready. We need to investigate this further, I create an issue for this.
Tested with:

https://d24rwxnt7vw9qb.cloudfront.net/v1/dash/e6d234965645b411ad572802b6c9d5a10799c9c1/All_Reference_Streams/2fc23947945841b9b1be9768f9c13e75/index.mpd
https://content.uplynk.com/playlist/6c526d97954b41deb90fe64328647a71.mpd?ad=bbbads&delay=25
",2022-02-24 11:12:11.000000,14,,Already fixed
75,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@dsilhavy
If the error is internal to dash.js, I'm afraid I won't be able to help you.  However, if the error is coming from the platform / Edge (i.e. EME or Media Element APIs), I can assist you with this investigation if you're able to collect and share trace files from the OS.
Specifically:

Download the following zip file.  The included executable is signed by Microsoft.
Follow the instructions in the included readme to start, stop, and zip up the trace files for the successful scenario (i.e. using com.microsoft.playready)
Repeat for the failure scenario (i.e. using com.microsoft.playready.recommendation)
You should now have two different zip files.  Share them with me via whatever means you find easiest.  I can decode them internally and should be narrow down the cause of the error.

https://github.com/microsoft/media-foundation/releases/download/V1/mftracelog.zip
The PlayReady team is very interested in getting people away from using com.microsoft.playready in Edge, so I am happy to assist if I can be of use.
-Sam Wenker with the Microsoft PlayReady team",2022-02-24 15:57:16.000000,15,,Already fixed
76,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@swenkeratmicrosoft I took liberty to run a full stackrace on my Windows10Edge browser. It would be interesting to know how do we identify the compatible SL3000 win10 machines. My laptop is too low-end hardware?
My Edge fails on video=SL3000,audio=SL2000 test case, see test page and log.zip.
https://refapp.hbbtv.org/dash/test_dashjs_sl3000.html?video=sl3000
https://refapp.hbbtv.org/dash/mftracelog_sl3000_murmur.zip
My Edge is fine playing video=SL2000,audio=SL2000 test case.
https://refapp.hbbtv.org/dash/test_dashjs_sl3000.html?video=sl2000
",2022-02-25 08:03:22.000000,16,,Already fixed
77,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@Murmur
According to the trace provided, the key system string being used to initialize PlayReady is com.microsoft.playready.  That's both legacy AND software DRM.  So, it appears that ""the old protDataConfig dashjs trick to activate .recommendation systemDrm"" is not working properly.
The key system string should be com.microsoft.playready.recommendation.3000 for HWDRM.
The license acquisition failure occurs because you're requesting an SL3000 license (HWDRM) when the client is running in SL2000 (SWDRM) mode.
Purely for troubleshooting HWDRM-specific issues, it may be easier to make yourself a private dash.js which simply hard-codes that key system string at the point of calling requestMediaKeySystemAccess, but that's your call.
Hope that helps,
-Sam Wenker with the Microsoft PlayReady team",2022-02-25 16:54:49.000000,17,,Already fixed
78,https://github.com/Dash-Industry-Forum/dash.js/discussions/3869,2022-01-12 09:11:37.000000,"@Murmur
Yes, that's correct.
Using com.microsoft.playready.recommendation with videoRobustness/audioRobustness is more explicit and more platform-agnostic.  Specifying 3000 for video and 2000 audio effectively means ""require hardware-backed security for video, but software-backed security for audio is OK"".
The com.microsoft.playready.recommendation.3000 key system string is windows-specific (AFAIK).  On Windows (ONLY), it implicitly means the exact same thing as 3000 for video and 2000 for audio.  This is because hardware-backed security doesn't exist for audio on windows.
I have no idea what com.microsoft.playready.recommendation.3000 would mean on non-windows, if anything at all.
FWIW, on non-windows, hardware-backed security for audio technically exists on one or two platforms, but it's very rare.  I'm not aware of any content provider that requires it.  That might change in the future if hardware-backed security for audio becomes more common in the market.
Hope that helps,
-Sam Wenker with the Microsoft PlayReady team",2022-02-28 16:50:40.000000,18,,Already fixed
79,https://github.com/date-fns/date-fns/discussions/2751,2021-10-11 02:39:48.000000,"hi @farhan-syah
thank you! I will move this into discussions.",2021-11-06 20:10:13.000000,1,1.0,Non Actionable Topic
80,https://github.com/date-fns/date-fns/discussions/2818,2021-06-09 09:13:16.000000,"hi @p-prins
I will convert this to a discussion and bring this up at our maintainer meeting.",2021-12-05 13:17:00.000000,1,1.0,Non Actionable Topic
81,https://github.com/date-fns/date-fns/discussions/2818,2021-06-09 09:13:16.000000,"hi @p-prins
this is a very good idea however currently we are focused on migration to TS and v3 release.
Fot this reaseon we marked this as a v3 API idea.
Could you please hold off for a while and wait for the v3 release? Once the v3 is out, you can start working on the PR if you please.",2021-12-07 21:54:32.000000,2,,Non Actionable Topic
82,https://github.com/date-fns/date-fns/discussions/2841,2021-01-03 22:44:28.000000,Was there any update on this one?,2021-06-22 04:03:56.000000,1,,Information storage
83,https://github.com/date-fns/date-fns/discussions/2841,2021-01-03 22:44:28.000000,"I think this has noting to do with date-fns. I could reproduce the behavior within the interactive code example in React Native's ""get started"" page just using a native Date object. Works on web, breaks on iOS.





Screen.Recording.2021-06-22.at.12.55.20.PM.mov





The problem is that you are using a string in the Date constructor, which can behave differently depending on the runtime.
Per MDN:

Note: Parsing of date strings with the Date constructor (and Date.parse(), which works the same way) is strongly discouraged due to browser differences and inconsistencies.

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date
Couple solutions:

use a numerical timestamp in the Date constructor
use one of the parse functions in date-fns to safely parse your string. parseISO should work well here. https://date-fns.org/docs/parseISO

Good luck!",2021-06-22 17:17:26.000000,2,,Information storage
84,https://github.com/date-fns/date-fns/discussions/2841,2021-01-03 22:44:28.000000,"Some additional details on the React Native runtimes here: https://reactnative.dev/docs/javascript-environment#javascript-runtime
Essentially, it's JavaScriptCore (Safari's JS engine) that runs prod and V8 (Chrome) while debugging. I get the exact same error in Safari.",2021-06-22 18:13:56.000000,3,,Information storage
85,https://github.com/date-fns/date-fns/discussions/2841,2021-01-03 22:44:28.000000,Going to move this to a discussion so it's easier for people to find.,2021-12-12 16:46:11.000000,4,1.0,Information storage
86,https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/54004,2021-06-22 15:06:11.000000,"Hi @orta,
Why are You closed related issue?
I see that maintainers do not reply for discussions for a month... Maybe I doing it wrong?",2021-06-23 08:03:15.000000,1,1.0,Non Actionable Topic
87,https://github.com/discordjs/discord.js/discussions/6534,2021-08-27 16:19:27.000000,Btw i asked this error on discord and no one else found solution,2021-08-27 16:22:38.000000,1,,Not a Bug
88,https://github.com/discordjs/discord.js/discussions/6534,2021-08-27 16:19:27.000000,"This doesn't seem like a bug, but a lack of understanding. Feel free to make a new discussion about it, as this issue tracker is for bug reports and enhancement suggestions.",2021-08-27 16:44:43.000000,2,1.0,Not a Bug
89,https://github.com/discordjs/discord.js/discussions/6534,2021-08-27 16:19:27.000000,Should i close this issue?,2021-08-27 16:51:34.000000,3,,Not a Bug
90,https://github.com/discordjs/discord.js/discussions/6534,2021-08-27 16:19:27.000000,"Don't worry, I can just do this.",2021-08-27 16:53:54.000000,4,,Not a Bug
91,https://github.com/discordjs/discord.js/discussions/6534,2021-08-27 16:19:27.000000,"Okay, there are a lot of problems here.

The provided reproducible code sample doesn't work. It should be something that we can copy & paste to test ourselves to see the error. It's also incorrect syntax.
p is defined as a Promise, but the code in there doesn't need it to be. You also include a reference to itself in there.
You have unnecessary awaits here:


These methods don't return a Promise (which adds to point 2).

You specify the ""server members"" intent which doesn't exist - I assume you mean the GUILD_MEMBERS one. I feel like you should be including GUILDS too.

After all of this, I assume the problem is that your member is not cached. Code needs tidying!",2021-08-27 17:04:09.000000,5,,Not a Bug
92,https://github.com/django/channels/discussions/1568,2020-11-08 19:16:41.000000,"I think it'll depend on your consumer...

(I think this is better in discussions. It's not really an issue per se.)",2020-11-09 17:06:29.000000,1,1.0,Non Actionable Topic
93,https://github.com/django/channels/discussions/1568,2020-11-08 19:16:41.000000,"
(I think this is better in discussions. It's not really an issue per se.)

Don't seem to be able to convert just now.",2020-11-09 17:08:02.000000,2,,Non Actionable Topic
94,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"
Let's say between our _do_keepalive() loops the connection is lost, and a publisher elsewhere sends a message. RedisSingleShardConnection will silently reconnect having missed the message.

Yes, that is true.
I see it as a tradeoff. Indeed, it is the difference between a ""Pub/Sub"" system vs a ""Message Queue"" system.
The benefit of pubsub is that it's fast and light-weight (i.e. can scale to having HUGE groups and MASSIVE throughput; that's the appeal of Redis PubSub generally). The overhead of pubsub is not much more than just the networking stack itself!
The drawback of pubsub is that it does not queue messages in-memory (well, not beyond the OS-level network stack) thus if the OS-level network connection is lost then you lose messages (as @qeternity points out above). A ""Message Queue"" solves this. Maybe we should have another ChannelLayer based on RabbitMQ? Then folks can choose the one that makes the most sense for their application.

While the reconnect logic is admirable, I'm not sure that it's appropriate in pubsub because it allows for silent missed messages.

My opinion here is that HAVING reconnect logic is better than NOT having it. It at least restores normal operation of your app server within 1 second of restarting your Redis server [1]. It cannot guarantee message delivery, but nothing can guarantee that when using Redis Pub/Sub. For those who want such guarantee, they should instead use a RabbitMQ channel layer (or the original impl if #1683 is fixed).
[1] You previously asked about my production setup. I'm using AWS ElastiCache for Redis for my Redis server. I have my app servers on the same subnet and have never seen them lose the network connection to Redis ""randomly"". The only times I've seen the connection lost is when doing a planned Redis upgrade. Not saying it can't happen... but I've never noticed it happening (based on the logs I keep). So it's not a big concern for me. Dropped messages do screw up my front-end code (which is why I spent so much time looking at #1683) but so far the PubSub impl has been excellent for us in production. I would actually consider a RabitMQ alternative for my app (we don't actually need the crazy throughput PubSub offers) but I'm more familiar with Redis so that's where I focused my solution, TBH.",2021-06-25 16:35:57.000000,1,,Unrelated Repository
95,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"Redis Streams seem to handle the _ reconnect to the same key_ desire, but that would be another implementation.
Thinking we just need to document the trade-offs maybe… 🤔",2021-06-26 05:54:45.000000,2,,Unrelated Repository
96,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@acu192 Many thanks for your thoughts, and even more so for the pubsub implementation. I agree with everything that you say, but the issue is not so much queueing messages but rather the silent nature of the reconnect. In fact, I would not want to queue messages because I also don't want to serve stale data. In our world, if there were to be a hiccup, then we want to know about it so that we can act appropriately. We have actually experimented with the rabbitmq based layer written by the Workbench team, but we are heavy celery users and lightweight redis connections actually work better for us (hence django/channels_redis#258). I think we're in agreement, I would just like to see a mechanism by which the channel layer bubbles up reconnection events so that consumers can act accordingly if needed.
@carltongibson Not suggesting another implementation using redis streams, just thinking out loud. I also think that would be terrible and as I said above, I actually would not want to serve stale data in the event of a network partition. We should definitely document tradeoffs but I'm not sure there needs to be much of a tradeoff. We either make the reconnect logic optional, or better, we notify consumers of disconnect/reconnect events.",2021-06-26 06:39:37.000000,3,,Unrelated Repository
97,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@acu192 Btw - you may have something similar in-house but to stress our infra for consistency at scale, we built this little tool - https://github.com/zumalabs/sockbasher
In dire need of some external docs but might be useful in its current form for you.",2021-06-26 07:57:32.000000,4,,Unrelated Repository
98,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@carltongibson @acu192  so after reviewing this morning for a bit, the shards should emit disconnect/reconnect events to that channel layer. Then, I think there are two approaches that we can take:

Maintain backwards compatibility by raising an exception, which is what occurs in the current layer if redis goes away.
Send a message to all consumers on disconnect/reconnect to allow them to implement specific condition handling.

I am in favor of 2 as I think it's the better approach, with the caveat that it won't be fully backwards compatible.",2021-06-26 09:09:46.000000,5,,Unrelated Repository
99,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"
I agree with everything that you say, but the issue is not so much queueing messages but rather the silent nature of the reconnect.

Ah, I see now. Yes that makes sense.
So, now I assume your idea is: If a Channel Consumer (server-side) knew that a message was dropped, it could close its corresponding websocket. The front-end would notice the closed websocket and reconnect itself. I could go for that on my site, I think it would work well. Let's call this ""Idea A"".

I would just like to see a mechanism by which the channel layer bubbles up reconnection events so that consumers can act accordingly if needed.

To achieve Idea A, I don't think your idea of bubbling-up the Redis-reconnection even is enough. It would help (and for that reason maybe we do it), but we will still need more. Two reasons I can see (bare with me... I'm kinda thinking out loud here):


A Redis-reconnect event will (likely) drop messages destined for more than one consumer, but, only one of those consumers will ""notice"" the dead Redis connection. The others may come in a few milliseconds later and find that the connection is just fine (because it already reconnected). So, to make this work we need a way to notify every consumer when any consumer finds a dead Redis connection. Are we then going to use Redis to notify every consumer? But even so, that's still not enough because...


There is an unlikely (but very much possible) situation on the producer's end. If a producer's connection dies, you probably lost more than just the most-recent message. You may have lost messages sent 2 millseconds ago that were in the network stack memory before the OS decided the TCP connection to Redis was dead.


With all this in mind... let's say Redis dies, a consumer realizes it, tries to notify every consumer of this event... but Redis is still down so it can't notify everyone... or worse Redis is down but the ""send"" function seems to work for a few milliseconds (so the consumer who is doing the notifying is tricked)... also there might be a lot of consumers all noticing this at the same time and all suddenly deciding to notify everyone else! My gut says this will be a mess.

we built this little tool

I like the name... ""sockbasher"" 🤓",2021-06-26 16:02:35.000000,6,,Unrelated Repository
100,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"A simpler way to achieve Idea A is for each producer to include sequence numbers in its messages. Then the consumers check for gaps in the sequence numbers.
But that has to be implemented at the producer-layer and consumer-layer. I don't think the logic works at the channel-layer... but need to think more.",2021-06-26 16:07:44.000000,7,,Unrelated Repository
101,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@acu192 have a look at the last few PRs I've opened. One of them implements the disconnect events. You handle all of this at the layer level directly to the consumers, bypassing any message broker.",2021-06-26 16:28:12.000000,8,,Unrelated Repository
102,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"I've only been able to follow this discussion from a high level, but given our implementation drives 1000's of point-of-sale devices, a missed message is a nightmare to code for.
I think my current given set of options are:

Leave the existing Redis channel in place and suffer (what appears to be) Daphne lock ups when we have a massive disconnect/reconnect event
Move to redis pub/sub, have clean disconnects/reconnects but the potential to lose messages
Explore RabbitMQ (which we left because we had all kinds of problems in distributed mode)

Just confirming I am correct on these counts.
Thanks.",2021-06-28 13:28:42.000000,9,,Unrelated Repository
103,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@LiteWait
""All Redis data resides in-memory, in contrast to databases that store data on disk or SSDs."" ref
Therefore you are playing with fire if you need guaranteed message delivery. If your Redis server dies/reboots/whatever (or the network connection to Redis has a hiccup) it is very likely messages will be lost, no matter which channel layer you use (core or pubsub). It's a shortcoming of Redis (and a tradeoff, it's also what makes Redis so fast).",2021-06-28 15:13:10.000000,10,,Unrelated Repository
104,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"The issue is slightly more complicated than that. Yes absolutely, Redis does not provide strong durability guarantees. But it is commonplace to run with at least RDB or better AOF which provides some persistence. Additionally, running replicas as we do (hence my focus on Sentinel) lowers the window for data loss tremendously. And ultimately, as long as we can engineer around lost messages (i.e. the disconnect logic and forcing a client re-sync) these issues can be hugely minimized.
@LiteWait RabbitMQ and the Workbench layer is a much better approach if you can use it. We make extensive use of Celery and they have taken an approach that is relatively incompatible with the Celery pre-fork model. This is why our focus is on highly available Redis to AND detection of any network partitions.",2021-06-28 15:24:17.000000,11,,Unrelated Repository
105,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@acu192 @qeternity thanks. What worries me isn't Elasticache/Redis dropping out, its from disconnects between Daphne and the JS client and lost messages. Granted you can't do anything about the Internet but as long as I don't have to worry about messages that haven't actually hit the wire yet going missing that would be fault tolerant enough for our application.",2021-06-28 15:52:42.000000,12,,Unrelated Repository
106,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@LiteWait

What worries me isn't Elasticache/Redis dropping out

Same with my app actually, I'm not worried about this because it's very rare and it will not kill our business in the event it does happen. We store all the things we actually care to keep in a real database. Redis is just a nice way to sync state but it is not the authority of the state.
With that in mind you should try the new pubsub impl. It should not [1] drop messages unless the Redis server (or the connection to it) dies. I've been happy with it for this reason, as the core impl was dropping messages even while Redis was healthy.
[1] ""should not"" meaning I don't know of any reason it would... and I've been testing it and running it in production for only a few months, so take that for what it's worth. We're considering it beta for now.

disconnects between Daphne and the JS client

I've been using Uvicorn (instead of Daphne) and found it's generally better (faster, more reliable, whatever). Maybe give that a try if you think Daphne is causing issues for you.",2021-06-28 16:07:21.000000,13,,Unrelated Repository
107,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"@LiteWait @acu192 Absolutely you should not be using Daphne in prod (we also use Uvicorn). In terms of dropping messages between webserver and client, websockets run over tcp so you should have the same guarantees there as you do with tcp. That said, you should expect network issues everywhere. If you are using websockets as a source of truth, I think that's a mistake as you'd need to implement some sort of 2PC on top. Distributed systems are difficult, which is why we treat redis/channels as a nice-to-have real-time sync, which we expect to break and we fall back to sync'ing via api which is backed by our postgres cluster and postgres' decades of battle testing to overcome these exact issues.",2021-06-28 16:16:48.000000,14,,Unrelated Repository
108,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"
If you are using websockets as a source of truth, I think that's a mistake ...

This seems the key point. If the layer drops the connection to Redis, you're going to loose messages (independently of which ASGI server you happen to be using.) Short of a much more robust system on top of ASGI you either need to accept that the occasional message will go missing, or else periodically fallback to a more reliable method (HTTP polling the source of truth, as the first approach.)
I'm thinking this is a documentation issue?  There's a few hits for ""at most once"" in the Channels docs already. Perhaps pulling those together into a single discussion would be worthwhile. 🤔
(See discussion on django/channels_redis#259)",2021-07-01 10:52:54.000000,15,,Unrelated Repository
109,https://github.com/django/channels/discussions/1718,2021-06-25 13:52:11.000000,"I'm going to move this over to discussions on the Channels repo. If we pin down something addressable, happy to move it back.",2021-07-01 15:06:07.000000,16,1.0,Unrelated Repository
110,https://github.com/django/channels/discussions/1738,2021-08-12 17:01:56.000000,"Hi @ckcollab -- sorry no not really. You'll need to experiment and see what works.
I think the comments on the linked issue are probably the best starting point.
If you make progress. It'll be interesting to see what you come up with.
I'm going to concert this to a discussion as I'm not sure it's actionable in its current state.",2021-08-12 17:37:13.000000,1,1.0,Non Actionable Topic
111,https://github.com/eclipse-theia/theia/discussions/8793,2020-11-28 20:48:43.000000,"@BalrajArpit thank you for your discussion, could you please clarify what your specific question is and include additional information?",2020-11-29 05:28:02.000000,1,1.0,Non Actionable Topic
112,https://github.com/eclipse-theia/theia/discussions/9011,2021-01-30 15:02:10.000000,"@muhammedminhal thank you for the discussion (I transfered the issue since it is in fact a question), do you mind providing additional details, are you using the eclipse theia framework for your own application? I don't see anything in the logs that related to the framework itself, are your errors perhaps coming from a custom extension?",2021-01-30 19:28:08.000000,1,1.0,Non Actionable Topic
113,https://github.com/eclipse-theia/theia/discussions/9111,2021-02-23 06:45:55.000000,"@gogasca thank you for the discussion, I migrated the issue to a discussion since it is more of a question.
I believe you may want to try to setup your environment correctly, there are a couple of issues that describe how to do so:

#6465 (comment)
https://community.theia-ide.org/t/images-either-open-as-text-or-have-incorrect-url/1513/2
https://community.theia-ide.org/t/theia-webviews-and-virtual-hosting/1066
",2021-02-23 13:43:20.000000,1,1.0,Not a Bug
114,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"Can you please include your configuration file and sample code to reproduce?
ESLint doesn’t parse HTML by default, so this is likely a problem with a parser or plugin.",2021-09-14 00:27:29.000000,1,,Not a Bug
115,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"My configuration file:

HTML:


this is likely a problem with a parser or plugin

How can I check what parser/plugin leads to the issue?",2021-09-14 05:59:31.000000,2,,Not a Bug
116,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"


Does this error appear in your IDE or when you run ESLint on the command line?",2021-09-14 07:40:08.000000,3,,Not a Bug
117,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"
Does this error appear in your IDE or when you run ESLint on the command line?

In IDE, I'll check if via CLI ESLint returns such error as well.",2021-09-14 07:49:39.000000,4,,Not a Bug
118,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"
In IDE, I'll check if via CLI ESLint returns such error as well.

Thanks!
To clarify - you don't intend to lint HTML files with ESLint, but your IDE is showing ESLint errors when you open a HTML file?",2021-09-14 07:57:51.000000,5,,Not a Bug
119,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"
but your IDE is showing ESLint errors when you open a HTML file?

Exactly!",2021-09-14 07:59:32.000000,6,,Not a Bug
120,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"This is likely a problem in the IDE or how it is configured to integrate with ESLint, I don't see anything in v8.0.0-beta.2 changelog that could possibly change this after upgrading from v8.0.0-beta.1.",2021-09-14 08:07:47.000000,7,,Not a Bug
121,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"
when you run ESLint on the command line?

According to the IDEA team, eslint test.html in terminal throws the same error.",2021-09-14 17:10:20.000000,8,,Not a Bug
122,https://github.com/eslint/eslint/discussions/15066,2021-09-13 21:03:42.000000,"Converting to a discussion, as this is an IDE issue and not an ESLint issue.",2021-09-15 00:15:17.000000,9,1.0,Not a Bug
123,https://github.com/fabricjs/fabric.js/discussions/6869,2021-02-14 21:32:47.000000,"Ho @derekdinan  the best way to post those ideas is the 'discussions' tab. This is indeed for bug reports.
There is a pr to enable filters for all objects, is unmerged yet. You can have a look in the pr section and try it.",2021-02-15 00:13:38.000000,1,1.0,Non Actionable Topic
124,https://github.com/fabricjs/fabric.js/discussions/7102,2021-06-05 13:47:45.000000,"please help belongs to discussions Q&A i suppose, not a project issue.",2021-06-06 07:28:02.000000,1,1.0,Non Actionable Topic
125,https://github.com/facebook/create-react-app/discussions/11405,2021-09-01 13:24:47.000000,"Hi @garrettsmith98,
I converted this is issue into an discussion as the issues are more for CRA tooling internal issues.",2021-09-06 07:27:20.000000,1,1.0,Unrelated Repository
126,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"I totally hear your frustration. As an original co-author and a sporadic maintainer over the years, I probably carry most of the responsibility here. Let me try to address your points and add some context that might illuminate the situation.
Before CRA, the ecosystem was hopelessly fragmented. The entire category of tools like this didn't exist — there was no Next or Gatsby or Vite and so on. The vast majority of React developers were setting up their Babel, webpack, etc, manually, and having a really bad time. These tools were difficult to get working together correctly. For example, webpack had no built-in concept of development and production modes, and no defaults for filenames (it would just crash if you forgot an option). So it was kind of an emergency.
I (co-)created CRA to solve this problem.
It was intentionally minimal and limited in scope (no configuration, no plugin system) for two reasons. One reason was that, the more feature-rich it is, the harder upgrades will be. The other reason was, I knew that React itself will take a vast majority of our time, and I won't be able to dedicate more than a few weeks sporadically to CRA every now and then.
Despite what may appear as it languishing (many open issues, lagging releases), I believe CRA has been, and still is, incredibly successful as a project. Just a few weeks ago, I found an old project using react-scripts@0.7.0 from several years ago. I bumped it to react-scripts@4.0.3 and it just worked. Years of tooling changes, changes in config formats, deprecations, new features — all with a single line. This is very powerful. This is precisely why CRA was created, and it still does a great job at keeping small and mid-sized projects up to date with tooling. Lagging releases are not an issue for such projects because the alternative is they would simply not update at all.
Like I said earlier, it was always the intention that we're not going to be able to work on it full-time. I really, really appreciate the efforts of the volunteer maintainers. I did not expect that someone would help pick up the project while I'm busy. So I'm very thankful. But it was intentionally designed for this kind of sporadic development. We would get critical fixes out as soon as posible, but overall, starting with 2.0, it's mostly in maintenance mode and does not strive to be the best tool for production React apps. It is a tool to get started and get something running fast. Perhaps, it's not even best at that anymore.
Realistically, CRA is inherently very limited. It does not follow best practices for performance because it produces client-side only apps. This means it doesn't benefit from optimizations that are commonplace today with other frameworks, such as static generation or server-side rendering. Unless there is a drastic redesign, it won't benefit from future-facing features like Server Components. So if you care about delivering the best user experience, I don't think CRA is the right tool in the first place. It has its use cases, but many other tools now exist that do this job better. CRA still works great for the getting started use case, but you shouldn't see it as the best React app setup. It's not, and isn't meant to be.
I think the biggest thing that causes people to worry about maintenance is the ""vulnerability"" reports. This is where it becomes noticeable that releases are lagging behind. Unfortunately, as you probably know, 99.9% of these reports are false positives and the npm audit system is horribly broken. We will be working with Node/npm to figure out a solution to this. It creates unnecessary FUD and penalizes slower-moving projects even if they're not actually vulnerable.
There is a conversation to be had about where we want CRA to go in the future. Definitely, I hear your frustration about not having a dedicated full-time working on it. But that was a conscious choice from the beginning when I was setting up the project. And again, I think the sporadic maintenance strategy has largely been successful because of its limited scope and thanks to all the volunteers who helped out. Overall this didn't start being such a problem until (1) npm started the FUD with audits, (2) I had to take a long pause from the project to focus on React itself (and now, on React Docs as well).
I want to better understand what you want to see focus on. Can you tell me more about what concrete problems (""X doesn't work"") have urgency? E.g. the webpack upgrade — what makes it urgent as opposed to, say, waiting a few more months? Are there any user-facing features you are waiting for? Bugfixes?
There is also a broader question of what the long term plan should be for CRA. In the current client-only design, you could make an argument that CRA does not have the right defaults for the web ecosystem. For example, we'll really want to make Server Components as easy as possible to adopt for the ecosystem. Tools like Next.js or static generators will be able to do this, but this clashes with CRA's client-only approach. One possible solution could be to expand CRA feature set and add some kind of SSR/SSG capabilities to it. But this requires a lot of expertise and I don't see how we can compete with projects that have all the existing know-how in this. Another option is to make CRA more of a ""launcher"" and make the existing client-only template one of the possible choices, like a ""classic"" one. But push the ecosystem towards choices that are better for the web.
I don't know what the right answers are but I hope this illuminates the situation a bit. Overall, it would help if you could reframe the question around the concrete actionable things you want to see done, and why they are important. Thank you.",2021-07-06 13:13:21.000000,1,,Non Actionable Topic
127,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"To me, the main problem with lagging releases is the dependency conflict that arises when a newer version of TypeScript or Babel is required. A few examples:

#9995
storybookjs/storybook#5183 (reproducible now with npx create-react-app, npx sb init, yarn start)

I don't think CRA needs more features, ""maintenance mode"" is totally ok. But it needs somewhat regular releases (twice a year maybe?) just with dependency updates to keep pace with an ecosystem.",2021-07-06 18:59:15.000000,2,,Non Actionable Topic
128,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@gaearon
I really appreciate for your very kind response.
Might be a bit long as I'll respond to each one in block I'm afraid.

Before CRA, the ecosystem was hopelessly fragmented. The entire category of tools like this didn't exist — there was no Next or Gatsby or Vite and so on. The vast majority of React developers were setting up their Babel, webpack, etc, manually, and having a really bad time. These tools were difficult to get working together correctly. For example, webpack had no built-in concept of development and production modes, and no defaults for filenames (it would just crash if you forgot an option). So it was kind of an emergency.
I (co-)created CRA to solve this problem.

It's feeling nostalgia my first CRA is react-scripts@1.0.13 at 2017 and I've completed project initial setting still I have apreciate about it.

It was intentionally minimal and limited in scope (no configuration, no plugin system) for two reasons. One reason was that, the more feature-rich it is, the harder upgrades will be. The other reason was, I knew that React itself will take a vast majority of our time, and I won't be able to dedicate more than a few weeks sporadically to CRA every now and then.

Personally I expected CRA is Plain React Starter Kit powerd by FaceBook Offical so CRA don't need rich new feature and agree keep minimal/limited sopope.
And I knew you are working for React it's self there is no complaint against you, to be clear.

Despite what may appear as it languishing (many open issues, lagging releases), I believe CRA has been, and still is, incredibly successful as a project. Just a few weeks ago, I found an old project using react-scripts@0.7.0 from several years ago. I bumped it to react-scripts@4.0.3 and it just worked. Years of tooling changes, changes in config formats, deprecations, new features — all with a single line. This is very powerful. This is precisely why CRA was created, and it still does a great job at keeping small and mid-sized projects up to date with tooling.

I agree with that, totally.

Like I said earlier, it was always the intention that we're not going to be able to work on it full-time. I really, really appreciate the efforts of the volunteer maintainers. I did not expect that someone would help pick up the project while I'm busy. So I'm very thankful. But it was intentionally designed for this kind of sporadic development. We would get critical fixes out as soon as posible, but overall, starting with 2.0, it's mostly in maintenance mode and does not strive to be the best tool for production React apps. It is a tool to get started and get something running fast. Perhaps, it's not even best at that anymore.

I have no complaint about sporadic maintaining cycle, project status of after 2.0.
I think souldn't hurry up too much or give them pressure who working volunteer in free time bacause I thnik maintainer must not get depression from Open Source Software that learned from Henry Zhu(ex Babel maintainer).
Even though

We would get critical fixes out as soon as posible

At the sentence I have only short story I want to tell you.
At the Oct 24, 2020 create-react-app v4.0.0 was released but TypeScript isn't working completely.

#9868

I also facing this issue in my react-react-app-todo-example and I finally fixed
issue in

#9921

But above fix with v4.0.1 not comming soon, that released after about a mouch
during ship v4.0.1 some person telling about relase date

#9921 (comment)

and so many peaople seeking workaround in this thread

#9868

over 100 comments.
To be clear, I'm really apreciate @iansu who handle shiping it!
Actually that's tier 1 reason why I submit this issue, I don't cover all codebase detail of CRA though I'm motivated to become one of maintainer if I could ship that critical bug fix.

Realistically, CRA is inherently very limited. It does not follow best practices for performance because it produces client-side only apps. This means it doesn't benefit from optimizations that are commonplace today with other frameworks, such as static generation or server-side rendering. Unless there is a drastic redesign, it won't benefit from future-facing features like Server Components. So if you care about delivering the best user experience, I don't think CRA is the right tool in the first place. It has its use cases, but many other tools now exist that do this job better. CRA still works great for the getting started use case, but you shouldn't see it as the best React app setup. It's not, and isn't meant to be.

I thnik CRA don't need competision and defeet Next.js that like F1 formula 🏎 Framework.
I earier said Plain React Starter Kit powerd by FaceBook Offical is better position in my view and you mentioned good for getting start React.(and that has enough power for build Regular Single Page Application)
As for the Server Components I pland publish backend cra-template with Node Server(Express) & Sequelize & MySQL(Docker Compose) that will support Server Components easily.
For to do that I planed work based on this CRA basesd fullstack JS project and polish it.
In addition I submited PR for to be sharerable src between server dir


#10998


#8785


wrap up
I'm afraid too long resonse and I can't make 1 by 1 response your last 3~4 paragraph block.
But anyway I really apreciate you are solving npm audit pretty well, and making great announce for community!
I'm welcome conticue discussion if you have a unclear something 🤗",2021-07-07 16:12:33.000000,3,,Non Actionable Topic
129,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
To me, the main problem with lagging releases is the dependency conflict that arises when a newer version of TypeScript or Babel is required.

We could do better here, agreed. Currently only @ianschmitz and @iansu have access to publish (from active maintainers), and we also need to rewrite our tests to support more regular releases. We just don't have the confidence to make ""quick"" changes today.
On testing, we haven't rewritten our tests because we wanted to make some larger changes to CRA first (we wanted to avoid rewriting tests first). Where we go next with CRA is unfortunately the blocker to that work being started, as @gaearon said, but we do plan to get CRA into a place where it a) meets more of the community needs/requests, and b) is updated more frequently. We're working together (with @gaearon) on this, and I hope we can come to a solution in the near future.
To be clear, we have Webpack 5 in the works - @raix is leading the charge there - and we're planning to ship that in alpha form soon, providing there are no big blockers. More on that in the coming weeks I hope!",2021-07-08 08:53:10.000000,4,,Non Actionable Topic
130,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@mrmckeb Thank you for sharing your thought!
To quick fix these TypeScript problem and make a confidence for release without TypeScript things regression,
could we utilize my Create React App TypeScript Todo Example 2021 somehow?
Rough strategy is making alpha version before publish certain numbering release, and then install the alpha version into the Create React App TypeScript Todo Example 2021 for Testing is working fine on TypeScript Project?.
the repo's almost code are covered Component Testing with React-Testing-LIbrary and E2E Testing with Cypress.
Also running new release on actual project is easy to detect conflicted dependency like @44px mentioned #9995
I hope we'll get any make sense quick releaseable TypeScript support workflow in this thread.",2021-07-08 10:34:16.000000,5,,Non Actionable Topic
131,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@44px I guess package.jsons ""resolutions"" field is good option for resolve module version conflict.
But this is Yarn specific feature, I found npm-force-resolutions that enable resolutions field on npm though.",2021-07-09 02:48:29.000000,6,,Non Actionable Topic
132,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@gaearon
Thanks for sharing the insights about the CRA. I really appreciate the effort of the CRA team over the years. I have built many projects based on the CRA and it was super helpful.
But lately, I am starting to get frustrated with CRA over the speed of starting the dev server, build time, and HMR. It takes more than 10 seconds to start freshly installed CRA even on a high-end computer. When you run it on a low-cost computer or your codebase increases, your start-up time increases to minutes and HMR to 8+ seconds.
It would be ok if there were no alternatives, but I can see a lot of projects that are making so much progress in this area by integrating esbuild and making the build up to 100x faster. I played with some of these projects and it felt like out of this world. It was next-level experience for me and it really opened my eyes that it is not normal to wait so much time to start your app or to see your changes updated in the browser.
If CRA is in maintenance mode, does it mean that this issue is not going to be addressed in the near future (Q3/Q4 2021)? I can live without server components, but such a slow experience with CRA really drops my productivity. It would be the main reason I will have to look for CRA alternatives.
I don't mind waiting for speed improvements in the CRA, but if there are no plans, it would be great to know it's futile to wait. In that case, I would have to experiment with some alternatives.",2021-07-17 09:23:19.000000,7,,Non Actionable Topic
133,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Thank you for the extensive information here @gaearon! As React 18 is being developed now, will CRA still be listed as a good way to get started with a SPA in React?",2021-07-24 13:41:58.000000,8,,Non Actionable Topic
134,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@TomasHubelbauer FYI: Personally I was migrated babel-loader to esbuild-loader for getting blazing fast dev-server.
I recommend you follow the webpack or esbuild: Why not both? article for setup esbuild-loader and you'll get speed as well as Vite 🚀",2021-08-01 04:07:33.000000,9,,Non Actionable Topic
135,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@mrmckeb @ianschmitz @iansu @44px @gaearon
I have a idea about dependency conflict that arises when a newer version of TypeScript or Babel is required problem.
It's replace babel-loader to [esbuild-loader](https://github.com/privatenumber/esbuild-loader) in the TypeScirpt setup.
This means esbuild-loader handles all of TypeScirpt and remove all TypeScirpt related things form Babel.
I think this should be easier to babel dependency management that allowed faster release with confidence.
What do you think about it?
Also @bvaughn reported about ReactDevTools's  display hook name feature,

#11204

and I'm using esbuild-loader in CRA v4.0.3 project overriding Webpack config by craco but hook name showing correctly.
this is override script
So that replacing might not impact to sourcemap stuffs.",2021-08-01 05:31:23.000000,10,,Non Actionable Topic
136,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Just saw this thread and want to toss out a few off-the-cuff thoughts.
I think CRA has more than accomplished the original goals of providing a standardized approach for quickly creating a new React project, with good defaults out of the box, and without having to configure Webpack+Babel.
As mentioned, there are plenty of other options today, both Webpack-based (Next, Gatsby) and non-Webpack (Vite, Snowpack).  However, I think CRA still provides plenty of value for its particular niche.
CRA also still serves as the default standard recommended approach for setting up a React app, per https://reactjs.org/docs/create-a-new-react-app.html#recommended-toolchains .
I see Dan's comment about CRA and relation to things like Server Components and ""best practices for the web ecosystem"".  I understand the thought process there, but I'm a little concerned that that could lead to a ""perfect is the enemy of the good"" scenario.  Not every app can or will be able to use Server Components, and Server Components are still pre-alpha experimental.  There's absolutely value in having good defaults push people in the direction of best practices (such as warning about large bundle sizes automatically), and certainly if there are ways to drive adoption of SCs via CRA improvements, that's great.  But, I can foresee a potential trap there - if we get to a point where there's no work being done on CRA or no encouragement to use it just because it doesn't provide the absolute best possible hypothetical result, that could end up eliminating the value that it does provide.
In terms of concrete improvements, I think the Webpack 5 upgrade is likely most beneficial because A) it keeps CRA up to date with its largest dependency, and B) it lets people benefit from WP5's artifact caching, which could help address some of the speed concerns.
I'd love to see something like ESBuild integrated into CRA for speed. In theory, because of the black-boxing of the Webpack config, that could be done right now and almost all users could benefit from it - it would only be those of us like me who have done our own CRA overrides via craco or react-app-rewired that might have to deal with the changes.
I actually haven't run into the TS dependency issues yet myself, but I can understand how that would be frustrating. CRA does definitely need to be able to work right with TS, and especially updates to TS versions outside of react-scripts.
Overall, I think CRA still serves a valuable role in the React ecosystem.  Not sure what the right approach is for ongoing maintainence, but I think with some targeted effort on a few key changes we could help ensure it stays relevant going forward.",2021-08-02 22:04:06.000000,11,,Non Actionable Topic
137,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"I'll keep this short as I don't want to get too far off topic, but I think having some sort of plugin/extension/recipe system would help a lot in making CRA more flexible without putting as much burden on the core maintainers (since plugin developers can start picking up work in userspace without having to maintain forks). For example Gatsby recipes can install entire tool configs automatically, and Rollup plugins have been so successful that some (such as Babel) are now maintained by the core team.",2021-08-03 03:10:54.000000,12,,Non Actionable Topic
138,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,This issue has fallen out of view pages behind new issues. I think it is an issue that warrants a pin for visibility?,2021-09-10 23:01:14.000000,13,,Non Actionable Topic
139,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@nickmccurdy

I think having some sort of plugin/extension/recipe system would help a lot in making CRA more flexible without putting as much burden on the core maintainers.

That's doing well by craco might be unofficial though.
➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖
@ I agree with you.
Here is comparison activity of CRA and Vite while 1 month.(2021/08/11~202109/11)
Create React App

　  
➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖
Vite

➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖
During a month, opened over 25~28 Pull Request on the both project almost might from motivated contributions.
(Also In Vite case maintainer @patak-js and author @yyx990803 really motivated to code commit and oganization member @antfu making super inovative tools for improving Vite.)
The problem is CRA merged only 5 PR a month despite receiving about 25 Pull Request from awesome contributors.
Pinning this Issue on issues tab page top helpful for notifications to new contributors that
""Your contribution might not take a look by administrators""
I want to prevent for people wasting time cause believed following ""PRa welcome"" badge.
",2021-09-11 12:01:40.000000,14,,Non Actionable Topic
140,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"I agree in the case of PR not being looked enough.
I suppose ""maintenance mode"" of CRA should still accept contributions from community just to keep it active and address issues. as @markerikson said, we're kind of falling to waiting for the 'perfect' thing rather than keeping it 'good'
+1 to pin this issue as I believe this post spoke for most of us",2021-11-07 23:08:58.000000,15,,Non Actionable Topic
141,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,It took me 3 full days to get CRA working with Yarn PNP. It would be great if it worked out of the box.,2021-11-15 01:36:21.000000,16,,Non Actionable Topic
142,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
Before CRA, the ecosystem was hopelessly fragmented. The entire category of tools like this didn't exist — there was no Next or Gatsby or Vite and so on. The vast majority of React developers were setting up their Babel, webpack, etc, manually, and having a really bad time.

I don't think this problem that CRA was originally built to solve has gone away. Every one of those popular alternative tools comes with an extreme caveat to their usage.

Next.js and Gatsby, while nice if you need SSR or SSG capabilities, come with vendor lock in which can be harmful if you are only trying to build a SPA. Routing in particular is the worst. Both frameworks lock you into their own file based router blocking you off from the routing used by the rest of the React ecosystem. If you have a need for say the latest features of React Router v6, both are completely unsuitable. Gatsby at least uses @reach/router, though that's an old library and it's wrapped by Gasby's routing API. Next.js on the other hand is absurdly NIH. You are locked-in to a router exclusive to Next.js, with an API nothing like any other router in the react ecosystem. And even basic code splitting of react components is done using a Next.js provided module instead of the same library as the rest of the ecosystem.
Vite is the closest to CRA in it's focus on SPA and compatibility with the whole of the React ecosystem. However to use it you have to be sold on ditching the entire WebPack ecosystem for an alternative build ecosystem. And while the plugin system is nice, a couple of CRA's rightfully automatic features like macros are not built-in and have to be setup manually (using undocumented config you only find after thinking you need to use an unofficial plugin by one random developer in order to use it).

Today if you want to build a SPA with React, React-Router, and WebPack, your options are still CRA or manually configuring WebPack, Babel, etc. The use case for CRA still hasn't gone away, it still remains a critical part of React infrastructure. Just without the essential maintenance needed to keep us from going back to manual WebPack config.",2021-11-27 09:15:01.000000,17,,Non Actionable Topic
143,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@dantman one of the new alternatives is remix. altho it is really fresh in the open-source ecosystem, but it offers a similar routing experience to react-router v6.
but either way, I agree that for a SPA CRA is still very important.",2021-11-27 19:17:36.000000,18,,Non Actionable Topic
144,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"https://vitejs.dev/guide/features.html#typescript
Vite does not do type checking, so its not really an alternative for typescript since you have to fiddle with configs, so might as well use plain webpack",2021-11-27 19:37:30.000000,19,,Non Actionable Topic
145,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
@dantman one of the new alternatives is remix. altho it is really fresh in the open-source ecosystem, but it offers a similar routing experience to react-router v6.

Yes, I will keep an eye on it. However it's still more of the same problem in regards to CRA. You get RRv6 with Remix. But it is built around SSR, so it's not made for building a SPA. Likewise while I like React Router v6, if you use Remix you're then locked into RRv6. Using remix you cannot experiment with a random non-RR routers, e.g. (just randomly searching for one) wouter.

but either way, I agree that for a SPA CRA is still very important.

Yes. Specifically we still desperately need a fundamental non-framework that:

Comes with pre-configured WebPack building and the important stuff pre-configured (bundling, code splitting, css prefixing, macros, etc) whether it has a plugin system or not.
Can build a static SPA for those who already have a backend and cannot run a Node.js backend.
Is completely agnostic about everything outside of the build system. i.e. Works with any router library, API client, etc.

This doesn't have to be CRA, I could see another framework pivoting a bit and being able to handle this.

Vite could make itself a more friendly CRA and WebPack alternative. e.g. Adopt more of CRA's best practice defaults without configuration (TypeScript, macros, etc). Or at least take a page from Parcel and make things automatic. And adopt WebPacks recent web-like interfaces (i.e. the ES modules way of doing Workers instead of import MyWorker from './worker?worker';. And we could all try to ignore the fact it's not WebPack unless WebPack wants to take responsibility for there being no user friendly way to use WebPack to build a router-agnostic SPA remaining.
Next.js could get over it's NIH syndrome and separate the core from the current Next.js interface taking advantage of it's plugin system to make things more abstract. e.g. Let you plug in non-Next routers. Provide a way to implement other SSR data handling methods in plugins. Ditch next/dynamic for something like @loadable/component. Collaborate with others on a common API route interface. So Next.js with a ""SPA router"" / ""client-only router agnostic"" plugin would effectively give you CRA with minimal config and there'd be room to make SSR work with non-Next routers too.
WebPack itself could realize its losing ground (Vite, Parcel, etc are making builder config user friendly/pluggable but not using WebPack; CRA lags behind making the unmaintained WebPack 4 more popular than WebPack 5; and even the frameworks using WebPack are experimenting with non-webpack bundlers). And come up with its own config plugin/preset system that makes it only take a few lines to use an easier to maintain CRA-style WebPack config.

However none of the ones I've seen are moving in that direction and CRA remains the only way of building a SPA this way.",2021-11-27 20:27:56.000000,20,,Non Actionable Topic
146,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@dantman
I agree with you but there is some serious problem with CRA that looks like nothing progress with them:

Many open issues without any answer.
really small PR merged into the base code.
Webpack 5 was released more than 1 year ago and CRA still using webpack 4.

I am sure that there are many people that want to contribute and help but no one takes care of that or does something about that.
CRA project needs someone from the React core team or from the main contributes that will try to keep that project more updated and ""live"".We have to do that before it's will be too late.
@gaearon @iansu @ianschmitz  or whoever is relevant for that now.",2021-11-27 23:01:56.000000,21,,Non Actionable Topic
147,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,@dantman you've mentioned Parcel a couple of times without a direct comparison? My understanding is that parcel does answer many of the questions / deficiencies you've identified - is there something I'm missing?,2021-11-28 20:10:53.000000,22,,Non Actionable Topic
148,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
@dantman you've mentioned Parcel a couple of times without a direct comparison? My understanding is that parcel does answer many of the questions / deficiencies you've identified - is there something I'm missing?

@andycarrell Parcel like Vite is another of the non-WebPack systems. It also has the same issue @utajum mentioned about not doing TypeScript type checking.
I mostly skipped over it because no-one else mentioned it. Though I also have ignored it because it's the one I have prior experience with, one bad experience. Some time ago I tried porting a CRA app to Parcel. It failed with a very cryptic and unhelpful error. I couldn't find any fix for the issue or any way to troubleshoot it and figure out what was not working. So I just had to give up on Parcel entirely. So I don't know how Parcel is currently, but I didn't have a good experience with it the one time I tried to use it.
It looks like Parcel has a new major version since then. So I could take a look at it again. However parcel-bundler/parcel#4155 concerns me and makes me feel like it's no more maintained than CRA (this was fixed in WebPack 5 and I'm waiting for CRAv5 so I can update one of my deps; a bundler that doesn't use WebPack but has a major issue WebPack already fixed doesn't bode well, CRA's only problem here is being out of date, Parcel's is whether the core build system is being maintained).",2021-11-28 21:03:16.000000,23,,Non Actionable Topic
149,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@dantman very good point re typescript I wasn't aware of that limitation, although the docs seem to suggest it works out of the box? https://parceljs.org/languages/typescript/
I think the rest of your comments are quite unfair to parcel.
It's far more well maintained than CRA - a major version has been recently released and patched within the last few weeks. The reason I mentioned it in the first place is I've had the opposite experience, I found version 2 very easy to switch to from CRA v3.
I'd hate to rule it based on one or two bad experiences, and it should be considered as a viable alternative",2021-11-29 17:35:49.000000,24,,Non Actionable Topic
150,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@dantman @andrei9669 @OriAmir
I had the same needs as you guys for CRA, so I created a CRA-like React+TS starter based on Vite for my personal use.
vite-react-ts-extended
Installation is quite easy,
If you want to create a plain React+TS programming environment, I'm glad to anyone try it. 🐰
Installation


or npm
",2021-11-29 17:40:36.000000,25,,Non Actionable Topic
151,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
@dantman very good point re typescript I wasn't aware of that limitation, although the docs seem to suggest it works out of the box? https://parceljs.org/languages/typescript/

The limitation utajum mentioned is that Vite (and Parcel) do turn TypeScript into JS, but they do not actually typecheck (validate the types) like CRA does. So the dev server doesn't tell you that you've written invalid code and lets it run anyways, effectively killing half the point of TypeScript.

I think the rest of your comments are quite unfair to parcel. It's far more well maintained than CRA - a major version has been recently released and patched within the last few weeks. The reason I mentioned it in the first place is I've had the opposite experience, I found version 2 very easy to switch to from CRA v3.

The big problem though is what each is based on. CRA is based on WebPack, Parcel is based on the parcel bundler. CRA is poorly maintained, however it's based on a well maintained bundler. In the worst case scenario you can still eject CRA and you'll be in a well maintained bundler ecosystem (though you'll have to upgrade to be on a supported version). Parcel however while better maintained than CRA, is based on a bundler specific to Parcel. And apparently from the issue I referenced, the bundler is not as well maintained as WebPack as it has a critical limitation that WebPack fixed a year ago (even if CRA hasn't incorporated it yet).

I did a little bit of experimentation with Vite as well today. It has some promise. However it needs a decent bit of polish to be CRA equivalent. Various bits of basic CRA functionality like SVGR were missing and I had to search through a 3rd party plugins list to find them. I also ran into issues with some important CommonJS/Node based dependencies of mine not working with Vite/rollup and I needed to hunt down plugins and bespoke config to make it work, with only Google searches and comments on random bug reports to answer what I needed to do to make these CommonJS/Node packages work.
However I still thing there's an argument to be made that there is still value in having a WebPack based way of easily building SPAs. Whether that's a well maintained CRA equivalent or something Vite/Parcel-like but based on WebPack.
Edit: And I haven't even gotten to production building yet. Which appears to depend on you running TSC separately from Vite (some concerns about that approach) and needs extra manual config to build a best practice SPA, instead of best practice being the default.",2021-12-01 05:50:35.000000,26,,Non Actionable Topic
152,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"As I said, I still think there's an argument to be made for having a WebPack based ""framework"" (for lack of a better word). WebPack is effectively still the de-facto bundler and IMHO there should be a way to use it without A) needing to write 500+ lines of config to setup the basic best practices, B) being locked into a single router implementation, or C) being stuck with the obsolete version of WebPack for over a year.
Yes, other non-WebPack bundlers exist. But they may function differently and there's always a reasonable argument for using the de-facto/most widely used bundler/compiler/etc.
CRA/Next.js/Gatsby, Vite, and Parcel are based on different bundlers. I've already went over the issues with Next.js/Gatsby.



""Framework""
Bundler
JS compiler




Create React App
WebPack
Babel


Next.js*
WebPack
Babel (alt. SWC)


Gatsby*
WebPack
Babel


Vite
rollup
Babel (alt. esbuild)


Parcel
parcel-bundler
Babel



CRA/Next.js/Gatsby are the most widely used ""frameworks"", though Vite is catching up to Gatsby. I wont press much on this since the usage of the underlying bundler is what really matters.

https://www.npmtrends.com/gatsby-vs-next-vs-react-scripts-vs-vite-vs-parcel
Behind these ""frameworks"" lie the real important components, the bundler (WebPack, Rollup, and the Parcel bundler) and the JS compiler used to compile/transpile the JavaScript (and maybe TypeScript) to JS that all* browsers will understand (Babel, SWC, esbuild).
You can of course argue that popularity doesn't matter for ""framework"" ecosystems. For just a SPA the ""framework"" is pretty lightweight and if worst comes to worst all you have to do is eject/rebuild the config used to run the underlying bundler and you can still build your app even if the ""framework"" dies. Or just write a PR for the ""framework"" since it's the least complex part of the build process.
The bundler however is different. The bundler is what implements compatibility with the wider package ecosystem/browsers/etc. If bundler is not maintained you can end up incompatible with packages you depend on, missing new functionality in react/etc, your build process breaking in new versions of Node. And you can't eject out of your bundler or easily write a PR to fix these complex issues yourself. So in this case it's a good idea to use something that lots of people depend on working, lots of people have an incentive to troubleshoot and fix bugs in, and lots of people have an incentive to sponsor.

https://www.npmtrends.com/@babel/core-vs-@parcel/bundler-default-vs-@swc/core-vs-esbuild-vs-rollup-vs-webpack
Though maybe that's a lot of words to effectively say. The bundler's maintenance is the most important part of the chain and I don't really trust a ""framework"" (Parcel) that uses a bundler used exclusively by that ""framework"" (parcel bundler) especially when that bundler is used by effectively no-one, less than a JS compiler built by one developer, and is already missing compatibility fixes that other bundlers fixed a year prior.
You'd of course be right to argue that other bundlers like rollup are enough above the usage threshold that it's safe to use the ""frameworks"" based on them. But it's also entirely fair to expect that the current version of the bundler with the most use (by 3x) would have a quick and easy way to build a SPA using best practices and any router library.

I might have to re-visit this comparison with Snowpack in the mix. Though examining it it seems to have some issues too:

At first glance you might think Snowpack is a WebPack bundler based framework as it uses WebPack (or rollup in the future) to make your build. However WebPack is only run as a final step in the production build, it's not involved during development. So you can't actually meaningfully use WebPack plugins that have anything to do with syntax (SVGR, SASS, autoprefixer, etc...) you need to use Snowpack plugins for that. And even if WebPack fixes compatibility with module loading pattern changes in the NPM ecosystem, Snowpack also needs to update its handling or things will break in dev. So it's effectively actually a snowpack-specific bundler like parcel-bundler, just with the ability to tack on any production code optimizations WebPack/rollup make. (Though to be fair, they fixed the compatibility issue that Parcel still has, so they're not as bad)
Snowpack, like Vite, appears to also be missing CRA functionality out of the box requiring extra config. Maybe more than Vite's, but the extra config needed for Vite is growing each time I look deeper.


Another thing worth saying. If we truly think that CRA should die in maintenance mode and that Vite and/or Snowpack are the future. Then we need to make it painlessly easy to convert a CRA project to them. We need documentation on what conversion is needed (both use different ENV syntax; Vite uses a different index.html location and structure; Vite needs extra production config; both seem to require converting .js to .jsx if you use JSX; etc). For every feature CRA uses, we need user friendly documentation on how to get that feature working in Vite/Snowpack if you need it (SVGR, macros, CommonJS/Node based package compat). And we need codemods to assist the conversion.",2021-12-01 09:01:21.000000,27,,Non Actionable Topic
153,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Hi all. I am one of the Parcel maintainers. If we can help here, we'd love to!
About the issues mentioned in this thread:

TypeScript type checking – is possible through validator plugins, however these are currently experimental. It's on our roadmap to significantly improve them soon.
Package exports field – is on the short term roadmap. We were focused on getting v2 shipped before tackling too many more features, but now that it's done, it's on my list in the next couple weeks.
Parcel uses SWC by default for transpilation rather than Babel, and we implemented our own Rust-based compiler on top of it for tree shaking etc. However, it's extensible via plugins and Babel is also supported by default.
Unlike Vite/Rollup, it should work out of the box with all npm packages (e.g. written with CommonJS).
In regards to maintenance, Parcel has a very active core team including several full-time contributors working for Atlassian.

We're also going to be building a project scaffolding tool similar to create-react-app soon. This will make starting up a new project easier, and we'll have different templates e.g. for React, different styling tools, etc. We'd love input from all of you on what the default React template should include.
If anyone on this thread would like to help with the above, we'd love to have you. We'd be open to working with the CRA project in any way that's helpful to the ecosystem. Overall, I think Parcel and CRA's philosophies are very similar. We want to make it as easy as possible to get started with a pre-configured setup. Where Parcel differs is that it should also be easy to extend as your project grows.",2021-12-03 02:34:49.000000,28,,Non Actionable Topic
154,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Go away Parcel, we like CRA except it doesn't have maintainers at the moment.",2021-12-03 05:50:25.000000,29,,Non Actionable Topic
155,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"I'm not really understand the point of this topic..
The original idea was to think how we keep maintains CRA and keep him alive but it's fells like it's been issue of comparing CRA to Vite and Parcel.. I think we miss the point of the actual problem.",2021-12-03 20:55:11.000000,30,,Non Actionable Topic
156,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
I'm not really understand the point of this topic..
The original idea was to think how we keep maintains CRA and keep him alive but it's fells like it's been issue of comparing CRA to Vite and Parcel.. I think we miss the point of the actual problem.

The original question was about CRA maintenance. But one of the co-creators has said CRA is intentionally in maintenance mode and they believe that CRA's purpose has been supplanted by Next.js/Gatsby/Vite/etc.
However CRA is still the most widely used of these and there are still some categories of users/projects whom are only properly served by CRA.
So the actual problem right now is:
""CRA is not being properly maintained, but there is still a category of users who's needs are only directly served by CRA. What should be done for these users?""
Vite/Parcel/Snowpack have come into the conversation because Gatsby/Next.js are not equivalent replacements for CRA and Vite/Parcel/Snowpack are the closest to CRA at least as far as what they build (a React based SPA with no restrictions on what client-side React libraries you can use).
With the caveat that none of them have an equivalent default configuration to CRA. With manual config needed to re-enable many of CRA's features and best practices for browser compatibility. And the caveat that none of them are WebPack based which raises some questions to discuss about replacing the most widely used SPA building tool using the most widely used bundler, with a SPA building tool not based on the most widely used bundler.",2021-12-03 21:35:44.000000,31,,Non Actionable Topic
157,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
With the caveat that none of them have an equivalent default configuration to CRA. With manual config needed to re-enable many of CRA's features and best practices for browser compatibility. And the caveat that none of them are WebPack based which raises some questions to discuss about replacing the most widely used SPA building tool using the most widely used bundler, with a SPA building tool not based on the most widely used bundler.

@dantman Thanks for the detail
Answer.
So, what you say actually that CRA not going to release any more major releases and we should hope that all CRA features will be in the future in Vite/Parcel ?
Actually CRA 5 is very close to Beta version and it's work pretty well..so I'm confuse already.",2021-12-03 22:10:46.000000,32,,Non Actionable Topic
158,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Problem root is priority of the company.
Metaverse >>>>>>>>>>>> CRA
@devongovett Thank you for your friendly comment from Parcel community!
That will must be helpful for us!",2021-12-06 05:00:59.000000,33,,Non Actionable Topic
159,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
So, what you say actually that CRA not going to release any more major releases and we should hope that all CRA features will be in the future in Vite/Parcel ? Actually CRA 5 is very close to Beta version and it's work pretty well..so I'm confuse already.

I think what we're missing here is some communication from the current maintainers (or at least those currently working on v5). We're just looking for a decision on the future of CRA. If the decision is to go into maintenance mode that's fine, we just need that communicated.
My biggest concern is that the brand new ReactJS docs are advocating for the use of CRA here. Though it's good to get users started, they may get the wrong impression that CRA is actively maintained and eventually choose to start a production app with it.",2021-12-07 17:06:57.000000,34,,Non Actionable Topic
160,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"
I think what we're missing here is some communication from the current maintainers (or at least those currently working on v5). We're just looking for a decision on the future of CRA. If the decision is to go into maintenance mode that's fine, we just need that communicated.

I would also say that if the final decision is that CRA is in maintenance mode because people should be trying other things. The only proper way to do that would be to have documentation on how to migrate / setup the other frameworks with equivalent functionality to CRA.
Basically every one I checked (Vite/Snowpack/Parcel) required manual config for some portion of CRA's functionality:

Autoprefixing CSS + PostCSS Normalize
SASS
SVGR
macros
eslint
Jest
Storybook
PWA/service-worker.js

Some of these missing bits being basic best practices for ensuring what you build in production is compatible with people's browsers. Or ensuring you don't write coding mistakes.",2021-12-07 18:16:08.000000,35,,Non Actionable Topic
161,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@cmacdonnacha @dantman I really agree with both of you !
My question is who could give us answers or decide something about that ? I don't see any comment from ""official"" member of CRA.",2021-12-07 20:58:03.000000,36,,Non Actionable Topic
162,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Hi everyone!
It seems that CRA 5.0 is out: https://github.com/facebook/create-react-app/releases/tag/v5.0.0
Thanks to the mainteners! 😊",2021-12-14 22:12:14.000000,37,,Non Actionable Topic
163,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"@gaearon , I think that you can close this issue, what do you think?",2021-12-15 13:46:25.000000,38,,Non Actionable Topic
164,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Just tried 5.0 and there were a few problems. Given that issues in this repo are just collecting dust or locked by the stalebot, what should we do? Should we file issues for 5.0?",2021-12-15 20:07:50.000000,39,,Non Actionable Topic
165,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"Yes, you should file issues for v5. We're aiming to do a patch release in a couple days.
I'm going to convert this issue into a discussion.",2021-12-15 21:22:13.000000,40,1.0,Non Actionable Topic
166,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"A suggestion: please stop using stale-bot to limit discussion. E.g. there is an issue from 1 year ago which is locked, if I have a working fix I can't go and contribute that. Who benefits from limiting and hindering the free flow of ideas? I suppose it is fine to close an issue for bookkeeping but limiting is not OK.",2021-12-17 02:55:12.000000,41,,Non Actionable Topic
167,https://github.com/facebook/create-react-app/discussions/11768,2021-07-06 10:41:46.000000,"This post is exactly for here.
https://blog.filippo.io/professional-maintainers/",2021-12-17 04:09:00.000000,42,,Non Actionable Topic
168,https://github.com/facebook/docusaurus/discussions/5810,2021-10-28 07:12:55.000000,"It's impossible for us to help you without further information about setup, Docusaurus version, etc. Also, GH issues is not for questions. If you feel like it's a bug, please use the bug template; otherwise, let's move to discussions.",2021-10-28 08:15:30.000000,1,1.0,Invalid issues
169,https://github.com/fomantic/Fomantic-UI/discussions/1771,2020-11-16 07:45:39.000000,"AFAIK the SUI react people are working on a provider layer to support fomantic.
I am turning this issue into a discussions thread",2020-11-16 07:49:14.000000,1,1.0,Non Actionable Topic
170,https://github.com/fomantic/Fomantic-UI/discussions/1771,2020-11-16 07:45:39.000000,"We would need volunteering, responsible active maintainers with internal SUIR knowledge for such a task. Even if people would contribute, there must be some people doing serious reviews for quality merging, understanding the existing SUIR Core library in it's detail to make sure everything works altogether. Those people should also be aware for additional active development whenever FUI is updated.
The FUI core team can't accomplish this. So ""just"" forking SUIR is the wrong sign to the community IMHO. They will at least expect an initial release to be fully compatible to FUI (not even SUIR is fully compatible to SUI )
If we just fork it, most people will start complaining that several things won't work (because they simply don't exist in SUIR yet like calendar, slider, toast). And with nobody actively maintaining it, it's likely to become the same situation as SUI is today.
Remember, at least all (missing) JS modules have to be recreated in a FUIR which is quite a challenging task.
@kevinresol Would you like to become a possible first active maintainer of such a fork? 😉",2020-11-16 08:06:19.000000,2,,Non Actionable Topic
171,https://github.com/fomantic/Fomantic-UI/discussions/1877,2021-02-08 12:55:37.000000,"From my understanding a perfect CLS is about reserving exact space for content which is lazy loaded, so space does not change when the area appears. (Please correct me, if i am mistaken.)
Isn't this something the webpage designer has to take care of? Rather than the framework?
You may use placeholder for that purpose.
Other than that, i cannot see any issues when scrolling the mentioned sticky demopage (which is only there to demonstrate the sticky module anyway)",2021-02-08 18:59:37.000000,1,,Not a Bug
172,https://github.com/fomantic/Fomantic-UI/discussions/1877,2021-02-08 12:55:37.000000,"Moving to discussion, because this is a question of individual page layout and not a framework bug.
High CSL on the sticky demo page is natural, because changing content position is the general usecase of the sticky module",2021-02-08 21:33:32.000000,2,1.0,Not a Bug
173,https://github.com/FormidableLabs/victory/discussions/2114,2022-01-20 13:00:12.000000,"@vlopezitrs Have you tried to make use of the standalone prop? If you set standalone={false}, I think that will allow you to do what you want, just like in this page: https://formidable.com/open-source/victory/guides/custom-charts
Using standalone={false} does require a little more work on your part because the <svg> element is not automatically made for you, but if you want more control over data with multiple axes, this seems like the way to go.",2022-02-09 21:59:47.000000,1,,Non Actionable Topic
174,https://github.com/FormidableLabs/victory/discussions/2114,2022-01-20 13:00:12.000000,"Hi @vlopezitrs, I'm going to convert this to a discussion thread.",2022-02-15 22:58:22.000000,2,1.0,Non Actionable Topic
175,https://github.com/FormidableLabs/victory/discussions/2116,2021-12-16 23:26:45.000000,"Hi @johnnywang, I'm going to move this issue to a discussion thread so we can continue to discuss it there.",2022-02-15 23:37:03.000000,1,1.0,Non Actionable Topic
176,https://github.com/FormidableLabs/victory/discussions/2118,2021-12-17 03:52:00.000000,"Hi @kieuquang1110tt, when you get a chance do you mind throwing this in code sandbox? That would make it easier for me to see what is going on.
My guess at the moment is that the Victory style prop only supports specific attributes, and you might need to use a custom component to have a little more control.
",2021-12-24 23:14:50.000000,1,,Non Actionable Topic
177,https://github.com/FormidableLabs/victory/discussions/2118,2021-12-17 03:52:00.000000,react native 中如何实现？？,2022-01-05 08:11:46.000000,2,,Non Actionable Topic
178,https://github.com/FormidableLabs/victory/discussions/2118,2021-12-17 03:52:00.000000,"@kieuquang1110tt 可以实现，采用以下代码：
",2022-01-15 08:51:06.000000,3,,Non Actionable Topic
179,https://github.com/FormidableLabs/victory/discussions/2118,2021-12-17 03:52:00.000000,"Hi @kieuquang1110tt, I'm going to convert this help request to a discussion thread to prevent it from getting lost in issue reports. Thanks!",2022-02-15 23:39:47.000000,4,1.0,Non Actionable Topic
180,https://github.com/gatsbyjs/gatsby/discussions/28126,2020-11-17 13:15:09.000000,Hi @jasonbiondo . I'm going to convert your issue to a discussion :),2020-11-17 13:19:57.000000,1,1.0,Non Actionable Topic
181,https://github.com/gatsbyjs/gatsby/discussions/28126,2020-11-17 13:15:09.000000,"You can do this with custom resolvers using createResolvers API. See those links for some examples:
https://www.gatsbyjs.com/docs/node-apis/#createResolvers
https://github.com/gatsbyjs/gatsby/blob/master/examples/using-type-definitions/gatsby-node.js
Also in blog posts:
https://www.gatsbyjs.com/blog/2019-03-04-new-schema-customization/
https://www.gatsbyjs.com/blog/2019-03-18-releasing-new-schema-customization/
Also given your description, something like this will probably work:
",2020-12-07 18:54:00.000000,2,,Non Actionable Topic
182,https://github.com/gatsbyjs/gatsby/discussions/29449,2021-02-11 02:34:14.000000,"Hi. This is a good idea. I'm going to convert this to a discussion, as it's a feature request, but it does look like something we should look into. If anybody would like to open a PR, it would be welcome.",2021-02-11 11:21:50.000000,1,1.0,Non Actionable Topic
183,https://github.com/gatsbyjs/gatsby/discussions/31260,2021-05-05 10:48:40.000000,"Running pngcheck on the image shows this:

So this is a user error (and works as expected) thus I moved this into Discussions. You'll need to check how you exported that image to fix it for libpng",2021-05-05 12:04:32.000000,1,1.0,Not a Bug
184,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"I also have this issue. Although there was no page-change, all pages get rebuild. This was working in Gatsby v2 behind the experimental conditional build flag.
A log output:
",2021-03-12 07:01:46.000000,1,,Already fixed
185,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"@feedm3 thanks I'm somewhat happy to see it's just me :)
Can you reproduce on some open repository or is yours private as well?",2021-03-12 07:07:44.000000,2,,Already fixed
186,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,Unfortunately it's on a private company repositry which I'm not allowed to share :-/,2021-03-12 07:09:11.000000,3,,Already fixed
187,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"

I build.
I make a change in a single JSX page, and I see the build is slow and all of the pages are updated.


This is expected, changing jsx result in changed webpack compilation. Some assets generetad by webpack WILL have changed hashes in filenames so we do have to regenerate pages so <link> and <script> tag point to correct (new) bundles.


I build again without any changes and I see verbose Found 102 changed pages. Still slow.


Right but still no .html files were built:

info There are no new or changed html files to build.

So the feature work. The biggest time consuming step is webpack compilation which we will look to be more cachable and take less time",2021-03-12 10:39:01.000000,4,,Already fixed
188,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,I'll see if I can bake in some logging on WHY pages are marked to rebuild - specifically for cases when all pages are marked to rebuild,2021-03-12 10:53:23.000000,5,,Already fixed
189,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"Just a note: If I run the build with --log-pages all pages get printed after the build. Although there were no changes, neither in code nor in data. For me this means that all .html files were rebuild.
Other then that it would be super helpful to see the reason why a page was rebuild 🙂",2021-03-12 14:05:35.000000,6,,Already fixed
190,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,@pieh Did this work differently with the GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES in 2.x ? Because I see a noticeable difference.,2021-03-12 20:46:17.000000,7,,Already fixed
191,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"same issue exist at Hello world gatsby starter example , simply add a new page under Pages folder then change text in 1 page only and build the project u will see that 2 pages are updated",2021-03-13 04:06:03.000000,8,,Already fixed
192,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"
@pieh Did this work differently with the GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES in 2.x ? Because I see a noticeable difference.

There were some changes and handling of cases that weren't handled before (for example changes to static queries). Here's rough outline on what was changed since v2 - #29140",2021-03-13 10:53:36.000000,9,,Already fixed
193,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"For folks reporting that all pages always get rebuilt - can you try installing gatsby@alpha-inc-build-diag and running gatsby build --verbose --log-pages couple times? This version just adds some diagnostic logging (it doesn't change any behaviour) - this is just to start pinpointing potential reasons.
Example output I'm looking for will look something like this:
",2021-03-13 12:10:55.000000,10,,Already fixed
194,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"
For folks reporting that all pages always get rebuilt - can you try installing gatsby@alpha-inc-build-diag and running gatsby build --verbose --log-pages couple times? This version just adds some diagnostic logging (it doesn't change any behaviour) - this is just to start pinpointing potential reasons.
Example output I'm looking for will look something like this:


this is the result for my project with 10500 page ,
",2021-03-13 12:22:24.000000,11,,Already fixed
195,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,@ahmadkhalaf1 is this from first build or subsequent build? the FLAG_DIRTY_NEW_PAGE flag indicates to me that either those pages were not built before (so it works as expected) or that this FLAG get set wrongly when it shouldn't (but so are rest of the flags). I'm not sure if I will be able to figure this out without access to reproductions for this :(,2021-03-13 12:49:43.000000,12,,Already fixed
196,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"
@ahmadkhalaf1 is this from first build or subsequent build? the FLAG_DIRTY_NEW_PAGE flag indicates to me that either those pages were not built before (so it works as expected) or that this FLAG get set wrongly when it shouldn't (but so are rest of the flags). I'm not sure if I will be able to figure this out without access to reproductions for this :(

Sadly this is from subsequent builds :( and its a private repo for my company.
But I tried incremental build with gatsby fresh hello world project,  and the result is the same , maybe u can test the nre version there .",2021-03-13 12:59:57.000000,13,,Already fixed
197,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"I did a bunch of incremental builds with gatsby@alpha-inc-build-diag and the results were always the same:

I didn't do any data change, which was reported correctly by Gatsby:



Every very page gets rebuild for the same reason:


Edit 1: I could resolve FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED. Via gatsby-plugin-build-date we are using a static query to get the current build time. This query is used in our shared Layout component that is used in every template. As the build time changes on an incremental build, the static query result was different and all pages need to be rebuild. We removed the static query from our Layout component and just put it into very unique page that is only build once.
Edit 2: I finally fixed it! The fix is quite special for our project, but maybe it helps others to spot it in their project. It was a ""trial and error"" approach: deleting all code in the gatsby-ssr, changing some config in the gatsby-config and removing some createPages variables until the incremental build was working. In the end, we had 2 problems:

tl;dr: Check for all usages of Date in your create-pages files and gatsby-config. It changes between incremental builds and could therefore be the reason why all pages need to rebuild.

Like in the static query, we also used the date in a shared Gatsby context object we put into every createPage. It looks kinda like this:

I just removed it, as it was not necessary anymore in this project. The information is also redundant as we already have it with the build date plugin.
The second problem was even more unique: Due to some infrastructure constrains we need to copy all assets into a separate subfolder. We are using gatsby-plugin-asset-path for this. The gatsby-config looks like that:

The problem there was the Date.now().toString() method. With an incremental build, the date changed which resulted in the flags FLAG_DIRTY_BROWSER_COMPILATION_HASH and FLAG_DIRTY_SSR_COMPILATION_HASH. The fix was to just remove the date in the path. We added it right at the begging of the project to make sure caching was always working between deploys. This is not necessary as a proper Nginx config already handles that.
Conclusion
Incremental build are now working for us. Only the nodes we change get rebuild, all other pages stay the same 🎉
Gatsby was working correctly all the time. The problems we had were valid reasons to rebuild all pages. The issue is that it's very complicated to track down the problem. The log messages was super helpful to spot the issues, I would propose that the flag-log-message makes it into the normal Gatsby package! It would also be helpful to make the error messages more detailed - not sure if this is technically working (like ""there was a change in your gatsby-config"") - and to have a documentation for every flag that helps to track down the error.",2021-03-16 07:40:35.000000,14,,Already fixed
198,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"It looks like there is one small bug: After Gatsby went through all create-pages it prints

It rebuilds only 1 changed page (the one that was changed, so this is correct) but it says that 1823 pages were changed. So the log message is not correct here.",2021-03-17 07:18:50.000000,15,,Already fixed
199,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"@feedm3 thanks for super detailed description of what was causing to not hit ""happy path"" for inc builds. I do wonder now what kind of diagnostic information we could actually display to users to help with tracking root causes down because gatsby@alpha-inc-build-diag doesn't really have a lot of details and is just starting point to know what to look for

It rebuilds only 1 changed page (the one that was changed, so this is correct) but it says that 1823 pages were changed. So the log message is not correct here.

Agree, it's confusing (especially because that part of logs actually doesn't relate at all which html files get rebuild :( )",2021-03-17 10:31:30.000000,16,,Already fixed
200,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"Ok, maybe in absence of better diagnostic tools so far I could propose following flow to make it easier to pin point what is actually changing and where to start looking for things in site (or used plugins):

What this should do is to actually print which files DID change in what way - this will be a looooong output for larger sites so maybe consider piping it to a file diff -u -r public-first-build public > build-diff.txt. And secondly - it will contain .html file changes themselves which might be harder to track down so also consider using --exclude=""*.html"" options if the output is dominated by those and it's hard to track down root cause.
The --no-uglify flag is just to disable .js files minification, so when there are changes there it's easier to track them down to actual sources",2021-03-17 10:56:44.000000,17,,Already fixed
201,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"
Ok, maybe in absence of better diagnostic tools so far I could propose following flow to make it easier to pin point what is actually changing and where to start looking for things in site (or used plugins):

What this should do is to actually print which files DID change in what way - this will be a looooong output for larger sites so maybe consider piping it to a file diff -u -r public-first-build public > build-diff.txt. And secondly - it will contain .html file changes themselves which might be harder to track down so also consider using --exclude=""*.html"" options if the output is dominated by those and it's hard to track down root cause.
The --no-uglify flag is just to disable .js files minification, so when there are changes there it's easier to track them down to actual sources

so i have tried your steps , and now i have the build-diff.txt file for my 10500 page :) and i understand nothing from it , its mixed up and super hard to know anything inside , any hint what should i look for or how can i read it ?
Thanks",2021-03-18 02:01:07.000000,18,,Already fixed
202,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"
so i have tried your steps , and now i have the build-diff.txt file for my 10500 page :) and i understand nothing from it , its mixed up and super hard to know anything inside , any hint what should i look for or how can i read it ?

So generating diff is first step - just to talk concretely - here's example diff I created replicating some of what feedm3 described in their comments - https://gist.github.com/pieh/f0e10a2b8a4eb33177c85cf0a80fb0e3 - I used diff -u -r --exclude=""*.html"" public-first-build public > inc.diff to remove some of the noise that .html changing would add to the diff.
DISCLAIMER: this is just example - it will be unlikely that it can apply to every situation - this is more showing general steps of tracking down root cause
The few things you can get from it are:
Genareted JS bundle did change
You can tell by seeing that both chunk-map.json and webpack.stats.json are different and also content of app-data.json - on top of that you get lines like Only in public: component---src-pages-index-js-2b24b822e1fe82516116.js - this tell you that something in that component changed (there is no diff because hash in file changed so filenames for them changed) - from here you can compare in next step is exact diff between assets generated for that page template - it would be something like https://www.diffchecker.com/HbqV7mlf - ok now we see that Date is inlined in js files and that date will change between builds - then it's matter of finding this piece in source code and going from there to understand what can be done about it. In my case it was quite straight forward because I did that on purpose, but source of it was <div>Define plugin: {process.env.DEFINED_DATE}</div> and I defined process.env.DEFINED_DATE in gatsby-node:

Used data has changed
Other things in the diff is we see changes in:
a) page-data/sq/d/2907560070.json
b) page-data/using-typescript/page-data.json
files. Those are results of a) static query (sq/d/<number>.json gives it away ) and b) page query
Page query is quite straight forward to figure out because it points to actual page and you can see what data changed.
Static query is a bit more messy - you can see what content changed but not quite easily to tell which static query it is - we don't expose much information about it, so probably fastest way is just to check static queries you have in your site and just match the result from .json file to static query in your code by comparing what data is there and what you query in those. So result in public is something like:

And I track it down to static query in one of my components that is used in all pages:

Because it's used on all pages, when result of it changes, it will ""invalidate"" all html files (of course there can be situation when static query is used on subset of all pages too, but point is that changing it can invalidate 1 or more pages)
Note - you can see additional changes in the diff like _headers (that's from gatsby-plugin-gatsby-cloud / gatsby-plugin-netlify type plugins and rss.xmlthose changes are result of changes listed above and would suggest to not put attention (those should not be source of problems - they just manifest them for similar reason inc builds doesn't work). Focus on changes in .js files and in page-data directory",2021-03-18 11:19:54.000000,19,,Already fixed
203,https://github.com/gatsbyjs/gatsby/discussions/31283,2021-03-11 21:15:29.000000,"Since we added a doc page about these pitfalls and there's nothing to ""fix"" here I'll move this to discussions :)",2021-05-06 12:22:32.000000,20,1.0,Already fixed
204,https://github.com/gatsbyjs/gatsby/discussions/31439,2021-05-16 18:32:07.000000,"Hey, please read the other already existing discussion on this, you should find your solution there: https://github.com/gatsbyjs/gatsby/discussions?discussions_q=m1+mac",2021-05-17 07:55:18.000000,1,1.0,Already fixed
205,https://github.com/gatsbyjs/gatsby/discussions/31445,2021-05-11 14:28:34.000000,The relevant discussion seems to be happening here: https://answers.netlify.com/t/gatsby-fails-to-build-pages-on-netlify-webpackerror-minified-react-error-65/37513/6,2021-05-17 08:29:15.000000,1,1.0,Already fixed
206,https://github.com/gatsbyjs/gatsby/discussions/31493,2021-05-19 06:31:19.000000,"I'm facing this exact same issue, I was able to resolve the build errors by adding the following config in my gatsby-node.js file:

But i'm now facing a runtime error within Netlify CMS following this ""ReferenceError: process is not defined"" when trying to edit a MDX based blog.",2021-06-10 10:29:58.000000,1,,Others
207,https://github.com/gatsbyjs/gatsby/discussions/31493,2021-05-19 06:31:19.000000,Any update on this issue?,2021-10-06 20:45:55.000000,2,,Others
208,https://github.com/gatsbyjs/gatsby/discussions/31493,2021-05-19 06:31:19.000000,Howdy - also facing the same issue here.,2021-11-12 22:39:45.000000,3,,Others
209,https://github.com/gatsbyjs/gatsby/discussions/31493,2021-05-19 06:31:19.000000,"Also having this error. Why was this converted from a bug to a ""discussion"" (and then not discussed by any of the devs)?
I was able to address the issue with no subsequent errors using a variation on @ryanerringtonatom's fix above:
",2021-12-08 11:49:04.000000,4,1.0,Others
210,https://github.com/gatsbyjs/gatsby/discussions/31493,2021-05-19 06:31:19.000000,"I cannot tell you why. But I had to apply the following two changes to resolve the issues my repo experienced.
In gatsby-config.js:

And in gatsby-node.js:

At least in my repo, adding one or the other does not seem sufficient. I needed to add both to prevent build errors. 🤷",2022-02-05 19:19:10.000000,5,,Others
211,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,"I have the probably same error. On Windows and MacOS. Have spent about 4 hours pinning it down so far 😢.
In my case yarn dev also works on Windows, but yarn build fails:

This error did not help me much, even after lots of googling.
On MacOS it fails when running yarn dev mentioning yoga-layout-prebuilt. Which according to yarn why is used by gatsby-cli:

My project worked well until I updated all gatsby dependencies today.
I tried reverting gatsby-cli from 3.10.0 to 3.5.0. Now on MacOS yarn dev works and yarn build returns the same error as Windows (node:crypto).
I am at a total loss as to how to get this project to build again.",2021-07-21 14:55:07.000000,1,,Not a Bug
212,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,"I found the culprit in my case:
md5-hex added

when updating from 3.0.1 to 4.0.0.
See: https://github.com/sindresorhus/md5-hex/blob/199598328d4d11b938f86a9ba9b82dc0796c8331/index.js, listed in sindresorhus/md5-hex@v3.0.1...v4.0.0
Is this an issue in md5-hex or gatsby?",2021-07-21 21:13:08.000000,2,,Not a Bug
213,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,"So it seems that webpack no longer polyfills for node.js beginning at version 5 (source: https://stackoverflow.com/a/67335037/712005). So I had to alter the webpack config to do it like this:

and add crypto-browserify ad dev dependency: yarn add --dev crypto-browserify.
Well, that's what I thought would solve the issue. But id does not 😢.",2021-07-21 21:42:50.000000,3,,Not a Bug
214,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,"It seems to me that explicitly requiring from 'node:crypto' overrides any polyfills added for crypto.
So that would be the problem. Thus the issue would be in md5-hex as it claims to be usable in the browser too (""Works in the browser too, when used with a bundler like Webpack, Rollup, Browserify."").
Does that sound correct?",2021-07-21 21:49:16.000000,4,,Not a Bug
215,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,"@pmarxbraun The reproduction you linked doesn't work for me. Can you make sure the link is correct?
@barbalex I think your problem is unrelated to this and sindresorhus/md5-hex#17 seems the right place to ask :)",2021-07-22 06:25:04.000000,5,,Not a Bug
216,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,@LekoArts can you try this one https://github.com/pmarxbraun/youggy-test ? Thanks,2021-07-22 07:40:14.000000,6,,Not a Bug
217,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,Since this is a project of yours and not a minimal reproduction I moved this to Discussions as the problem most probably lies in your code (my test project worked with client-only without problems). I guess you have some incorrect import/export somewhere or react-leaflet is making problems. You can google the error for more information.,2021-07-22 11:36:44.000000,7,1.0,Not a Bug
218,https://github.com/gatsbyjs/gatsby/discussions/32478,2021-07-21 14:26:37.000000,Ok here's the fix ...,2021-07-23 14:47:10.000000,8,,Not a Bug
219,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,cat robot$project+test.json | jq .secret,2021-03-03 04:34:07.000000,1,,Information storage
220,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,docker login harbor.domainname.local --username $(jq -r .name robot$project+test.json) --password $(jq -r .secret  robot$project+test.json),2021-03-03 04:59:27.000000,2,,Information storage
221,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,"Yes, I know about jq. But this tool is not installed by default on most distros. I'm distributing the robot files to third parties and it would be great if it would just work out-of-the-box instead of me explaining to them how to install and use jq correctly.
Also, your code snippets are wrong: you didn't escape $ so everything following it will be interpreted as an env var name and expanded to an empty string since those env vars are most likely undefined. That nicely supports my argument above.
Using $ in the user and filename is another design choice (orthogonal to this one) that impacts UX for no reason that is apparent to me. But I'm hesitant to open an issue about that one since fixing it impacts backwards compatibility for existing user names.",2021-03-03 10:00:57.000000,3,,Information storage
222,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,"
Yes, I know about jq. But this tool is not installed by default on most distros. I'm distributing the robot files to third parties and it would be great if it would just work out-of-the-box instead of me explaining to them how to install and use jq correctly.
Also, your code snippets are wrong: you didn't escape $ so everything following it will be interpreted as an env var name and expanded to an empty string since those env vars are most likely undefined. That nicely supports my argument above.
Using $ in the user and filename is another design choice (orthogonal to this one) that impacts UX for no reason that is apparent to me. But I'm hesitant to open an issue about that one since fixing it impacts backwards compatibility for existing user names.
it works, $() - https://stackoverflow.com/questions/27472540/difference-between-and-in-bash
I think if people can use docker, they can also use jq
",2021-03-03 10:30:58.000000,4,,Information storage
223,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,"Thx for re-confirming my argument 😊
",2021-03-03 10:36:25.000000,5,,Information storage
224,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,,2021-03-03 10:39:38.000000,6,,Information storage
225,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,"you are right, there itself was escaped in the process of pressing tab, I forgot ``",2021-03-03 10:41:13.000000,7,,Information storage
226,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,docker login harbor.domainname.local --username $(jq -r .name robot\$project+test.json) --password $(jq -r .secret robot\$project+test.json),2021-03-03 10:42:33.000000,8,,Information storage
227,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,"I guess from the discussion we just had now everyone can understand how guiding of third-parties can look like. Yes, we eventually manage to make it work. But the more such cases I have the more time-consuming it is.
If there's no good reason for the current file format then I'd change it to enable a better out-of-the-box experience. I'm surprised that this is controversial since it should be in the interest of the project to improve UX.",2021-03-03 10:56:57.000000,9,,Information storage
228,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,"I would disagree that changing the file format would improve UX. Exporting the robot data in json you have the username and the token in one file (better for distributing), the credentials are better to parse (like the docker login example above) and with jq they are easy to read. nowadays jq is part of the standard toolchain.
Whether it is better to export the information as plain text or as json, depends then nevertheless strongly on the use case and the personal opinion. i prefer the json format.",2021-03-03 22:37:43.000000,10,,Information storage
229,https://github.com/goharbor/harbor/discussions/14390,2021-03-02 19:09:18.000000,Convert it discussion as per there are a lot of discuss,2021-03-08 08:46:06.000000,11,1.0,Information storage
230,https://github.com/goharbor/harbor/discussions/14487,2021-03-17 18:20:04.000000,I am able to push docker images to public repo I need to push to harbor any suggestions pls?,2021-03-17 18:20:48.000000,1,,Non Actionable Topic
231,https://github.com/goharbor/harbor/discussions/14487,2021-03-17 18:20:04.000000,"just push to your harbor instance:
",2021-03-18 12:58:18.000000,2,,Non Actionable Topic
232,https://github.com/goharbor/harbor/discussions/14487,2021-03-17 18:20:04.000000,"Something like this should work:

If you're using a self-signed TLS certificate or one derived from an internal CA, e.g. as you might find in a large corporate environment, then you'll need to configure docker with the CA. But that's part of configuring docker, so not really relevant here.",2021-03-18 13:01:19.000000,3,,Non Actionable Topic
233,https://github.com/goharbor/harbor/discussions/14487,2021-03-17 18:20:04.000000,"I have Jenkins running in my local and Harbor in organization server Can you please breif how to add Certificates and make connections between jenkins and harbor,Finally push the image to harbor?",2021-03-18 17:47:09.000000,4,,Non Actionable Topic
234,https://github.com/goharbor/harbor/discussions/14487,2021-03-17 18:20:04.000000,Configure docker with CA is bit strucked Can you please help me on this?,2021-03-18 18:15:35.000000,5,,Non Actionable Topic
235,https://github.com/goharbor/harbor/discussions/14487,2021-03-17 18:20:04.000000,I'm tranforming this to a discussion as it's not an issue that requires eng work.,2021-03-22 08:19:22.000000,6,1.0,Non Actionable Topic
236,https://github.com/google/googletest/discussions/3346,2021-04-02 13:34:05.000000,"I figure out the gmock ""unreference"" error, I forget add the gmock lib in my project CMakeLists.txt:
change the following two line in my CMakeLists.txt
find_library(NAMES gtest)
target_link_libraries(${targetName} PRIVATE gtest) # link google test to this executable
into:
find_library(NAMES gtest gmock)
target_link_libraries(${targetName} PRIVATE gtest gmock) # link google test to this executable
then linking passed,  but there is still the ""duplicate"" warings:
D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTIN7testing8internal24DummyMatchResultListenerE[_ZTIN7testing8internal24DummyMatchResultListenerE]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTSN7testing8internal24DummyMatchResultListenerE[_ZTSN7testing8internal24DummyMatchResultListenerE]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTSN7testing25MatcherDescriberInterfaceE[_ZTSN7testing25MatcherDescriberInterfaceE]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTISt13runtime_error[_ZTISt13runtime_error]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTSSt13runtime_error[_ZTSSt13runtime_error]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTSSt9exception[_ZTSSt9exception]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgtestd.a(gtest-all.cc.obj): duplicate section .rdata$_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgmockd.a(gmock-all.cc.obj): duplicate section .rdata$_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgmockd.a(gmock-all.cc.obj): duplicate section .rdata$_ZTSN7testing8internal15ExpectationBaseE[_ZTSN7testing8internal15ExpectationBaseE]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgmockd.a(gmock-all.cc.obj): duplicate section .rdata$_ZTSN7testing8internal25UntypedFunctionMockerBaseE[_ZTSN7testing8internal25UntypedFunctionMockerBaseE]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgmockd.a(gmock-all.cc.obj): duplicate section .rdata$_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size
D:\ProgramFiles\msys2\mingw64\lib/libgmockd.a(gmock-all.cc.obj): duplicate section .rdata$_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size D:\ProgramFiles\msys2\mingw64\lib/libgmockd.a(gmock-all.cc.obj): duplicate section .rdata$_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE[_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE]' has different size",2021-04-02 14:27:37.000000,1,,Unrelated Repository
237,https://github.com/google/googletest/discussions/3346,2021-04-02 13:34:05.000000,"From the information provided, we think this is unlikely to be an issue on our side.
https://github.com/google/googletest/blob/master/docs/quickstart-cmake.md is our CMake quickstart tutorial.
If you still believe this is a problem on our side, please provide us with more information.
I'm going to convert this issue to a discussion so the community can help.",2021-04-05 19:37:17.000000,2,1.0,Unrelated Repository
238,https://github.com/GoogleChrome/lighthouse/discussions/11735,2020-12-01 15:53:22.000000,"If you want your category to replace the default performance category, then you can't extend the default config. Extension for categories is additive.
tl;dr remove extends: 'lighthouse:default' if you want to replace a category.",2020-12-01 16:13:20.000000,1,,Non Actionable Topic
239,https://github.com/GoogleChrome/lighthouse/discussions/11735,2020-12-01 15:53:22.000000,"After removing the extends: 'lighthouse:default' I am getting error in pipeline.

Please guide me if i am missing any other configuration",2020-12-01 16:23:36.000000,2,,Non Actionable Topic
240,https://github.com/GoogleChrome/lighthouse/discussions/11735,2020-12-01 15:53:22.000000,"Well yes that's not the only change to make, if you're not extending anymore but still want to use those audits you'll need to copy what you need from the default config. Those sorts of questions and troubleshooting are best left for another forum though :) (moved from issue to discussions)",2020-12-01 17:39:54.000000,3,1.0,Non Actionable Topic
241,https://github.com/GoogleChrome/lighthouse/discussions/11735,2020-12-01 15:53:22.000000,Thanks for your response.,2020-12-03 07:25:27.000000,4,,Non Actionable Topic
242,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"@gpbl hey! Can you clarify the current state of the project, please?",2020-12-15 18:52:58.000000,1,,Others
243,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"I guess it is save to say that this library is no longer being maintained. This impacts a lot of companies and other open source projects such as blueprint. We (not affiliated with blueprint) are currently refactoring our library and are considering moving away from react-day-picker. It is unfortunate, but there quite a lot of issues that need to be addressed, especially regarding accessibility. I have to say though, it is quite difficult to find a similar or better alternative to react-day-picker, particularly with a minimal set of dependencies.",2021-01-06 17:22:06.000000,2,,Others
244,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,@kelvinlouis How do you plan to solve the date picker problem?,2021-01-06 18:15:09.000000,3,,Others
245,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"Hey @oliviertassinari,
We are currently evaluating alternatives. No decision has been made yet. Do you have any recommendations?",2021-01-07 07:33:18.000000,4,,Others
246,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,@gpbl Would you be open to adding a co-maintainer or transferring ownership of the project? The company I work for (@sumup-oss) might be willing to provide stewardship of the project.,2021-01-16 18:10:09.000000,5,,Others
247,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"@gpbl I think the suggestion by @connor-baer is a good one. If we can at least get some insight as to the plans for the next version that would be great. It looks like progress is pretty far along. Would you be open to establishing a group of maintainers or orgs interested in taking responsibility for moving things forward?
Also, thank you for your work putting this project together. There have been a lot of mediocre date pickers for React, most of them just clones of a Bootstrap picker. This project IMO has been the best implementation in terms of flexibility and control for multiple use cases with a lot of thought put into the APIs and use cases. I'd hate to see it die because you alone simply don't have the bandwidth to invest at this time.",2021-01-19 18:51:13.000000,6,,Others
248,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"I'd also be willing to invest some time into updating / maintaining the project. My company is currently working on a project using this package but it's a bit of a concern that there isn't much active development going on as we tend to support projects for years after initial development. We also tried looking at alternatives and found them lacking in terms of flexibility, forcing you to use huge libraries like Moment, being difficult to style or customize how they're rendered, etc. It looks like there's at least a roadmap in place for the next version so we could just divide-and-conquer, one issue at a time.",2021-01-20 16:55:16.000000,7,,Others
249,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"@wesm87 a lot of that roadmap is already done if you take a look at the working branch for that release. The docs are pretty far along too. IMO it is a significant improvement over the current version of the picker as it already is. That is what I am hoping we can get polished up and out the door if we can get some feedback or clarity from @gpbl. If there are plans to come back to this, I am fine waiting.",2021-01-20 17:44:56.000000,8,,Others
250,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"Hi everybody, sorry for the absence due to the pandemic (long story).
I'm merging #1086 with lot of changes, so DayPicker is ready for a beta release! I don't know yet about v7, I need to checkout the issues first.
@connor-baer @wesm87 Thanks a lot for offering your help, I appreciate it! Give me few days to take the project in hand again. And thanks everybody for this thread, it's nice to know a lot of people are using DayPicker.
More updates coming soon!
PS. There's also the sponsor thing: https://github.com/sponsors/gpbl :)",2021-02-09 04:03:17.000000,9,,Others
251,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,@gpbl glad to hear you are still planning to stay around and steer the ship. This is exciting news. 🎉,2021-02-09 19:49:45.000000,10,,Others
252,https://github.com/gpbl/react-day-picker/discussions/1089,2020-11-25 15:30:20.000000,"New website is live: https://react-day-picker-next.netlify.app
Beta version to be released soon on npm.
(Also, I am converting this issue to a discussion and see how it works)",2021-02-10 01:44:40.000000,11,1.0,Others
253,https://github.com/gpbl/react-day-picker/discussions/1183,2021-03-10 14:47:31.000000,"Sorry. Honestly didn't know Discussion tab exists 🤣
I've went away from this issue just overriding the global class names like
:global(.DayPicker)
However one thing that I had on mind was to making all the keys in classNames prop optional? I think current implementation assumes that you will always use classNames to provide CSS module from the library, not your own custom styles.
There are a lot of ways to style this library which is good so just wanted to have an open minded conversation.",2021-03-11 13:00:13.000000,1,1.0,Non Actionable Topic
254,https://github.com/gpbl/react-day-picker/discussions/1186,2021-03-12 15:38:33.000000,"
I'm using styled-components. At the moment I used defaults styles and injected them into DOM just like docs suggests.

🤔 I don't remember how styled-components works: is it correct to inject the style in the DOM when using it?
Anyway this is interesting... thanks for reporting. Probably we need to add a onMouseEnter, onMouseLeave to the button – which is also fine

In my case calendar keep using --rdp-accent-color and --rdp-background-color regardless of actual theme. Cause it has no clue what theme am I actually using. Is there any elegant ways of solving this issue?

I'd like first to reproduce this: any quick way to see this bug happening? Maybe by forking this code sandbox: https://codesandbox.io/s/react-day-picker-v8-eg8mw",2021-03-13 13:21:49.000000,1,,Further discussion
255,https://github.com/gpbl/react-day-picker/discussions/1186,2021-03-12 15:38:33.000000,"
I'd like first to reproduce this: any quick way to see this bug happening? Maybe by forking this code sandbox: https://codesandbox.io/s/react-day-picker-v8-eg8mw

I'm not sure how to reproduce my issue quick enough, cause it envolves a bunch of other internal dependencies.
However I was able to solve my problem with a kind of hack.
We have a lib with a bunch of helper methods for themes. Among others it has a method that tells you whether light or dark theme is being used currently (we support only 2 themes).

where styles is a copy/paste of default react-day-picker css
I've stripped everything that isn't related to theming.
While current solution is far from being elegant, it works.
End result
https://user-images.githubusercontent.com/83644/111109149-39a45d00-856b-11eb-858a-9a3b732eea03.mp4",2021-03-15 05:45:45.000000,2,,Further discussion
256,https://github.com/gpbl/react-day-picker/discussions/1186,2021-03-12 15:38:33.000000,"It think you are mixing css classes and inline style and this is making difficult to understand where is the problem.
The better option you have is to switch all to styled-component. Search the styled-components docs what is the best practice for importing a standard css file (from an external library).

Remove this above and do not import anywhere the original .css file. You want to use only the DayPicker styles prop. For doing this, create a JS object containing the styles from the DayPicker's CSS and pass it to the styles prop. (I'm sure styled component should provide an easy solution for that, otherwise, we could try to add this object to the package).
Remove the use of CSS variables in that object and alter it according to your tools. Also, styled-component should help you with the :hover styles.
Moving this to the Github Discussion page, please keep the discussion going as we do want to easily support styled components.",2021-03-15 12:36:51.000000,3,1.0,Further discussion
257,https://github.com/gpbl/react-day-picker/discussions/1186,2021-03-12 15:38:33.000000,"@jodaka There was indeed a bug that was not passing down the className to the container component. I fixed this in beta-25 but I haven't tested it with styled-components.
It should be possible to setup a CodeSandbox with styled-component, that would help my development. I will give a try when I have some time left :)",2021-03-19 12:21:46.000000,4,,Further discussion
258,https://github.com/gpbl/react-day-picker/discussions/1186,2021-03-12 15:38:33.000000,"PS. using ""react-day-picker"": ""next"" in `package.json should help to keep updated to the latest beta.",2021-03-19 12:22:32.000000,5,,Further discussion
259,https://github.com/gpbl/react-day-picker/discussions/1420,2022-03-30 04:53:01.000000,"@R0bk would you mind to clean up the diff from the build? I think however more rows in the table would break accessibility.

a row to appear under the date that the user clicks

An example of the rendering would be great! Moving to Discussions...",2022-03-30 11:10:10.000000,1,1.0,Invalid issues
260,https://github.com/grafana/grafana/discussions/40129,2021-10-06 09:02:04.000000,"Hello @trophi20, this seems like a UX issue. You can always do this via Create > Import > Options > Folder. FYI @grafana/grafana-labs-ux-design. @grafana/user-essentials passing to you to decide is you want to convert this to discussion or leave it as issue.",2021-10-07 08:20:58.000000,1,1.0,Unrelated Repository
261,https://github.com/grafana/grafana/discussions/40129,2021-10-06 09:02:04.000000,"Thanks @ivanahuckova, how can I convert it to a discussion? Maybe it would be better at the discussions place",2021-10-07 08:25:40.000000,2,,Unrelated Repository
262,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,"We don't want to expose connection information/errors to end users due to security concerns. I understand this is a problem with the use case integrating from outside Grafana. But due to the security concerns, would require each data source to implement better error handling if we add some improved sophisticated way for returning better error messages.
#39290 is somewhat related, but not really spot on for your use case.",2021-10-13 13:10:40.000000,1,,Further discussion
263,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,Converted this to a discussion trying to get additional feedback and better understanding of the requirements/use cases. Going to try invite  some more people.,2021-10-14 09:14:44.000000,2,1.0,Further discussion
264,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,"To give some background of the current/historic ideas around how/why it works today. If a data source handles a query request (could be multiple queries):

If no data frame response of any of the queries could be returned there's probably an error with the data source configuration/connection, hence why /api/ds/query returns a 500 internal server error.
If any of the queries results in an error there could still be queries that succeeds, hence why /api/ds/query returns a 400 bad request (code)
",2021-10-14 09:31:45.000000,3,,Further discussion
265,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,"
we're unable to make an informed decision on how to handle it without a more meaningful status or message

Can you provide examples/ideas of some of these informed decisions?

dealing with some common cases would be great, before falling back to the current state

What do you imagine are some common cases?",2021-10-14 09:34:56.000000,4,,Further discussion
266,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,"@marefr thinking about this a bit more also in context of my PR I think it would make sense to just consider 2 types of errors:

Basically if we return the response.error it will mean something inside Grafana went wrong. Otherwise we would return 200 but in the response.results['A'].error there can be error from the data source which we don't have control over. We could still have some partial data and as there may be multiple actual queries we could return some queries successfully and some with errors. This can be shown to the user or the data source frontend code can decide to do something with that.
I think this makes sense to separate downstream errors from our errors and also probably make our metrics clearer. Also this is basically what we already have in the:

only issue is that the Error property is then sent as a single string and it would be nice to have more rich metadata about the error which could be data source specific.",2021-10-27 16:59:58.000000,5,,Further discussion
267,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,Are there any docs on QueryMetricsV2? How should requests look? Is the API stable?,2021-12-06 00:22:42.000000,6,,Further discussion
268,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,I think it would be intersting to explore the idea of using http status 207 as a response as this means we can bundle multiple http status in the body instead. https://httpstatuses.com/207,2022-02-01 09:29:44.000000,7,,Further discussion
269,https://github.com/grafana/grafana/discussions/40444,2021-10-11 11:09:07.000000,"Adding these issues as they don't seem to automatically get referenced and are useful for the discussion
#46337 #46338",2022-03-09 17:39:59.000000,8,,Further discussion
270,https://github.com/grafana/grafana/discussions/40479,2021-10-13 20:01:56.000000,"Thank you for creating the issue, I am moving it to discussions where we are collecting all feature requests and discussions.",2021-10-14 14:50:47.000000,1,1.0,Non Actionable Topic
271,https://github.com/grafana/grafana/discussions/40479,2021-10-13 20:01:56.000000,Implemented in #40660,2022-01-10 12:11:27.000000,2,,Non Actionable Topic
272,https://github.com/grafana/grafana/discussions/40793,2021-10-20 19:32:16.000000,This is a re-attack since Grafana now officially supports the annotations panel and it is no longer community-driven.,2021-10-20 19:32:46.000000,1,,Non Actionable Topic
273,https://github.com/grafana/grafana/discussions/40793,2021-10-20 19:32:16.000000,"I think the annotation list is virtualized. This currently means that each item needs to have the exact same height, maybe this can be changed. Marking this as a feature-request and I'm going to convert this to a Github discussion instead. Thank you for bringing this up @jim-stroup.",2021-10-22 06:48:01.000000,2,1.0,Non Actionable Topic
274,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,@nikobearrr thanks for reporting this. I can confirm that this is a regression.,2020-06-01 13:29:38.000000,1,,Not a Bug
275,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"Hi @torkelo, I can see you have put the ""awaiting-more-evidence"". If you think my description is not enough or not understandable enough I can help out and try to record some examples",2020-06-18 12:25:03.000000,2,,Not a Bug
276,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,I mean awaiting more demand / need for this,2020-06-18 12:57:05.000000,3,,Not a Bug
277,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"@nikobearrr I know this is not 100% what you have in mind, but I hope that this PR is going to improve your experience at least a little. 🙂 We have improved alerting icons, and you should be able to see alerts easier.",2020-07-15 16:37:17.000000,4,,Not a Bug
278,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"Hi @ivanahuckova , thanks for the heads up. I think that would help a bit. It still doesn't completely solve the issue as an icon is hard to see on a tv/pc high resolution screen.
Our use case is that we let a dashboard run with time - 6h. An alert might have occurred outside of time range, so no red dashed line can be seen. The only way to find out its alerting is by seeing this 10x10 (or perhaps more) icon on a 4K TV. This is where panel pulsing/border color changing helps",2020-07-16 18:59:10.000000,5,,Not a Bug
279,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"I would also like to see the pulsing border return. When viewing dashboards on a personal screen there's not much of an issue, but for more distant screens a small icon is really not enough to draw attention to a particular panel.",2020-08-11 08:04:06.000000,6,,Not a Bug
280,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"+1 for this.
For large screens this change makes the distinction very hard to see.
Perhaps an ini setting for enabling this?",2020-08-13 19:52:47.000000,7,,Not a Bug
281,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"+1 for wanting the pulsing border to return. It visually stood out more than the small heart, more quickly catching one's attention of where on the dashboard to focus.",2020-08-13 19:53:03.000000,8,,Not a Bug
282,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,+1 to bring back the glowing alerting panels.,2021-02-10 19:27:59.000000,9,,Not a Bug
283,https://github.com/grafana/grafana/discussions/40978,2020-05-31 17:26:01.000000,"Due to the ""+1""s and the possible implementations now that we have the new alerting system, I am moving this to a GH discussion.",2021-10-27 09:54:37.000000,10,1.0,Not a Bug
284,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,"Thanks for creating this issue, @imReker
Yes, I see the behavior. Here is a dashboard where value mapping has overwritten a timestamp:
https://play.grafana.org/d/jDwXddKnz/value-mapping-a-range-overwrites-timestamps?orgId=1
",2021-10-30 03:14:29.000000,1,,Further discussion
285,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,Thanks for reporting this @imReker and thanks for repro @zuchka. Would you both expect the time values to be excluded from all value mappings? I'm just trying to figure out what you expect from this issue?,2021-11-01 05:36:12.000000,2,,Further discussion
286,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,"
Would you both expect the time values to be excluded from all value mappings?

In my opinion, the default Value Mapping settings should exclude the Time, because:

It's 'value' mapping. Time(underlying unix timestamp),  intuitively is not a value.
It's rare to map a exact time stamp (value/range) to some other thing.

Can we default exclude Value Mapping to Time, and allow users manually add an Value Mapping override to Time values to keep the compatibility with the old behavior.",2021-11-01 06:19:29.000000,3,,Further discussion
287,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,"@imReker aha, you mean that this used to work before? Can you identify which Grafana version when this stopped working?",2021-11-01 06:35:02.000000,4,,Further discussion
288,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,"No, the 'old' I mean the current behavior, which is Value mapping applied to Time.",2021-11-01 06:36:22.000000,5,,Further discussion
289,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,"I see ok, I'm converting this issue to a discussion so we can better track it.",2021-11-01 06:37:59.000000,6,1.0,Further discussion
290,https://github.com/grafana/grafana/discussions/41130,2021-10-29 13:36:20.000000,"think this looks like a bug, value mappings should by default apply to time fields?",2021-11-01 08:15:46.000000,7,,Further discussion
291,https://github.com/grafana/grafana/discussions/41366,2020-06-24 13:52:25.000000,"Hi,
seems easy to do! Just a few small changes here:
https://github.com/grafana/grafana/blob/master/public/app/features/alerting/AlertRuleItem.tsx
I would offer to contribute this in a PR! 😄
A few questions before that though:

Is there even a chance a PR for this would be accepted/merged?
If so, under what conditions? Like for example, would I need to write additional tests?
There is also the angular module. Would I have to implement this in the angular as well? Or is enough to just change the react component?
",2020-06-25 09:26:14.000000,1,,Non Actionable Topic
292,https://github.com/grafana/grafana/discussions/41366,2020-06-24 13:52:25.000000,@marefr Will you accept PRs for this? Could you answer @rikimaru0345 's questions?,2020-07-30 09:37:53.000000,2,,Non Actionable Topic
293,https://github.com/grafana/grafana/discussions/41366,2020-06-24 13:52:25.000000,Sorry for the late reply to this. This is a great suggestion and I will move it to discussions as that is how we will handle feature requests moving forward.,2021-11-05 15:08:21.000000,3,1.0,Non Actionable Topic
294,https://github.com/grafana/grafana/discussions/41507,2021-07-29 06:20:20.000000,"Hymm -- is there anything wrong with using the explicit merge if your query results return multiple frames?
Alternativly, can't influx return both lat and lon in the same query?  or do you need it to be from two queries?
For sure we should improve hits and feedback that the 'latitude' and 'longitude' field where not found in the same frame!",2021-07-30 15:08:19.000000,1,,Further discussion
295,https://github.com/grafana/grafana/discussions/41507,2021-07-29 06:20:20.000000,"I'm using a Cerbo GX from Victron Energy here. This writes the data in two tables on the Influx SQL server. So I have two queries. One for longitude and one for latitude.

Now you can select the appropriate values for Latitude and Longitude. I was confused when it didn't work. Only when I selected Merge as Transform the coordinates were displayed.
Maybe I can improve my Influx query?",2021-08-19 09:56:58.000000,2,,Further discussion
296,https://github.com/grafana/grafana/discussions/41507,2021-07-29 06:20:20.000000,"The worst thing about this issue is of course the lack of an error message. I was super confused, why my data points would not be displayed until I found this issue. But I had to add a ""Concatenate fields"" transformation in the Transform tab, ""Merge"" would not work for me. Nice thing is there is the ""Table view"" toggle at the top, which allows to see what the current transformation (or just the query results) look like in raw form.",2021-10-25 16:42:32.000000,3,,Further discussion
297,https://github.com/grafana/grafana/discussions/41507,2021-07-29 06:20:20.000000,Interesting -- lets leave this as a discussion thread while we figure out what makes sense.  I am reluctant to automatically pull fields from multiple frames to create location values.  That seems much more like something you want to do explicitly,2021-11-09 22:06:02.000000,4,1.0,Further discussion
298,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,Seems relevant to #25681,2020-07-27 20:45:58.000000,1,,Non Actionable Topic
299,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,+1,2020-09-11 16:06:52.000000,2,,Non Actionable Topic
300,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,+1,2020-11-27 12:55:17.000000,3,,Non Actionable Topic
301,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,"Transformations are really a visualization tool, so you can reuse the same query result in many panels and filter, rename and order the result.
Alerting happens on the backend so cannot use transformations.",2020-11-27 14:18:31.000000,4,,Non Actionable Topic
302,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,a lot of alerts are related to the calculations. It will be useful to have alerting. I thought the gel-app helps do this for transform,2020-12-30 02:32:51.000000,5,,Non Actionable Topic
303,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,"
Transformations are really a visualization tool, so you can reuse the same query result in many panels and filter, rename and order the result.
Alerting happens on the backend so cannot use transformations.

Transformations are conceptually no different than the alert conditions feature, in fact beefing up the alert conditions calculation options would probably alleviate most people's needs here. For example I want to alert on a sum/avg/median of separate queries. That can be done by adding another query but that's unnecessary complexity and load on my data source. There's no technical reason why an alert which conveniently already has an evaluation interval couldn't evaluate from a transform. A transform will still return a value that can be greater than or less than X just like any query. There's also no reason why alerts couldn't work with templates, simply evaluate/enumerate the variables when you need to test the alert conditions. These two things alone would completely eliminate my need for using something like grafanalib and/or sad interns and would amplify the power of templating massively.",2021-05-17 19:49:24.000000,6,,Non Actionable Topic
304,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,I would also like to add a use case for alerting on transformations. We want to alert on delta using different data sources. This is not possible currently since they need to be two separate queries.,2021-10-05 16:11:57.000000,7,,Non Actionable Topic
305,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,seems expressions are the way to go https://grafana.com/docs/grafana/latest/panels/expressions/,2021-10-05 17:06:38.000000,8,,Non Actionable Topic
306,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,Converting this to a discussion as this is a feature request and using expressions could be a workaround.,2021-12-08 12:01:51.000000,9,1.0,Non Actionable Topic
307,https://github.com/grafana/grafana/discussions/42881,2020-07-22 09:23:03.000000,Hi all - we're discussing on the team what the effort required to support transformations as an alert rule expression would be.,2022-04-08 09:21:29.000000,10,,Non Actionable Topic
308,https://github.com/grafana/grafana/discussions/43208,2021-08-11 14:16:35.000000,"i've put a band-aid fix for the --Grafana-- datasource in the PR above ☝️
@toddtreece mentioned this was affecting other datasources. i suspect the underlying cause is similar.
what we really need is a mechanism for providing a default query for each datasource.
that way when changing datasource, the code here in QueryGroup can set the query to be the next datasource's default query. that will require a bit of architectural thinking.
i'm going to rename the issue and use this to track implementing that.",2021-08-24 09:26:00.000000,1,,Information storage
309,https://github.com/grafana/grafana/discussions/43208,2021-08-11 14:16:35.000000,As noted above @ashharrison90 fixed the part of this issue that was specifically a bug. We're going to bump this out to discussions to cover the larger question about default queries as an enhancement request.,2021-12-16 13:15:10.000000,2,1.0,Information storage
310,https://github.com/grafana/grafana/discussions/43265,2021-12-16 06:58:44.000000,"Thanks for creating this issue @sanderaernouts. We currently don't support this time series format in the Azure Monitor data source. This looks like a feature request, so I'll convert it to a discussion.",2021-12-17 08:53:47.000000,1,1.0,Non Actionable Topic
311,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,@ivanahuckova what do you think? I saw you replied to numerous similar issues. Can you help with this one?,2021-12-14 13:30:21.000000,1,,Not a Bug
312,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,"Hi @sherifkayad
The way the severity is extracted is described in https://grafana.com/docs/grafana/latest/explore/logs-integration/#logs-in-explore, currently we do not support extracting levels from other fields, but you can upvote the feature request at #25585.
closing this as duplicate of #25585",2021-12-14 13:53:01.000000,2,,Not a Bug
313,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,"@Elfo404 I am not really sure if this issue here is a duplicate for #25585 .. Here it's not about custom log levels, however, about supporting other fields other than level for the severity",2021-12-14 13:56:47.000000,3,,Not a Bug
314,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,@Elfo404 also the way described in the docs works for me in the log panel .. just not in the volume histogram and that's why I thought this might be a bug ..,2021-12-14 13:59:31.000000,4,,Not a Bug
315,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,@Elfo404 Thanks for re-opening. I attached another screenshot to explain the issue I am having.,2021-12-14 14:47:38.000000,5,,Not a Bug
316,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,"The new log volume histogram doesn't support custom log level fields yet, but I think it's a good idea to add it to the configuration. We do have such a configuration for Elastic. It should be considered as a feature request so I think #25585 is still valid (though it was created for old log histogram).",2021-12-15 10:30:34.000000,6,,Not a Bug
317,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,"I'll move it to Discussions as it should be considered a feature request. #25585 is related, the configuration should be applicable to both log lines and the histogram aggregation.",2021-12-17 11:02:11.000000,7,1.0,Not a Bug
318,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,@ifrost how should we proceed here? Should I open a feature request out of this discussion ticket now?,2022-01-04 14:24:39.000000,8,,Not a Bug
319,https://github.com/grafana/grafana/discussions/43274,2021-12-14 13:29:51.000000,@ifrost any update after the discussions with the team?,2022-01-26 10:14:49.000000,9,,Not a Bug
320,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,@ryantxu is this something on the Edge squad agenda?,2020-09-22 08:25:01.000000,1,,Non Actionable Topic
321,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"IMHO you should push the Influx Data team for this, not Grafana Team.
OFFTOPIC: If some company releases a new great product and wants to integrate it with Grafana who should publish the plugin?",2020-10-06 11:41:23.000000,2,,Non Actionable Topic
322,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"
If some company releases a new great product and wants to integrate it with Grafana who should publish the plugin?

@marcusolsson",2020-12-09 09:43:37.000000,3,,Non Actionable Topic
323,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"Would be fantastic to hear from the Grafana team if this is in the plans, and if so, a rough idea of when it can be expected!",2020-12-09 10:23:51.000000,4,,Non Actionable Topic
324,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"
If some company releases a new great product and wants to integrate it with Grafana who should publish the plugin?

The company would let us (Grafana Labs) know, and we'd publish it on grafana.com/plugins.

Plugins for open source project are reviewed and published for free
Plugins for commercial offerings require a paid plugin subscription

To submit your plugin to be published, you create a PR to the plugin repository.",2020-12-10 09:28:41.000000,5,,Non Actionable Topic
325,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,No query builder for Flux - OMG what a giant step backwards.  How could Influx Data let this happen??,2021-01-31 23:50:41.000000,6,,Non Actionable Topic
326,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"My company would like people with little/no development or database experience to be able to pick from the available data items to create graphs, so this is a must-have for us too. Can work around it in the meantime by building the query in the InfluxDB UI, but the copy-pasting the queries to the Grafana UI isn't ideal.",2021-04-19 15:29:40.000000,7,,Non Actionable Topic
327,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,we to rely heavily on having non-technical people design dashboards. This is no longer possible using Flux.,2021-04-24 20:43:21.000000,8,,Non Actionable Topic
328,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"+1.
Flux is powerful, but comes with a steep learning curve.
I don't care who implements a Flux query editor, but both Influx and Grafana should have an interest.
Given that queries are much more compact in InfluxQL we'll keep using it even in InfluxV2 installations.
Only when Flux is really needed it will be used via a second data source.
Without a Flux query editor the transition from InfluxQL to Flux will be slow, if it happens at all.",2021-12-28 14:16:00.000000,9,,Non Actionable Topic
329,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,we are moving feature-requests from github-issues to github-discussions.,2022-01-10 09:58:18.000000,10,1.0,Non Actionable Topic
330,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,Please?,2022-02-17 23:59:27.000000,11,,Non Actionable Topic
331,https://github.com/grafana/grafana/discussions/43848,2020-09-22 07:49:44.000000,"With the InfluxDB 2+, not supported InfluxQL for it, and no Visual Query Builder for Flux alternative, it is a major blocker for our usage of Grafana itself.",2022-03-03 08:34:35.000000,12,,Non Actionable Topic
332,https://github.com/grafana/grafana/discussions/45978,2022-01-26 06:35:18.000000,"Hello @nicolaerosia, thanks for raising the issue.
Can you please be more specific to what overrides you refer to? Or explain the actual use case you are facing?
Thanks!",2022-01-26 13:50:56.000000,1,,Non Actionable Topic
333,https://github.com/grafana/grafana/discussions/45978,2022-01-26 06:35:18.000000,"sure, an example would be the Timeseries panel, you create a couple of Overrides, and then you would like to reorder them. Why? Because the order of processing affects the end result/render (z-axis).
It would be nice to be able to drag and drop Override 2, move it on top so it becomes Override 1

@dsotirakis does it make sense?",2022-01-26 14:04:12.000000,2,,Non Actionable Topic
334,https://github.com/grafana/grafana/discussions/45978,2022-01-26 06:35:18.000000,"hi @nicolaerosia 👋
thanks for raising this. agreed, this would be useful. we're tracking feature requests using GitHub discussions so i'll move this to a discussion until we're ready to commit to implementing it.
thanks! 😄",2022-02-28 16:54:25.000000,3,1.0,Non Actionable Topic
335,https://github.com/grafana/grafana/discussions/46088,2022-03-01 20:10:12.000000,"hey @ungolyant 👋
thanks for raising this!
agreed, we can make the experience better here. it's tricky though because there's also situations (e.g. if you have 20 or so variables that take up a lot of vertical space) where you wouldn't want that bar to stickily position to the top.
we're using github discussions to track feature requests so i'll transfer this to a discussion for now. please feel free to add upvotes there and when we're ready to commit to implementing it we'll convert it back to an issue.
hope that makes sense! 😄",2022-03-02 11:46:22.000000,1,1.0,Non Actionable Topic
336,https://github.com/grafana/grafana/discussions/46088,2022-03-01 20:10:12.000000,"Hello Ashley,
Thanks for the reply. I would say that the best option is to have a setting/checkbox in Dashboard Settings, so the dashboard creator can chose for itself weather he would like ""pinned"" parameters line or not. Or maybe in Dashboard Settings > Variables screen?",2022-03-07 13:05:47.000000,2,,Non Actionable Topic
337,https://github.com/grafana/grafana/discussions/46356,2022-03-09 10:27:11.000000,"Hello @MatinF, thanks for reporting this.
The feature is working as intended as it allows to share all the results in a panel, also as described in the docs.
I do agree however that it may be an interesting feature.
I'm converting this to a discussion where we track feature requests.",2022-03-09 10:59:52.000000,1,1.0,Non Actionable Topic
338,https://github.com/grafana/grafana/discussions/46683,2022-03-16 02:54:28.000000,"This seems like a feature request that should be converted to discussion, but I am passing to @grafana/user-essentials to evaluate and convert to discussion.",2022-03-16 10:29:56.000000,1,1.0,Non Actionable Topic
339,https://github.com/grafana/grafana/discussions/46683,2022-03-16 02:54:28.000000,"At the moment you cannot add additional data sources to a panel that uses the ""-- Dashboard --"" data source to retrieve data from another panel. The main intention behind the ""Use results from"" panel is to visualise the same data in with multiple panels, rather than to continue to augment the data.
You can apply transformations to the data in the second panel, if they have the functionality you're looking for.
Because this is a feature request, I'll move this over discussions so it can gather the right attention there.",2022-03-17 10:19:39.000000,2,,Non Actionable Topic
340,https://github.com/graphql/graphiql/discussions/1922,2021-06-04 03:38:26.000000,converted to a discussion as this is an implementation support question and not an issue with our project. hopefully someone else has come across a similar issue and can help you!,2021-07-09 08:23:22.000000,1,1.0,Non Actionable Topic
341,https://github.com/gulpjs/gulp/discussions/2452,2020-06-09 18:42:33.000000,"Hey @calligraphic, it's fine to post questions in the gulp repo, but we have Discussions enabled now so I'm going to move this over there.
As for your question, gulp.src() is a stream and you aren't draining it so I wouldn't expect you to be getting everything.",2020-06-09 20:53:22.000000,1,1.0,Unrelated Repository
342,https://github.com/gulpjs/gulp/discussions/2459,2020-06-28 22:08:46.000000,"🤷 We don't do anything with typescript, I assume your environment is messed up. Moving this to the discussion forum, in case a community member can help you.",2020-06-28 23:00:47.000000,1,1.0,Non Actionable Topic
343,https://github.com/gulpjs/gulp/discussions/2459,2020-06-28 22:08:46.000000,"Okay, Error is gone when using ""esnext"" instead of ""es2019"".
Thanks!",2020-06-29 00:23:28.000000,2,,Non Actionable Topic
344,https://github.com/gulpjs/gulp/discussions/2470,2020-07-28 09:32:34.000000,"Hey @SLingGeA, we actually GitHub Discussions enabled for support help, so I've moved this over there. Hopefully a community member can help you debug this problem!",2020-07-28 17:18:45.000000,1,1.0,Non Actionable Topic
345,https://github.com/gulpjs/gulp/discussions/2483,2020-08-23 09:44:11.000000,This should be a discussion because that's a community thing. The gulp team doesn't provide any plugins.,2020-08-23 20:15:26.000000,1,1.0,Non Actionable Topic
346,https://github.com/gulpjs/gulp/discussions/2487,2020-09-12 15:48:41.000000,"This definitely looks like your environment is messed up so you should have created this as a community discussion to ask for help, not an issue. I'll convert this to a Help Discussion for you now, but please follow the template next time.",2020-09-14 03:51:28.000000,1,1.0,Non Actionable Topic
347,https://github.com/gulpjs/gulp/discussions/2487,2020-09-12 15:48:41.000000,This is finally solved after solving series of issues. The above error was coming as i was working in a controlled env and npm i gulp was not installing all files and none under nvm directory. I copied them manually from another system both gulp & gulp-cli and it worked fine after that.,2020-09-14 12:03:03.000000,2,,Non Actionable Topic
348,https://github.com/gulpjs/gulp/discussions/2504,2020-10-20 13:04:46.000000,"That is actually just the behavior of nodejs streams. You can't pipe the result to 2 different outputs and you'd need something like a ""tee stream"", such as something like https://github.com/streamxorg/teex (I'm not sure if it works on standard node streams).
However, it's not recommended to split a gulp stream and instead apply your transforms inline. You can even filter files after they've been modified or written.
I'm going to convert this to a discussion because it is not really an issue with gulp.",2020-10-20 17:09:01.000000,1,1.0,Unrelated Repository
349,https://github.com/gulpjs/gulp/discussions/2523,2020-12-10 19:02:32.000000,Support questions must go on our discussion board. I'll convert this for you.,2020-12-10 19:04:13.000000,1,1.0,Non Actionable Topic
350,https://github.com/gulpjs/gulp/discussions/2638,2021-10-26 08:28:21.000000,"Our issue tracker is not a support forum. I'll transfer your issue to a Discussion, which is where you should be posting support questions",2021-10-26 15:22:35.000000,1,1.0,Non Actionable Topic
351,https://github.com/gulpjs/gulp/discussions/2638,2021-10-26 08:28:21.000000,"I have this problem as well. However, alongside gulp 4, I have tried using both Node 14.x and 16.x. and am also receiving the ""primordials not defined"" error.
The workaround bandied about on StackOverflow is to downgrade Node to version 11 or before, which I did attempt. However, I then receive another error (""globalThis is not defined""). This error apparently can only be resolved by upgrading Node to a more recent version(!#!).
Hence, I am stuck between a rock and a hard place. What to do? How to solve this in order to get my app deployed? Has anyone been able to solve this...? Thanks,",2021-12-25 04:42:17.000000,2,,Non Actionable Topic
352,https://github.com/gulpjs/gulp/discussions/2639,2021-10-25 15:23:20.000000,"Our issue tracker is not a support forum. I will transfer this to a Discussion, which is the place you are supposed to ask support questions.",2021-10-26 15:23:33.000000,1,1.0,Non Actionable Topic
353,https://github.com/gulpjs/gulp/discussions/2644,2021-11-17 16:35:01.000000,"You aren't writing your gulp file correctly. This isn't a support forum, so I'll transfer this to GitHub discussions. You probably want to review our getting started guide to understand asynchronousity",2021-11-17 17:36:17.000000,1,1.0,Non Actionable Topic
354,https://github.com/gulpjs/gulp/discussions/2644,2021-11-17 16:35:01.000000,"@phated could you point out what I'm doing wrong?
I also tried pushing the exec() and src() calls into an array and using Promise.all() but it seemed that the exec command at least was running regardless of being called with Promise.all() and I couldn't understand why.
The gulp documentation isn't very helpful if I'm honest",2021-11-18 09:21:04.000000,2,,Non Actionable Topic
355,https://github.com/gulpjs/gulp/discussions/2644,2021-11-17 16:35:01.000000,you want to create pipelines using the gulp methods.  So instead of fs.readdirSync use gulp.src with a glob pattern that fits your use case.,2021-11-18 19:34:36.000000,3,,Non Actionable Topic
356,https://github.com/gulpjs/gulp/discussions/2644,2021-11-17 16:35:01.000000,"@begin-again the problem is, src and dest are too ""simple""
There is semeingly no way to pass variables into dest to dynamically change the output directory.
Here is my scenario:

I need to find each directory inside root, zip the contents, and drop them into a new directory like below

But I am unable to find any information on how to create the foo, bar and baz directories in the dist directory, when using dest()
I tried using a glob string in the dest() call, but it literally just makes directories with a name of * or **. I want to be able to modify the output based on the current directory that matches the src() call.",2021-11-19 10:14:48.000000,4,,Non Actionable Topic
357,https://github.com/ionic-team/capacitor/discussions/3871,2020-11-27 12:56:43.000000,"Hi,
I faced the same problem after updating @angular/fire to the latest version!
I downgraded @angular/fire to version 6.0.4 and all worked fine.
Hope this helps.
@capacitor/cli: 2.4.3
@capacitor/core: 2.4.3
@capacitor/android: 2.4.3
@capacitor/electron: 2.4.3
@capacitor/ios: 2.4.3
Installed Dependencies:
@capacitor/cli 2.4.3
@capacitor/core 2.4.3
@capacitor/ios 2.4.3
@capacitor/android 2.4.3
@capacitor/electron not installed
npm --version
6.14.9
node --version
v14.13.1",2020-11-29 17:56:42.000000,1,,Unrelated Repository
358,https://github.com/ionic-team/capacitor/discussions/3871,2020-11-27 12:56:43.000000,"yes i know, we would like to use the new functionalities added in 6.1, does anyone have a workaround? i tried adding it in polyfills but i could'd get it to work",2020-11-30 07:58:27.000000,2,,Unrelated Repository
359,https://github.com/ionic-team/capacitor/discussions/3871,2020-11-27 12:56:43.000000,"this is not a Capacitor issue, moving to discussions so maybe somebody can help you",2020-11-30 11:36:42.000000,3,1.0,Unrelated Repository
360,https://github.com/ionic-team/capacitor/discussions/3871,2020-11-27 12:56:43.000000,"This is not a Capacitor issue, globalThis is only supported by recent versions of the webview. The problem lies with @angular/fire.",2020-12-11 08:36:20.000000,4,,Unrelated Repository
361,https://github.com/ionic-team/capacitor/discussions/3871,2020-11-27 12:56:43.000000,"You can import globalThis as polyfill using this package https://www.npmjs.com/package/@ungap/global-this.
Ref: https://zenn.dev/rdlabo/articles/b25c18b243a5b8
I fixed my issue using this polyfill.",2021-01-05 09:15:38.000000,5,,Unrelated Repository
362,https://github.com/ionic-team/capacitor/discussions/3871,2020-11-27 12:56:43.000000,"Hello,
Install globalthis:
npm install globalthis 
Add:
import 'globalthis/auto';
in polyfills.ts",2021-02-09 11:57:40.000000,6,,Unrelated Repository
363,https://github.com/ionic-team/capacitor/discussions/3876,2020-11-29 22:42:59.000000,"I can't reproduce.
By the answers on that link, looks like it can happen if the storyboard gets corrupted somehow, try removing ios folder and running ionic cap add ios again.
Do not remove the Main storyboard, that answer is for iOS 13+ apps that use UIScenes, Capacitor doesn't use UIScenes because they don't work on iOS 11 nor iOS 12 and Capacitor still support them.
Moving to discussions so maybe somebody else can help you.",2020-11-30 15:14:10.000000,1,1.0,Invalid issues
364,https://github.com/ionic-team/capacitor/discussions/3876,2020-11-29 22:42:59.000000,"@jcesarmobile The problem has been fixed!
I tried to remove the 'ios' folder but didn't work for me. What I did is remove @ionic/cli npm package and cocoapods from the macOS. Then I install them again and restart the device. I created a fresh new Ionic app and then build a project to add the iOS platform 'ionic cap add ios', it works!
I have noticed that the iOS project opened in the old Xcode version (11.2.1), and when I build and run it again on the iOS simulator, it crashed. On the other hand, if I opened the latest installed version of Xcode (11.4), and I open the Ionic - ios platform on that version, it works!
It looks like an Ionic/Capacitor needs to be opened directly on the last xCode version installed on the device.",2021-02-14 22:46:36.000000,2,,Invalid issues
365,https://github.com/JedWatson/react-select/discussions/4485,2021-03-09 21:53:33.000000,I will add this to Discussions and also happen to be in favor of this.,2021-03-10 18:04:32.000000,1,1.0,Non Actionable Topic
366,https://github.com/JedWatson/react-select/discussions/4485,2021-03-09 21:53:33.000000,"Honestly even more than just the focused option everything needed to manage scroll could be passed: the proper list of filtered options, the focused option, and whether the scroll should update if it's offscreen.",2021-03-11 03:07:55.000000,2,,Non Actionable Topic
367,https://github.com/JedWatson/react-select/discussions/4485,2021-03-09 21:53:33.000000,@SoAsEr I am happy to report that #3360 is being merged and released with version 4.3 today so that focusedOption will not be passed as a prop to the MenuList.,2021-03-18 23:58:28.000000,3,,Non Actionable Topic
368,https://github.com/JedWatson/react-select/discussions/4486,2021-03-09 12:05:23.000000,"In my opinion this does not need a change in the source code. You can easily achieve the same thing using a combination of classNamePrefix and className:


CodeSandbox example",2021-03-09 12:39:12.000000,1,,Non Actionable Topic
369,https://github.com/JedWatson/react-select/discussions/4486,2021-03-09 12:05:23.000000,"@Rall3n Hello, className is related to container with input only, users want to customize everything including menu. User is able to customize menu only by using classNamePrefix. Another solution will be to add xxxClassName for every component like containerClassName and menuClassName.",2021-03-09 12:59:19.000000,2,,Non Actionable Topic
370,https://github.com/JedWatson/react-select/discussions/4486,2021-03-09 12:05:23.000000,"Greetings @andrew-aladev from an everyday user who prefers stylesheets to styled components.
First of all, className as a react-select prop is defined pretty well in the documentation

className string
Sets a className attribute on the outer component

Take this example from the Discussions Code Gallery:
https://codesandbox.io/s/react-select-inline-83kdi?file=/example.js
It exemplifies a common use case of wanting to apply some modifier from the parent applied to the other custom components. In this case an inline react-select is given the className react-select react-select--inline and the classNamePrefix react-select. The menu can then be targeted as:
Base class
.react-select .react-select__menu
Modified class
.react-select--inline .react-select__menu
Extra specificity modified class
.react-select.react-select--inline .react-select__menu
If you wanted more customization, className is provided as a prop on custom components so that you can specify a className for a particular custom component.
eg:


As a roadmap note, Jed has expressed interest in creating an api similar to styles but for component classNames to make it easier for those using UI libraries like Tailwind to style components exclusively using classNames.
Please lt me know if any of this helps, or please provide some example that is not satisfied by what @Rall3n or myself have responded with.",2021-03-09 14:17:38.000000,3,,Non Actionable Topic
371,https://github.com/JedWatson/react-select/discussions/4486,2021-03-09 12:05:23.000000,"@ebonow, Hello. There is a special option: in portaling docs: menuPortalTarget. It detaches menu from container and user is not able to customize it anymore. So classNamePrefix or classNamePrefixes becomes the only one possible option that doesn't affect related react-select functionality. Please review the following example.
Custom components is a good solution, but not universal. If first developer implemented custom select component based on react-select he may not use custom components. Second developer wants to customize custom select for current component just a bit, but he can't. He have to make heavy refactoring of first custom select and add custom components with class names inheritance.",2021-03-09 14:42:28.000000,4,,Non Actionable Topic
372,https://github.com/JedWatson/react-select/discussions/4486,2021-03-09 12:05:23.000000,"@andrew-aladev
Good point regarding portalling. A custom MenuPortal would likely be needed to pass in some derived className perhaps even passed in as a custom selectProp.

From there, writing a Menu/Option styling mixin for Sass would likely be a way to make it easier to address these custom use cases.
To your concerns about being universal, my preference is that there is a base Select that everyone uses with agreed standards so that users do not need to re-engineer similar custom components. I suppose this is simply a personal preference, but I prefer to abstract my implementation away from the base component to either swap out later or add new functionality that I want shared among all my selects.
For example, I prefer the idea of a floating label as opposed to a Placeholder component, and instead pass the placeholder as an attribute to the input when the user focuses on it (blur removes it to avoid overlap). It wouldn't make sense to import and pass this custom Input component to every one of my 100+ Selects, but again to each their own.
That all said, this seems to come down to personal preference and convenience and not so much an actual issue so I will rename this title and have it converted to a Feature Request discussion.
Perhaps this will be addressed in the discussed as a future roadmap item as we look at how to apply classNames to components without the need for writing a custom component simply to pass in a new className.",2021-03-10 19:30:42.000000,5,1.0,Non Actionable Topic
373,https://github.com/JedWatson/react-select/discussions/4617,2021-05-29 23:41:34.000000,"Hello @alveshelio,
I hope you don't mind me converting your issue to a discussion. It seemed more fitting as your query does not include an issue in the library but instead a question regarding implementation.
Your CodeSandbox example seems to be unavailable, but I had a look before and can probably offer a solution.
You used a prop called initialSelectedAddresses in your MultiSelectAddress component. This prop should contain your inital value of the Select component.
In the MultiSelectAddress component you also have a state called selectedAddresses. This seems to be your state to which you want the initial values to be applied.
As I could see (and remember) you used your initialSelectedAddresses as the value of the Select component, but updated the selectedAddresses state in the onChange handler. This would explain why the Select component never shows the new values.
I recommend using the selectedAddresses state as the value of the value prop on the Select component.",2021-06-02 07:32:50.000000,1,1.0,Non Actionable Topic
374,https://github.com/JedWatson/react-select/discussions/4763,2021-09-09 22:28:21.000000,"Hello @itsosmx,
I hope you don't mind me converting your issue to an discussion, as this is the right place for questions such as yours.
The onChange callback prop should accept 2 arguments: the changed value as the first argument, and a meta object as the second argument. This meta object contains the value of the name prop as the property name.
A reusable callback could look like this:
",2021-09-10 06:28:04.000000,1,1.0,Non Actionable Topic
375,https://github.com/JedWatson/react-select/discussions/4763,2021-09-09 22:28:21.000000,"I would just manually write in the name of your select field on your change listener:
",2021-09-10 21:16:24.000000,2,,Non Actionable Topic
376,https://github.com/jquery/jquery-ui/discussions/2007,2021-11-01 17:22:50.000000,That's more of a support question of how dependencies work with Yarn/npm so let me convert that to a discussion.,2021-11-05 15:45:10.000000,1,1.0,Non Actionable Topic
377,https://github.com/jquery/jquery-ui/discussions/2007,2021-11-01 17:22:50.000000,"@mickel1138 I have the same problem, how do you solve it?
Edit:
Ok i solved my issue

In the package.json
https://classic.yarnpkg.com/en/docs/selective-version-resolutions/",2022-02-03 16:01:38.000000,2,,Non Actionable Topic
378,https://github.com/jquery/jquery/discussions/4916,2021-08-16 11:59:38.000000,"jQuery is not meant to be put in an inline script, we’ve never tested such usage. Let me move that to Discussions.",2021-08-16 13:12:46.000000,1,1.0,Non Actionable Topic
379,https://github.com/jquery/jquery/discussions/4923,2021-08-27 11:23:20.000000,"Answer: It is possible.
Suppose #elem (or one of its children) has the focus. Then

blurs on #elem so that it can be moved around the DOM. In contrast

keeps the focus on #elem. I suspect that similar behavior could be observed with before() and after() as well.
Might be worth mentioning in the docs?
Ok to close this question.",2021-08-28 20:31:24.000000,1,,Non Actionable Topic
380,https://github.com/jquery/jquery/discussions/4923,2021-08-27 11:23:20.000000,"Converted to a discussion. If you have documentation suggestions, it's best to submit a PR at https://github.com/jquery/api.jquery.com.",2021-08-30 08:04:13.000000,2,1.0,Non Actionable Topic
381,https://github.com/KaTeX/KaTeX/discussions/3166,2021-08-11 20:05:22.000000,"Thanks for checking in.  That is still the recommended method.  In the future, you might use the Discussions tab.",2021-08-11 20:29:33.000000,1,1.0,Non Actionable Topic
382,https://github.com/keycloak/keycloak/discussions/8988,2021-11-25 08:32:08.000000,"Changing this to a discussion as this is not a bug and is by design.
Recover password is used in scenarios when a user has forgotten the password, as such should not invalidate other sessions. In fact that is pretty common practice.
If a user suspect the account has been compromised they will update the credentials through the account console, which gives the option to logout existing sessions.",2021-12-02 13:31:40.000000,1,1.0,Not a Bug
383,https://github.com/keycloak/keycloak/discussions/8988,2021-11-25 08:32:08.000000,"Yes I understand your point of view.
However I have another case in mind : imagine some of user accounts have been hacked/pawned.
The hacker may have modified some passwords, but he was not able to modify the email because we have disabled ""Edit username"" option and we have ""Email as username"" enabled.
If we recommend these users to do a ""forgot credentials"" to reset their password and recover their account by themselves, then the hacker still has access to the account until session expires.
PS : imagine that users do not use the keycloak account page so we can not tell them to do a ""logout all session"" manually (and this is not very user friendly to tell them to do that :) )",2021-12-02 15:36:25.000000,2,,Not a Bug
384,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,Importante!,2020-11-05 01:30:32.000000,1,,Non Actionable Topic
385,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,"I am presenting the same problem, when executing the unit tests in Insomnia Designer there are occasions in which they fail because the necessary execution time of the test exceeds the default time configured in mocha, throwing the following message ""Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure ""done ()"" is called; if returning a Promise, ensure it resolves. ""
On the other hand, in the Inso command line of Insomnia the same problem occurs, it is also necessary to include a label to customize the mocha timeout.
It is a very good tool for testing, but if it is not possible to modify the timeout it greatly limits the great exponential it has.",2021-01-07 15:46:41.000000,2,,Non Actionable Topic
386,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,"yes, me too.
it's a critical feature, I think.
thanks a lot for the good work.
Cheers",2021-01-11 14:09:11.000000,3,,Non Actionable Topic
387,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,Any progress on this? Or at least hacks?,2021-01-29 14:18:59.000000,4,,Non Actionable Topic
388,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,"My current workaround is to try to do everything that you would do with multiple requests in one unit test instead by chaining the requests  and then set the trigger behaviour to ""When Expired"". You might get timeouts on the first run, but it will start reusing results from previous runs on later runs. This of course is only possible for use cases where the reuse of previous requests in the chain is no problem.",2021-03-08 15:36:39.000000,5,,Non Actionable Topic
389,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,something new?,2021-06-08 20:10:21.000000,6,,Non Actionable Topic
390,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,"
My current workaround is to try to do everything that you would do with multiple requests in one unit test instead by chaining the requests  and then set the trigger behaviour to ""When Expired"". You might get timeouts on the first run, but it will start reusing results from previous runs on later runs. This of course is only possible for use cases where the reuse of previous requests in the chain is no problem.

I was also doing it like this, but, I got to a point where I had to chain too many requests so the timeout is inevitable.
I have tried ""no history"" and ""when expired"" but if there are three or more chained requests, sometimes, it will execute a double request, in addition to throwing the timeout.",2021-06-08 20:14:48.000000,7,,Non Actionable Topic
391,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,"P.s. I don't know why this was moved to discussion from an issue. This unconfigurability is actually the single reason that is making me hesitant to adopt insomnia as the end to end testing solution for new projects. I still use it for debugging, but just the idea that there is no real solution might the need for longer tests arise is just really uncomfortable.",2021-07-01 02:37:14.000000,8,1.0,Non Actionable Topic
392,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,What's the latest on this?,2021-11-24 17:10:26.000000,9,,Non Actionable Topic
393,https://github.com/Kong/insomnia/discussions/3608,2020-10-26 19:38:03.000000,"Hey folks! Sorry for missing this one. We extended the timeout to 60 seconds in this PR: #4046 and that was included in the 2021.6.0 release of Insomnia and the 2.4.0 release of inso. Hopefully, that will help everyone run these longer-running tests.
With that in mind, do folks still need a configurable timeout? Would you want the default to be shorter or longer?",2021-11-24 17:21:27.000000,10,,Non Actionable Topic
394,https://github.com/Kong/insomnia/discussions/3632,2020-12-15 14:16:18.000000,"This has come up in the past in the form of tabs, and internally on the team we have had discussions around multiple window support as well. Over the next few releases, I feel that this will become more of a discussion focus point.",2020-12-15 17:22:55.000000,1,1.0,Non Actionable Topic
395,https://github.com/Kong/insomnia/discussions/3632,2020-12-15 14:16:18.000000,This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.,2021-05-28 05:34:07.000000,2,,Non Actionable Topic
396,https://github.com/Kong/insomnia/discussions/4227,2021-11-17 23:15:05.000000,"Thanks for raising this @GraemeAllanBryce , I'm going to convert this to a GitHub Discussion where we have a forum for various product ideas like this.",2021-11-18 17:22:33.000000,1,1.0,Non Actionable Topic
397,https://github.com/Kong/insomnia/discussions/4228,2021-11-17 23:16:51.000000,"Thanks for raising this @GraemeAllanBryce , I'm going to convert this to a GitHub Discussion where we have a forum for various product ideas like this.",2021-11-18 17:23:08.000000,1,1.0,Non Actionable Topic
398,https://github.com/logaretm/vee-validate/discussions/3094,2020-12-21 21:21:38.000000,"I moved this to the discussions section as this is not an issue, but rather a question.
To answer your question, this is not a limitation from vee-validate's side, there are multiple ways you can submit a form outside of it. Two ways that come to mind are the button element's form attribute or dispatchEvent on the form element itself which can be triggered with $refs.",2020-12-21 21:52:30.000000,1,1.0,Non Actionable Topic
399,https://github.com/logaretm/vee-validate/discussions/3421,2021-07-28 20:05:05.000000,"I've moved this as a discussion since this is a question.
vee-validate v3 doesn't really offer you a way to find out which field is getting validated by which function, in v4 it is possible since the validation function receives a third argument being the context of the validation.
I can't think of workarounds for this at the moment.",2021-07-29 00:15:24.000000,1,1.0,Non Actionable Topic
400,https://github.com/logaretm/vee-validate/discussions/3544,2021-10-19 18:00:46.000000,"I migrated this as a discussion because this is the proper section for it. Please try to keep issues reporting for actual issues.
The examples actually use the options API as much as possible, only the useField and useForm are used in the setup function.
Which example are you referring to specifically? You can use the data with v-model to set your initial values.",2021-10-20 00:36:18.000000,1,1.0,Non Actionable Topic
401,https://github.com/logaretm/vee-validate/discussions/3544,2021-10-19 18:00:46.000000,"It will be roughly the same but replace VObserver with Form and VProvider with Field
",2021-10-23 02:55:34.000000,2,,Non Actionable Topic
402,https://github.com/logaretm/vee-validate/discussions/3571,2021-11-06 01:38:45.000000,"This was converted to a discussion because it is not a bug report. Please keep your questions in the suitable discussion section.
You can't get the payload type with the <Form> component, this question came up a couple of times.  #3521 #3510
Instead, use useForm to be able to define your payload type.",2021-11-06 11:16:01.000000,1,1.0,Non Actionable Topic
403,https://github.com/logaretm/vee-validate/discussions/3723,2022-02-25 16:40:19.000000,"Please create a minimal live example on codesandbox, I can't guess the issue from this code alone. Also moved this to discussions since this doesn't satisfy an ""issue"" report.",2022-03-09 10:09:42.000000,1,1.0,Invalid issues
404,https://github.com/meteor/meteor/discussions/11618,2021-09-04 08:43:23.000000,"Hi @itsmingjie this is a great initiative and for sure we can help.
We can discuss details here or by email if you prefer filipe@meteor.com.
What do you believe should be the first step?
We also have a hackathon coming in October with great prizes. It's not focused directly on open-source contributions but they would have contact with the maintainers during the hackathon as well, read more here https://impact.meteor.com/hackathon
And BTW I just checked the codeday.org landing page snd and it's great. Keep it up. 💪",2021-09-04 16:05:22.000000,1,,Non Actionable Topic
405,https://github.com/meteor/meteor/discussions/11618,2021-09-04 08:43:23.000000,"Thanks a lot for the kind words @filipenevola! I'm starting an email thread to coordinate the next steps -- mostly, we just need some time from you to record a ""tour"" through your codebase (or, if desired, a live webcast with our students). Andrew (cc'ed on the email) can help getting things started.
And thanks for bringing up the hackathon! I'll pass this on to our team as well :D
I'll post periodic progress updates under this issue for transparency to the community as well.",2021-09-05 07:23:15.000000,2,,Non Actionable Topic
406,https://github.com/meteor/meteor/discussions/11618,2021-09-04 08:43:23.000000,"Perfect @itsmingjie, I converted the issue to a discussion 😉
And we are already in touch by email as well.",2021-09-06 04:45:30.000000,3,1.0,Non Actionable Topic
407,https://github.com/necolas/react-native-web/discussions/2119,2021-09-01 12:35:56.000000,"sorry missed this existing question: #1974
I'll use react helment :)
(and thanks @necolas for moving my issue to a discussion)",2021-09-01 14:32:35.000000,1,1.0,Already fixed
408,https://github.com/ngrx/platform/discussions/3154,2021-09-25 20:52:02.000000,"Hello @tomalaforge 👋
ComponentStore is designed as a general solution for local state management. Having single loading/error status won't be a good fit in all cases. Adding specific things to a general-purpose state management library such as component-store can lead to limitations that we want to avoid.
Take a look at the DataComponentStore. It has built-in support for CRUD operations (including pending statuses and error handling). Also, you can create a new plugin, if DataComponentStore doesn't suit your needs. 🙂",2021-09-27 21:49:59.000000,1,,Non Actionable Topic
409,https://github.com/ngrx/platform/discussions/3154,2021-09-25 20:52:02.000000,Moving this issue to Discussions (💡 Ideas category).,2021-09-27 21:51:56.000000,2,1.0,Non Actionable Topic
410,https://github.com/ngrx/platform/discussions/3154,2021-09-25 20:52:02.000000,@markostanimirovic Thank you for your answer. I thought so too but it was still beeing very generic compare to DataComponentStore.,2021-09-28 14:33:22.000000,3,,Non Actionable Topic
411,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Try this:

Note: If you're using Jasmine, set ""module"": ""commonjs"" in tsconfig.spec.json.
",2021-08-04 20:39:27.000000,1,,Not a Bug
412,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Yeah. This was pretty close, although I am using jest, so I had to modify the code a little. I am testing an angular resolver that has to select stuff from ngrx store. Also the mocked selector factory function output requires a MemoizedSelector output type. so I had to create a fake selector there. I am also using @ngneat/spectator/jest. That's where the spectator variable comes from.
",2021-08-04 21:50:31.000000,2,,Not a Bug
413,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Thanks ! This solved most of my issues. Still, when I use multiple times the same selector factory with different arguments in the same effect, I keep getting ""error"": [TypeError: Cannot read property 'ids' of undefined].
Do you have any idea why ?",2021-08-06 18:24:41.000000,3,,Not a Bug
414,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,I wonder if you are using NGRX Entities. EntityState has this ids field. Maybe at some point your entity becomes undefined during testing. Because if you mocked your selector - it should just keep returning the same thing unless it gets altered somewhere.,2021-08-07 20:04:12.000000,4,,Not a Bug
415,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,Is there a different way of mocking the factory selector without changing the compilerOptions for Jasmine?,2021-08-09 06:34:55.000000,5,,Not a Bug
416,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,@Kosmonaft memoize the factory and use return values with overrideSelector. This works because memorized factory always returns a reference to the same selector for the same arguments.,2021-08-09 07:09:14.000000,6,,Not a Bug
417,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"@dmitryr117 You're right, I am using NgRX Entities. But I already have several tests that work fine with your solution.
Now, as I said before, the only tests that are failing are those when I use multiple times the same selector factory with different arguments in the same effect.
I don't know how the ids field could become undefined, this is an internal property, we're not supposed to alter it in any way :/",2021-08-10 19:19:48.000000,7,,Not a Bug
418,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,@lhbruneton I guess I you might have to post the code of what you are doing with an effect and the test because it is a bit unclear what is causing it. May have to do something with mocked function returning exactly the same output every time. I was unable to reproduce this issue in my environment.,2021-08-10 22:25:17.000000,8,,Not a Bug
419,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"@dmitryr117

Yeah. This was pretty close ...

Never mind the question, I found the issue. The selector is not used in the component I'm testing but rather in it's entry component. And somehow moving the mockImplementation to 'should create' test helped. No idea why
",2021-08-12 07:20:39.000000,9,,Not a Bug
420,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"@dmitryr117 solution worked for me in my effect specs for anyone else ending up here.
I created a factory to create the mocks because I use this all over the place.
helper file

test file

which replaces
",2021-08-17 03:45:49.000000,10,,Not a Bug
421,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"
@lhbruneton I guess I you might have to post the code of what you are doing with an effect and the test because it is a bit unclear what is causing it. May have to do something with mocked function returning exactly the same output every time. I was unable to reproduce this issue in my environment.

@dmitryr117  Sorry for the late reply. Here is an isolated faulty commit
lhbruneton/taormina@1ca9a3f
As you can see, previous commits worked just fine.
So this is my new factory selector:

Here is my new effect:

And finally here is my new effect test:

And here is the resulting failing test
https://github.com/lhbruneton/taormina/pull/58/checks?check_run_id=3379128313
I will try to get a minimal repro running on stackblitz, but it will take some time.
In the meantime, thanks for any advice you can give me. I can try anything needed on this repo.",2021-08-20 06:23:45.000000,11,,Not a Bug
422,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"
Try this:

Note: If you're using Jasmine, set ""module"": ""commonjs"" in tsconfig.spec.json.



Try this:

Note: If you're using Jasmine, set ""module"": ""commonjs"" in tsconfig.spec.json.


This solution isn't working with Angular strict mode. Do you have any for strict mode ?",2021-09-07 09:37:54.000000,12,,Not a Bug
423,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"@maxpontreau
You can cast fake selector:

Or create a helper function:

Usage:
",2021-09-08 00:17:30.000000,13,,Not a Bug
424,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Just in case anyone ends up here trying to mock a Factory Selector in a Component that they're testing with Spectator, the suggestions above will work.  However, you need to make sure that you still provide an empty Mock Store in your createComponentFactory call:

Then, before you create your component, setup your spy:

This should successfully mock anything like this in your component:

You can then of course covert this to one of the helper functions suggested above if you are going to be using it a lot.
This was probably obvious to most people, but it took me a little while to figure out so I figured I would share.",2021-10-22 19:30:13.000000,14,,Not a Bug
425,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,Any updates on this? I would really like to know how this can be done as simple as before.,2021-11-29 15:48:19.000000,15,,Not a Bug
426,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Export your selectors in an object:

Then spying is trivial:
",2021-12-03 03:25:12.000000,16,,Not a Bug
427,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,Moving this to a discussion because this isn't a bug.,2022-01-06 17:30:46.000000,17,1.0,Not a Bug
428,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Is there any solution that does not include exporting/importing selectors as an object? How can a factory selector actually be mocked.
I tried something like this which seams to not do anything.
",2022-02-14 19:52:50.000000,18,,Not a Bug
429,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"Hi,
I was struggling with the presented solutions. For Jasmine they just don't work.
Reached this solution

No need to use ""module"": ""commonjs"" on tsconfig.spec.ts, also I was having problems when setting the tests to compile using ""commonjs"".",2022-03-16 08:23:25.000000,19,,Not a Bug
430,https://github.com/ngrx/platform/discussions/3279,2021-08-04 19:59:48.000000,"The solutions explained here are not working for me so far in Angular 13. I am spying on the selector in my test as below
NOTE: I tried setting the spy in beforeEach and beforeAll

BUT the error below is still thrown for the production code:

The selector in this case is using a factory (see below) and not props. Any hint of what may be wrong?
",2022-03-25 14:18:31.000000,20,,Not a Bug
431,https://github.com/nodejs/node/discussions/37488,2021-01-23 11:52:49.000000,Bikeshedding: util.escapeRegExpString which does the correct thing and keeps up to date with RegExp enhancements sound good to me.,2021-01-23 11:53:39.000000,1,,Non Actionable Topic
432,https://github.com/nodejs/node/discussions/37488,2021-01-23 11:52:49.000000,Your TC39 proposal seems very reasonable to me! 👍,2021-01-27 00:21:22.000000,2,,Non Actionable Topic
433,https://github.com/nodejs/node/discussions/37488,2021-01-23 11:52:49.000000,TC39 has agreed to promote the proposal to stage 1 - so I'd really rather pursue it there first.,2021-02-01 13:47:17.000000,3,,Non Actionable Topic
434,https://github.com/nodejs/node/discussions/37488,2021-01-23 11:52:49.000000,@benjamingr ... any objections to converting this into a discussion rather than keeping it open as an issue?,2021-02-22 22:35:26.000000,4,1.0,Non Actionable Topic
435,https://github.com/nodejs/node/discussions/37488,2021-01-23 11:52:49.000000,@jasnell sure,2021-02-23 06:54:02.000000,5,,Non Actionable Topic
436,https://github.com/nodejs/node/discussions/42188,2022-02-28 23:30:46.000000,I've converted this to a discussion because this is likely not a bug in node.js itself.,2022-03-02 16:50:29.000000,1,1.0,Not a Bug
437,https://github.com/nolimits4web/swiper/discussions/4724,2021-06-30 14:02:56.000000,Blank issues are not allowed. Move it to discussion then,2021-06-30 14:07:16.000000,1,1.0,Non Actionable Topic
438,https://github.com/nolimits4web/swiper/discussions/4724,2021-06-30 14:02:56.000000,"So is it some magic thing that no one knows if it's even possible to achieve? :P
The main issue I'm having is that Swiper have fixed sliding value for each element and I couldn't get it to correct itself or find a way to override. The closest I'm to get this is by setting default width through CSS for each element and different for active element while having slidesPerView: 'auto'. I'm using my own class on because I want Swiper to calculate all widths before setting wider one so the movement will place active slide at the left edge. Without this it ends up being move to far. But even though the movement length has proper value, it ends up not showing last element. Quite obvious why...
As a bonus issue, that may happen, is the fact that I don't actually want last elements to be wider. I mean, if you look at the pic above, when 3 is green 4-6 should be yellow and sliding should end. So it this example they won't be wider at any time.
Commented out are the things that I was testing.
",2021-08-02 13:51:09.000000,2,,Non Actionable Topic
439,https://github.com/nolimits4web/swiper/discussions/4724,2021-06-30 14:02:56.000000,"Small update. I've manage to get it to work...sort of...by making huge workaround. One of the config did almost work but last slide wasn't shown because wrong slide length. I added dummy slide at the end which surprisingly did the trick. I had to make small adjustment to the way Swiper behaves on smaller screens by setting display: none on dummy and making on slide the same width as the rest.
I'm not happy with that solution though. Would rather have something more elegant...",2021-08-06 08:13:35.000000,3,,Non Actionable Topic
440,https://github.com/pixijs/pixijs/discussions/7205,2021-01-25 18:33:26.000000,@githubaccount256 my apologies. I migrated this to a discussion because it was a more open-ended question than a specific bug. But now I don't see @SukantPal's responses. I think GitHub borked the converting to Discussions.,2021-01-26 15:27:16.000000,1,1.0,Non Actionable Topic
441,https://github.com/pixijs/pixijs/discussions/7405,2021-04-14 12:40:14.000000,"Hi @donmahallem, thanks for pointing this out. In general, integration with other DOM frameworks like React or Angular isn't a priority for this project. There are lots of resources like Stack Overflow and other places for tips on how to get this to work. Also, for support-related questions, if you wouldn't mind, please use the Discussion section not Issues.
That being said, here is the important bit:

The easiest solution is to do this:


Here's the reason why this works. If you're using the sub-packages (@pixi/*) you should consult https://pixijs.io/customize to make sure that Renderer plugins are properly installed. I suspect you're missing these bits:

The batch plugin is used for rendering Sprites. If that's not installed, you get the behavior you were seeing.",2021-04-14 16:42:27.000000,1,1.0,Non Actionable Topic
442,https://github.com/pixijs/pixijs/discussions/7467,2021-05-03 14:46:09.000000,Not reproduced for Win10.,2021-05-04 07:37:20.000000,1,,Unrelated Repository
443,https://github.com/pixijs/pixijs/discussions/7467,2021-05-03 14:46:09.000000,Just tried with Windows 10 and yes you are right. The issue cannot be reproduced with Windows 10 which actually makes it more strange.. So these warning messages are only generated when you use (1) macOS and (2) Google Chrome.,2021-05-04 13:32:45.000000,2,,Unrelated Repository
444,https://github.com/pixijs/pixijs/discussions/7467,2021-05-03 14:46:09.000000,"Going to convert this to a discussion as issues isn't the right place getting help to debug projects. Generally, third party library integrations isn't something we support, but I'm sure folks might have some input who've had to shared context with other WebGL libraries.",2021-05-04 17:02:22.000000,3,1.0,Unrelated Repository
445,https://github.com/pixijs/pixijs/discussions/7506,2021-05-24 09:44:06.000000,Transferring this to a discussion.,2021-05-24 15:59:01.000000,1,1.0,Non Actionable Topic
446,https://github.com/pixijs/pixijs/discussions/7525,2021-06-06 14:26:19.000000,"For general questions, please create a discussion. Thank you. Transferring this...",2021-06-06 14:34:47.000000,1,1.0,Non Actionable Topic
447,https://github.com/pixijs/pixijs/discussions/7615,2021-07-18 02:13:05.000000,"if you dont want threejs to do any events at all - you can use pointer-events: none; css on that canvas.
If your case is different, you hav to debug more or give us full reproduction. It could be that I already had an answer, but not in this case :(",2021-07-18 03:17:39.000000,1,,Not a Bug
448,https://github.com/pixijs/pixijs/discussions/7615,2021-07-18 02:13:05.000000,"Hey Ivan, thanks for the reply.
Looks like I can't reproduce the issue in a simple case, so must be something on my side. For anyone else trying to achieve the same thing, here is the attempt at reproduction:
https://codesandbox.io/s/pixijs-forked-x615y?file=/src/index.js",2021-07-18 10:24:09.000000,2,,Not a Bug
449,https://github.com/pixijs/pixijs/discussions/7615,2021-07-18 02:13:05.000000,"Actually I've managed to reproduce it by using a regular div instead of three.js:
https://codesandbox.io/s/pixijs-forked-lf3db?file=/src/index.js",2021-07-18 11:39:32.000000,3,,Not a Bug
450,https://github.com/pixijs/pixijs/discussions/7615,2021-07-18 02:13:05.000000,"I don't know why the three.js canvas wouldn't work, but it looks like the math in mapPositionToPoint is expecting to be used on a canvas. I'm guessing that we should be using the Pixi Renderer's canvas instead of (this.interactionDOMElement as any), but I'm not sure.",2021-07-19 14:06:31.000000,4,,Not a Bug
451,https://github.com/pixijs/pixijs/discussions/7615,2021-07-18 02:13:05.000000,"
I don't know why the three.js canvas wouldn't work, but it looks like the math in mapPositionToPoint is expecting to be used on a canvas. I'm guessing that we should be using the Pixi Renderer's canvas instead of (this.interactionDOMElement as any), but I'm not sure.

Yeah I managed to get it working when applying it directly to the three.js canvas. I have not had any luck for non-canvas elements. This might be intended behaviour, in which case setTargetElement documentation/types should take a HTMLCanvasElement instead of a generic HTMLElement",2021-07-19 14:27:12.000000,5,,Not a Bug
452,https://github.com/pixijs/pixijs/discussions/7615,2021-07-18 02:13:05.000000,This is more of a support question than a bug. Supporting three.js and pixi on top of each other with interactivity is not a case we're supporting. Converting this to a discussion.,2021-07-19 14:53:47.000000,6,1.0,Not a Bug
453,https://github.com/pixijs/pixijs/discussions/7681,2021-08-04 19:33:07.000000,"Converting this to a discussion, since it seems largely to be a question about browser behavior.",2021-08-06 16:18:58.000000,1,1.0,Non Actionable Topic
454,https://github.com/pixijs/pixijs/discussions/7953,2021-11-03 21:49:39.000000,Serializing Pixi objects is not supported. You'll need to come up with your own solution. Unless other folks have recommendations.,2021-11-03 22:51:04.000000,1,,Non Actionable Topic
455,https://github.com/pixijs/pixijs/discussions/7953,2021-11-03 21:49:39.000000,"The biggest offender if I remember correctly was ObservablePoint.
It keeps a reference to the context of the function it's supposed to call when it changes and that usually is the same object that has the point to begin with.
Try using a custom replacer and reviver in the JSON.parse method or try something like https://www.npmjs.com/package/flatted",2021-11-04 01:32:43.000000,2,,Non Actionable Topic
456,https://github.com/pixijs/pixijs/discussions/7953,2021-11-03 21:49:39.000000,Kinda still seems like a bug / not ideal to have any kind of circular dependencies. Thanx for the workaround tho will try give them a try 🙂. Should the first prize not be to remove the circular dependencies tho?,2021-11-04 07:03:53.000000,3,,Non Actionable Topic
457,https://github.com/pixijs/pixijs/discussions/7953,2021-11-03 21:49:39.000000,"I'm moving this to a discussion. Supporting JSON serialization is not a feature we are interested in adding, but someone could easily come up with a plugin solution to mixin toJSON and fromJSON methods to relevant display objects.",2021-11-04 15:22:25.000000,4,1.0,Non Actionable Topic
458,https://github.com/pixijs/pixijs/discussions/8002,2021-11-17 07:47:01.000000,You can draw filled rectangle with https://pixijs.download/dev/docs/PIXI.Graphics.html,2021-11-17 08:19:43.000000,1,,Non Actionable Topic
459,https://github.com/pixijs/pixijs/discussions/8002,2021-11-17 07:47:01.000000,"
You can draw filled rectangle with https://pixijs.download/dev/docs/PIXI.Graphics.html

i want add to particlecontainer",2021-11-18 03:04:11.000000,2,,Non Actionable Topic
460,https://github.com/pixijs/pixijs/discussions/8002,2021-11-17 07:47:01.000000,"

You can draw filled rectangle with https://pixijs.download/dev/docs/PIXI.Graphics.html

i want add to particlecontainer

Try this one
var sprites = new PIXI.particles.ParticleContainer(10000, {
scale: true,
position: true,
rotation: true,
uvs: true,
alpha: true
});",2021-11-18 04:16:32.000000,3,,Non Actionable Topic
461,https://github.com/pixijs/pixijs/discussions/8002,2021-11-17 07:47:01.000000,"If you need help getting started, please use discussions instead of creating an issue.
Also, seems like you're just getting started with Pixi (congrats!), consider checking out these resources first:

PixiJS Guides
PixiJS Elementals
PixiJS Examples
",2021-11-18 12:29:51.000000,4,1.0,Non Actionable Topic
462,https://github.com/pixijs/pixijs/discussions/8002,2021-11-17 07:47:01.000000,"If you want has billion sprites, you can use a trick:

Or can use  a canvas as color source in texture with 1x1 dimensions:

Or must use a direct buffers usage for 2000-10k dots
https://www.pixiplayground.com/#/edit/5bWjCjL70izwdVOncfzoM",2021-11-19 07:05:22.000000,5,,Non Actionable Topic
463,https://github.com/pixijs/pixijs/discussions/8100,2022-01-14 09:46:54.000000,"For general support questions, please use the discussions. Thank you for helping us to keep the project organized.",2022-01-14 11:36:37.000000,1,1.0,Non Actionable Topic
464,https://github.com/pixijs/pixijs/discussions/8128,2022-01-21 14:13:00.000000,"I noticed that you're doing your own resize, Application has a resize implementation already built in that you should consider using the resizeTo option. This can be the Window or an HTMLElement.

Also, I made this a discussion, which is better for support than using Issues. If you have a specific code bug, please create a new issue otherwise discussions are better. Thanks.",2022-01-21 15:12:03.000000,1,1.0,Non Actionable Topic
465,https://github.com/pixijs/pixijs/discussions/8271,2022-04-06 09:31:19.000000,"First , try to do your own mesh with texture , it can be SimplePlane.
Feature for curving into arbitrary projection wasnt supported enough by users so i didnt finish it. If you understand how it works - you can use, otherwise use the same method people use in other 2d engines - just make a plane that looks good enough.",2022-04-06 10:33:23.000000,1,,Non Actionable Topic
466,https://github.com/pixijs/pixijs/discussions/8271,2022-04-06 09:31:19.000000,"SimplePlane is worked well with the curve by using mesh texture. However, I don't know how to apply the transformation into SimplePlane such as using Quad billinear from Pixi Projection.
For example,

Just an idea and I'm not sure will it work. Any suggestion?",2022-04-06 10:46:39.000000,2,,Non Actionable Topic
467,https://github.com/pixijs/pixijs/discussions/8271,2022-04-06 09:31:19.000000,"You have to make formulas for translation from screen coords to cylinder coords and back, put it to special class that i use for bilinear.
Alternatively, you can try make mesh that works in 3d with pixi-projection, and supply it with 3d coords - the result will be a bit different from SimplePlane.
It all is possible, you are one of rare users who request that feature, and it wasnt funded, nor did i have my own projects that need that. You have to do it yourself, or fund it, or wait when one of those who can do it will need it for his own projects ))",2022-04-06 10:52:10.000000,3,,Non Actionable Topic
468,https://github.com/pixijs/pixijs/discussions/8271,2022-04-06 09:31:19.000000,"Or do you have the method that change SimplePlane into texture, so that I can transform it by Pixi-Projection",2022-04-06 11:44:31.000000,4,,Non Actionable Topic
469,https://github.com/pixijs/pixijs/discussions/8271,2022-04-06 09:31:19.000000,"For support or help related issues, please create a discussion. Thanks for helping us keep the project organized.",2022-04-06 12:24:59.000000,5,1.0,Non Actionable Topic
470,https://github.com/pixijs/pixijs/discussions/8271,2022-04-06 09:31:19.000000,"Solved, Just use ""app.renderer.generateTexture()"" to convert any object to texture
",2022-04-06 14:25:41.000000,6,,Non Actionable Topic
471,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"I have managed to fix this by changing sourceMapPathOverrides in launch.json to the following:

I have not thoroughly tested it yet but it seems to be working. Reference: https://stackoverflow.com/questions/52648552/debugger-settings-for-chrome-in-vs-code-with-vue-js
I am not closing this issue since I believe the Quasar document should be changed to reflect receent changes in VS Code or Webpack (not sure when and where this breaking change was introduced).",2021-06-10 16:19:28.000000,1,,Unrelated Repository
472,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"Having the same issue: Can't set breakpoints in Vue files in VSCode on Win10.

Generate fresh new app with Quasar 3.1.0 and all settings default.
Tried both with and without Typescript support.
Using VSCode 1.59.1, tried both with and without Chrome debugger.

Finally got it to work using:

Where junk2 is the project root directory
Beat.  Further update...
Tried using cheap-source-map in quasar.conf.js and now all breakpoints are being hit.  Is this some kind of caching issue?
",2021-08-28 04:52:20.000000,2,,Unrelated Repository
473,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"For the life of me, I swear I have tried every combination of 'sourceMapPathOverrides' people have suggested and I just cant get it to hit my breakpoints.",2021-08-28 13:23:18.000000,3,,Unrelated Repository
474,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"@jaybo Thanks. I ended up with this.

The first line gets most of the project source files.
The second line was needed depending on which debugger was used to silence an error from js files in /.quasar folder",2021-09-09 03:21:14.000000,4,,Unrelated Repository
475,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"This is crazy...
Thanks @jaybo  & @exemplari your config helps me a bit, but I still got really weird issues...
Step 1/ Create new quasar project
=> breakpoint doesn't work
Step 2/ Update launch.json config with this one:

=> Now breakpoint does work on this new project BUT
Step 3/ If I copy this project into a new folder,
=> breakpoints won't work anymore... (for the new folder)
What is going on with VSCode here ? oO",2021-09-17 09:15:45.000000,5,,Unrelated Repository
476,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"@xavier-rodet  and anyone lost in debug strangeness.
Using VS-Code nightly debugger (ms-vscode.js-debug-nightly) and the webpack 5 style sourceMap is the solution. However, windows 10 is the underlying problem.
There is an issue with Windows 10 / WSL2 and reserved ports , since around version 2004 . I haven't seen any real explanation of this but here is an example microsoft/WSL#5306
For me this results in trying to launch the debugger and it sometimes working, sometimes not, depending on the randomly assigned ports used for connecting vscode to the browser. Testing this on windows 8 machine and the debugger never miss.",2021-09-17 22:51:44.000000,6,,Unrelated Repository
477,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"Same issue bothers me a lot, is there any solution update?",2021-09-24 11:03:15.000000,7,,Unrelated Repository
478,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"I found that debugger works on .js files, but not on .vue. I use pug for templates. If I use standard html then breakpoints works ok. What it can be?
My configuration:

build section from quasar.conf.js
",2021-09-24 11:41:51.000000,8,,Unrelated Repository
479,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,I am moving this to Discussions as this is not a Quasar issue.,2021-10-06 14:03:03.000000,9,1.0,Unrelated Repository
480,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"I'm work with:


quasar.conf.js
build: {
     devtool: ""source-map""
 }


launch.json
""webRoot"": ""${workspaceFolder}/src"",
     ""sourceMapPathOverrides"": {
         ""webpack://${workspaceFolderBasename}/./src/*"": ""${webRoot}/*""
     },
     ""sourceMaps"": true,

",2021-10-17 17:22:16.000000,10,,Unrelated Repository
481,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"The following worked for me.
quasar.conf.js

launch.json
",2021-11-30 00:00:43.000000,11,,Unrelated Repository
482,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"@robMolloy @ljubadr I'm having the same issue.  I just converted a reasonably large Quasar JavaScript project to TypeScript, and everything is working fine EXCEPT I can't set breakpoints in .vue files.   I think I've tried all permutations of possible project file and launch settings, along with different versions of the relevant libraries.  Since @hawkeye64 indicates this isn't a Quasar issue, I'm at a loss how to fix it.

Will switching to Vite have any impact?
Does ANYBODY have TypeScript/Vue debugging working?  If so can you please post your quasar.conf.js and launch.json?
",2022-03-13 21:25:35.000000,12,,Unrelated Repository
483,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"Can't get it to work with Webstorm either. Breakpoints are not hit, frustrating.",2022-03-27 12:32:31.000000,13,,Unrelated Repository
484,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,Still no way to make it work,2022-04-01 08:31:45.000000,14,,Unrelated Repository
485,https://github.com/quasarframework/quasar/discussions/10910,2021-06-08 23:01:53.000000,"Seems to be related to this https://ckhconsulting.com/vue-typescript-debuggers/
A quick test to move the script section above the template section kind of confirms this. I got some active breakpoints, but the line numbering is still off.
I also tried a small test with Vite + VsCode and debugging is working properly everywhere (Vue, script setup TS, etc.).
Not sure if we can migrate to Vite however.",2022-04-07 11:04:38.000000,15,,Unrelated Repository
486,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,"unable to reproduce:
https://codepen.io/tobias-mesquita/pen/vYxxLLX?editors=1010",2021-05-21 20:34:57.000000,1,,Not a Bug
487,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,"creating store from  new Vuex.Store() will be ok.
have you follow the docs and use it in project instead of codepen ?",2021-05-22 06:52:27.000000,2,,Not a Bug
488,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,"One thing that is out of place (at first glance) in the code that you pasted is that you're using a composition method inside of the mounted() hook (useRouter). A big ""NO"". In your mounted() you should use this.$router/this.$route instead (since the mounted hook is part of Options API). Composition methods should be used exclusively inside of the setup() method. Also, it's best to not mix Composition API with Options API.",2021-05-22 10:10:05.000000,3,,Not a Bug
489,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,We can convert this into a GH Discussion if you want (post a reply to do so). So closing this ticket as it has nothing to do with an eventual bug in Quasar.,2021-05-22 10:12:09.000000,4,1.0,Not a Bug
490,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,sure， how to convert this issue to discussion？,2021-05-22 10:38:13.000000,5,,Not a Bug
491,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,"problem solved. cause quasar new store  put a storeKey and use it to create the store

then if i use useStore() without the storeKey it will give me undefinded",2021-05-22 16:47:44.000000,6,,Not a Bug
492,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,"
here will make undefinded
to the solve is to create store without the storeKey in src/store/index.ts

or import the key from ../store in vue template

but the storeKey is automatic generated, I think  we should point it out in the docs",2021-05-22 16:53:19.000000,7,,Not a Bug
493,https://github.com/quasarframework/quasar/discussions/9373,2021-05-21 20:18:31.000000,"@metalsadman
Had the same problem with Quasar 2.0.1 and TS. Fixed by following your advice and doing: import { useStore } from 'src/store'.
Thanks for the help!",2021-07-01 20:37:50.000000,8,,Not a Bug
494,https://github.com/quasarframework/quasar/discussions/9815,2021-06-25 14:59:10.000000,"@bangdragon Please provide more info
Quasar v1 or v2?
If Quasar v1, then

Now you can access via this.getAuth and this.signOut
If you are using Quasar v2, then you will need to go look at Vuex docs and see what has changed because there is no longer ""this"" available with Composition API.
Also, moving this to discussions...",2021-06-25 19:13:39.000000,1,1.0,Non Actionable Topic
495,https://github.com/ReactiveX/rxjs/discussions/6047,2021-02-23 20:08:51.000000,In my opinion I think this is same as #5398 (comment) and it's caller's responsibility to protect mutation.,2021-02-23 20:11:14.000000,1,,Not a Bug
496,https://github.com/ReactiveX/rxjs/discussions/6047,2021-02-23 20:08:51.000000,"
In my opinion I think this is same as #5398 (comment) and it's caller's responsibility to protect mutation.

a) RxJS should be protecting the pushed value to the Behavior Subject to not be changed unless you want side effects through your whole code.  You can see, in my tiny example, how easy is to mess the value and how other functions using getValue can then get side-effected. This would be a big hole in the design of RxJS itself, so I don't really buy the idea this is an expected ""feature"".
b)However, lets believe this is the ""expected"" behavior and any function/method can ""mess"" (sorry I can't find a better word) the value stored in a Subject through reference as the repro case is showing, then RxJS should be sending to all the ""subscriptions"" the change done by reference so they can react accordingly.
Current implementation is not doing a) nor b).",2021-02-23 21:18:17.000000,2,,Not a Bug
497,https://github.com/ReactiveX/rxjs/discussions/6047,2021-02-23 20:08:51.000000,"I am personally not in agreement for both, but probably other team member might have different opinions so I'll leave this as opened. However, at least I do not think this is a known bug to be filed, so moving this as into discussions for further update.",2021-02-23 21:21:49.000000,3,1.0,Not a Bug
498,https://github.com/ReactiveX/rxjs/discussions/6047,2021-02-23 20:08:51.000000,"Then I am open to ideas. However my bet is that right now developers using ""getValue()"" or "".value"" are probably mutating by reference the values stored in the Subjects and scratching their heads when another method returns a ""mutated"" value from the Subject.value.
Do really RxJava or other implementations really return a reference and not a deep copy in getValue()? Just curious.
Not protecting the Subject value from unwanted changes seems illogical from my developer perspective.",2021-02-23 21:33:31.000000,4,,Not a Bug
499,https://github.com/ReactiveX/rxjs/discussions/6047,2021-02-23 20:08:51.000000,"We can't really do this. If you're worried about mutations, you could always use a library like Immer and next those into the subject.
The problem is, we'd have to perform deep copies of objects in order to really protect completely. Deep copying is pretty slow and very inefficient. Also then the expectation is would be doing it everywhere. Like scan, for example.
",2021-02-25 15:31:02.000000,5,,Not a Bug
500,https://github.com/ReactiveX/rxjs/discussions/6069,2021-03-01 17:32:02.000000,This issue is moved to discussions per its category.,2021-03-01 17:34:22.000000,1,1.0,Non Actionable Topic
501,https://github.com/ReactiveX/rxjs/discussions/6069,2021-03-01 17:32:02.000000,"I can see the issue you're coming across. race is the likely choice, but one error kills it right? Add catchError on each inner observable and return EMPTY on them.
Sadly, that doesn't do what you want either because you still don't know if all of them errored; although, you do. If you put finalize() or endWith, you can have that fire when all of them complete. Using scan, you can check if you had a previous value. If not, then they all errored.

Does this do what you want? I haven't tested it, but it sounds like what you want.",2021-03-02 00:46:31.000000,2,,Non Actionable Topic
502,https://github.com/ReactiveX/rxjs/discussions/6288,2021-04-28 18:01:45.000000,"Moved into discussion since this is not a bug.
There were some internal discussions around different assertion suite and what we want to do in the future, but we don't have conclusion yet. After those rx-sandbox have some diverged interfaces along with its DSL definitions compare to built in testscheulder which makes codes are not directly usable. At this point I don't have strong desire to port things over into testscheduler.",2021-04-28 18:17:49.000000,1,1.0,Non Actionable Topic
503,https://github.com/ReactiveX/rxjs/discussions/6317,2021-05-02 09:13:45.000000,"There are multiple factors affecting this. Majorly #5270 / #6295 will be first step to make output more closer to native ecma support, but it won't be complete in single major release.

Also, would it be an idea to remove these implicit conversions in a next version?

This is separate, so far I do not think we'll going to pursue in a short time period of release at least.",2021-05-02 09:18:39.000000,1,,Information storage
504,https://github.com/ReactiveX/rxjs/discussions/6317,2021-05-02 09:13:45.000000,Moved to discussions as issue is being used for core team's backlog.,2021-05-02 09:19:24.000000,2,1.0,Information storage
505,https://github.com/ReactiveX/rxjs/discussions/6461,2021-06-07 18:59:06.000000,Moved to the discussions with specific category.,2021-06-07 19:00:23.000000,1,1.0,Non Actionable Topic
506,https://github.com/ReactiveX/rxjs/discussions/6461,2021-06-07 18:59:06.000000,Does https://rxjs-dev.firebaseapp.com/api/operators/takeLast solve your problem if it is applied on the inner observable?,2021-06-07 19:32:09.000000,2,,Non Actionable Topic
507,https://github.com/ReactiveX/rxjs/discussions/6461,2021-06-07 18:59:06.000000,"this should be similar to the removed inspectTime, but instead of a fixed timeout you want the inner observable to take the decision when to resume.
so something like this:
",2021-06-09 23:02:33.000000,3,,Non Actionable Topic
508,https://github.com/ReactiveX/rxjs/discussions/6572,2021-08-18 19:41:31.000000,"Hi, thanks for the opinions, As pinned #5970 , we use gh issues as core team's tracking backlog & code-side bug report only. For further tracking, I'll moving these into discussions page.",2021-08-18 19:43:31.000000,1,1.0,Others
509,https://github.com/ReactiveX/rxjs/discussions/6572,2021-08-18 19:41:31.000000,"In my mind these are all synonyms, but it just depends on the context or abstraction level I see more fit using one or the other.

returning: This I would say it's the least correct, but the way I see it's being used in the docs is always in-between quotes (e.g. // ""return"" another value) when comparing it to functions which return only one value. I think it can be useful for people who's never seen an Observable to understand what scope this new concept covers.
pushing: This concept is being used when thinking on terms of ""pull vs push"" - You pull values from a Function or an iterator, and you get values pushed from a promise or an observable. This is just another perspective.
emitting: This is probably the concept specific for observables.
nexting: An observable you can call .next(, .error( or .complete(. Nexting is just emiting new values through .next(.

I can see how it might be confusing, but I think each one of them can be used depending on the context you're in. Are you trying to get someone that only has used regular functions into Observables? Then explaining it initially in terms of ""return"" could make sense. Are you explaining it to someone who's played with promises and iterators and is familiar with the pull/push concepts? Then push makes all the sense. Are you abstracting over the Observable itself, then emit is the right word. Are you down to the implementation level? then .next() also works.",2021-08-19 06:31:43.000000,2,,Others
510,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Thanks for writing this up!
I get the general gist of what you're saying here. Unfortunately, I've never dealt with SSR usage myself, so it's a topic I don't have any real experience with or suggestions to offer.
I am curious how other React ecosystem state management libs deal with this question, as well as how other similar tools like VueX and NgRx handle this.  Would be interested in seeing comparisons even if the answer is ""Vue and Angular just have very different constraints, so this isn't an issue there"".",2021-02-06 19:44:17.000000,1,,Non Actionable Topic
511,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Not a SSR person here, but serious question:
Does this type of SSR code splitting make any sense at all, since stuff like bundle size does not play a role there?
I would imagine that on the server, you probably want to load all reducers at initialization and only do the code splitting/late injection on client side.
True, this would lead to a phase where the reducer would not be injected after initially having been injected and it would increase the size of store contents to be communicated from server to client (since it would contain all initialStates of various to-be-injected reducers). The question is if those cases would pose a realistic problem.",2021-02-06 19:59:03.000000,2,,Non Actionable Topic
512,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"@phryneas That's a good question that I didn't cover in the original post!
The bloated initialState can indeed be a problem, but you can solve that by removing any state that is the same as the initial reducer state (since that will be recreated on the client anyway when the reducers are created). The problem is that you still need to inject the reducer ahead of time or inside render on the client to avoid hydration mismatches.
Edit to clarify: Hydration mismatches are when the markup created on the server and the client does not match. First render on the client needs to produce exact same result as on the server, so you still can't run injectReducer in a useEffect since that will happen after initial render.",2021-02-06 20:07:25.000000,3,,Non Actionable Topic
513,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Maaaybe you could do something crazy like injecting all reducers on the server as per above and (pseudo-code):


I haven't thought this through, but doesn't feel like a great solution even if it did work?",2021-02-06 20:22:45.000000,4,,Non Actionable Topic
514,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"
Does this type of SSR code splitting make any sense at all, since stuff like bundle size does not play a role there?

Oh, and just to comment on this, with serverless and lambdas code size does matter, but definitely less than on the client and for most apps I don't think including all reducers in the server code would be a problem.
With ducks or RTK slices it's just not reducers though but actions and selectors too since they live in the same file, but still.",2021-02-06 20:28:44.000000,5,,Non Actionable Topic
515,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Maybe turn your ""global"" pattern around:
Inject a slice reducer on module load and additionally, register it to a global variable. (Since you want a reducer to be present once you start importing the actions and/or selectors as well I guess?)
That would do it for the client/first SSR.
On the server, just inject all reducers that are already registered to that global reducer collection on every store creation.",2021-02-06 20:33:23.000000,6,,Non Actionable Topic
516,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"That would be neat and I remember pursuing this avenue a year ago or so, I just remembered why it sadly doesn't work. 😞
The code for the dynamic components is not parsed and executed immediately, it happens inside of render of the parent component. I'm not sure if this applies to all of next/dynamic, loadable-components and react-universal-component but I think so and know it does with some of them.",2021-02-06 20:41:18.000000,7,,Non Actionable Topic
517,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Before the client component could actually execute anything imported from the slice module, the whole slice module would need to be parsed though?
Can you give a specific example on how that would not work?",2021-02-06 20:58:28.000000,8,,Non Actionable Topic
518,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Yes. I think I misunderstood your comment as registering all reducers to a global registry ahead of creating the store by doing that in the module scope. That wouldn't work because of the above, but registering reducers to an already created global store would still work which on rereading seems like what you meant?
But then I don't quite understand how your suggestion turns the pattern around? You would still need access to the store in the module scope, which would mean making it global on the client? Did you mean it as just a convenient way to inject all reducers on the server and avoiding a manual step for that? Still, registering them to a global variable would happen upon the first render on the server unless you preload the modules to execute that code explicitly ahead of render, which is possible in many frameworks through an extra step.",2021-02-06 21:08:53.000000,9,,Non Actionable Topic
519,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"I need to think some more about this. My gut feeling is that it could be a possible solution in some or even many cases, but might not be general enough to solve all cases for all frameworks. Maybe not a solution to base an official API surface on, but could be generalizable enough to warrant adding a pattern for in the docs (though if you include scrubbing unused initialState it might get large). Too tired to think it through all the implications right now though so might be wrong both ways. 😄
(On that note, since client side is a lot simpler, adding a pattern for where and how to call injectReducer in the client side case to the docs would be a nice thing!)",2021-02-06 21:17:11.000000,10,,Non Actionable Topic
520,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Well, your point was that ""module scope"" is only read once for all invocations for SSR, so injecting on module load is not an option, right?
My point is that ""injecing on module load"" will work just fine for the client. And for the server, you would do ""register on module load in a central place"". And on every subsequent store creation on the server, you can already inject all those ""registered reducers"" into that newly created store.
That way, you would be in that situation of ""server has all reducers, client only the required ones"".
Leaves the ""hydration mismatch"" problem, but I don't necessarily think so: if you follow the ducks pattern and import reducer, selectors and action creators from the same file, you can ensure that the correct reducer will always be injected before a selector is executed.",2021-02-06 21:23:21.000000,11,,Non Actionable Topic
521,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"
Well, your point was that ""module scope"" is only read once for all invocations for SSR, so injecting on module load is not an option, right?

Yes, for the server this is not possible (technically it could be with isolates or other fancy solutions which isolates each request into it's own scope, but that's complex and can't be an official solution so lets leave that aside).

My point is that ""injecing on module load"" will work just fine for the client. And for the server, you would do ""register on module load in a central place"". And on every subsequent store creation on the server, you can already inject all those ""registered reducers"" into that newly created store.

Unless modules are explicitly not dynamically loaded on the server, or explicitly preloaded ahead of time, that registration wont happen until that particular module has been rendered at least once, leaving the first render of any path broken. Now that I think about this, either of those solutions would pretty much require no code splitting on the server, which would definitely be bad in the serverless case.

Leaves the ""hydration mismatch"" problem, but I don't necessarily think so

This is indeed not a problem in this solution.
Thanks for clarifying, I indeed misunderstood the first time and understood you correctly the second time. 😄",2021-02-06 21:33:15.000000,12,,Non Actionable Topic
522,https://github.com/reduxjs/redux/discussions/4011,2021-02-06 19:31:08.000000,"Since this is more of a discussion than an issue, I'm moving it over here.",2021-02-06 23:05:30.000000,13,1.0,Non Actionable Topic
523,https://github.com/renovatebot/renovate/discussions/10680,2021-07-01 05:37:46.000000,Needs debug logs and should be a discussion instead of an issue.,2021-07-01 06:12:12.000000,1,1.0,Invalid issues
524,https://github.com/renovatebot/renovate/discussions/11657,2021-09-09 02:33:42.000000,"I appreciate you documenting all the things you tried, but there's too much going on in this to be an issue and so I've converted it to a Discussion until something narrower can be done, and a minimal reproduction repo made. The best solution for you would be for Renovate to read and understand Yarns own registry config in .yarnrc.yml, right? (https://yarnpkg.com/configuration/yarnrc#npmPublishRegistry)",2021-09-09 14:37:38.000000,1,1.0,Further discussion
525,https://github.com/renovatebot/renovate/discussions/11657,2021-09-09 02:33:42.000000,"For some reason, with the below settings it worked:

Did it now undoing all the other things I've done before. I don't know if there was some cache or if the other things like having a .npmrc file at repo was somehow conflicting.
Forcing the yarn > 3 constraint also helped with other issues, at other repo node updates was causing artifact erros without it.
Since it is working we can close the discussion.
Thanks a lot for the support!",2021-09-12 03:12:02.000000,2,,Further discussion
526,https://github.com/renovatebot/renovate/discussions/12034,2021-10-05 21:15:47.000000,"@robstoll I've converted this to a discussion. As a first step, please trim your logs just to highlight the parts relevant to this topic.
Also you have confused me right away by linking to org.junit.jupiter:junit-jupiter-engine but then mentioning org.apache.maven:maven-model. Do you mean that it's not detecting any?
The best thing you could do is create a minimal reproduction, which reduces the logs and confusion by focusing on a single dependency.",2021-10-06 05:30:27.000000,1,1.0,Invalid issues
527,https://github.com/renovatebot/renovate/discussions/12603,2021-11-10 17:20:55.000000,"Please put long logs in a <details> and <summary> element. This will hide the logs until somebody clicks on the toggle. 😉
Example
Click me to see logs


Instructions

Copy/paste the Markdown I've put below.
Copy your log, and paste it between the backticks.
Remove/redact private or secret information.

",2021-11-10 17:30:08.000000,1,,Not a Bug
528,https://github.com/renovatebot/renovate/discussions/12603,2021-11-10 17:20:55.000000,"thx, this reads a lot better.",2021-11-10 21:27:49.000000,2,,Not a Bug
529,https://github.com/renovatebot/renovate/discussions/12603,2021-11-10 17:20:55.000000,"Looks like the versioning is not working for you.
You are capturing with your major capture group a value which will not produce a valid semantic version.
Your tags would produce following semantic versions:

As semantic versioning allows only numbers, except an optional leading v and the separating dots, the values can not be compared after generation and are therefore dropped.
If my assumption is correct and your tag pattern is <date>_<build number> and the build number is not reset each day,  you can use following version pattern:

Moving this into a discussion, as it looks like a configuration issue ATM",2021-11-10 22:42:06.000000,3,1.0,Not a Bug
530,https://github.com/renovatebot/renovate/discussions/12603,2021-11-10 17:20:55.000000,"
I tried and it is still failing",2021-11-11 09:45:40.000000,4,,Not a Bug
531,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,"Hi there,
Help us by making a minimal reproduction repository.
Before we can start work on your issue we first need to know exactly what's causing the current behavior. A minimal reproduction helps us with this.
To get started, please read our guide on creating a minimal reproduction to understand what is needed.
We may close the issue if you (or someone else) have not provided a minimal reproduction within two weeks. If you need more time, or are stuck, please ask for help or more time in a comment.
Good luck,
The Renovate team",2021-11-20 06:59:41.000000,1,,Invalid issues
532,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,"here is the link of the reproduction repo:
https://github.com/ZetraDev/Temp-NextJS-App
The typescript version is 4.4 (which is not latest) to test renovate",2021-11-20 08:00:26.000000,2,,Invalid issues
533,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,You're repo is missing the yarn executable.,2021-11-20 08:04:49.000000,3,,Invalid issues
534,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,what do you mean?,2021-11-20 08:06:30.000000,4,,Invalid issues
535,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,And the yarnrc. How do you invoke yarn manually?,2021-11-20 08:08:10.000000,5,,Invalid issues
536,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,yarn cretae next-app,2021-11-20 08:08:40.000000,6,,Invalid issues
537,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,Normally yarn V2+ will install itself to the .yarn folder. So the Global yarn V1 know to invoke the local yarn V2+.,2021-11-20 08:09:19.000000,7,,Invalid issues
538,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,"
yarn cretae next-app

Please create a github workflow so we can see the required command to restore deps and build the app.",2021-11-20 08:11:43.000000,8,,Invalid issues
539,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,yarn install to install deps and yarn build to build the app,2021-11-20 08:13:54.000000,9,,Invalid issues
540,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,and i have initialized yarn v3 in the repo,2021-11-20 08:23:02.000000,10,,Invalid issues
541,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,Can you now enable renovate on that repo to see the reproduction,2021-11-20 08:26:47.000000,11,,Invalid issues
542,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,"I have installed renovate and let it run check, for some reason it actually use yarn v3 to run check",2021-11-20 09:13:25.000000,12,,Invalid issues
543,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,"I tend to move this to a discussion, as it seems you repo config was wrong if you can't create a reproduction.",2021-11-22 12:59:34.000000,13,1.0,Invalid issues
544,https://github.com/renovatebot/renovate/discussions/12793,2021-11-20 06:15:55.000000,"Hi there,
Help us by making a minimal reproduction repository.
Before we can start work on your issue we first need to know exactly what's causing the current behavior. A minimal reproduction helps us with this.
To get started, please read our guide on creating a minimal reproduction to understand what is needed.
We may close the issue if you (or someone else) have not provided a minimal reproduction within two weeks. If you need more time, or are stuck, please ask for help or more time in a comment.
Good luck,
The Renovate team",2021-11-22 15:25:18.000000,14,,Invalid issues
545,https://github.com/renovatebot/renovate/discussions/13611,2022-01-18 05:48:14.000000,"This not a bug, so I've converted it to a discussion. Please start with a discussion first in future.
It's Renovate's job to update dependencies, and it's doing exactly what it should. If you have intentionally ""behind"" dependencies such as for testing, you can either:

Disable Renovate on those folders altogether, or
Use packageRules + allowedVersions to restrict the ranges allowed to update to
",2022-01-18 07:56:51.000000,1,1.0,Not a Bug
546,https://github.com/renovatebot/renovate/discussions/14359,2022-02-22 10:28:39.000000,Please never raise a bug report to ask a question or if you're unsure. Create a discussion instead. I have transferred this one and deleted the original issue.,2022-02-22 10:33:59.000000,1,1.0,Non Actionable Topic
547,https://github.com/renovatebot/renovate/discussions/14359,2022-02-22 10:28:39.000000,""":rebaseStalePrs"" and ""rebaseWhen"": ""never"" are conflicting settings. Please remove one.",2022-02-22 10:35:15.000000,2,,Non Actionable Topic
548,https://github.com/renovatebot/renovate/discussions/14359,2022-02-22 10:28:39.000000,Potentially the same problem as #13219,2022-02-22 10:51:37.000000,3,,Non Actionable Topic
549,https://github.com/renovatebot/renovate/discussions/14359,2022-02-22 10:28:39.000000,"Hi there,
Help us by making a minimal reproduction repository.
Before we can start work on your issue we first need to know exactly what's causing the current behavior. A minimal reproduction helps us with this.
To get started, please read our guide on creating a minimal reproduction to understand what is needed.
We may close the issue if you (or someone else) have not provided a minimal reproduction within two weeks. If you need more time, or are stuck, please ask for help or more time in a comment.
Good luck,
The Renovate team",2022-02-23 13:37:52.000000,4,,Non Actionable Topic
550,https://github.com/renovatebot/renovate/discussions/14457,2022-02-28 18:12:26.000000,This is not a bug. It's working as intended. Please open a discussion first. Maybe we can allow this as a feature request.,2022-02-28 18:19:32.000000,1,1.0,Not a bug
551,https://github.com/renovatebot/renovate/discussions/14724,2022-03-18 11:38:58.000000,"""prCreation"": ""not-pending"" means ""do not open a PR if any checks are still pending"". ""stabilityDays"": 2 will mean that a branch containing any dependency less than 2 days old will have a pending status check added it by Renovate itself. I'm guessing these two factors are interacting together. If it always says 3 hours for every branch, then that's strange though.
Something else you could do is set internalChecksFilter=strict so that only versions which have passed stabilityDays will be proposed. That way you should never receive a renovate/stability-days pending check.",2022-03-18 12:39:33.000000,1,,Not a Bug
552,https://github.com/renovatebot/renovate/discussions/14724,2022-03-18 11:38:58.000000,"By the way, this was not correct to raise as a bug report and should have been raised as a discussion, so I have converted it now. If you're having trouble knowing which to raise, please just raise only discussions from now on and if something turns out to be a bug, then a bug issue can be raised after that.",2022-03-18 12:41:10.000000,2,1.0,Not a Bug
553,https://github.com/renovatebot/renovate/discussions/9202,2021-03-18 12:35:21.000000,"
I read that renovate is able to scan private repositories.

Renovate can scan private repositories just fine if you're using the GitHub hosted app, see: https://docs.renovatebot.com/install-github-app/
How are you using Renovate bot right now?

I'm moving this to the discussion tab, as it seems more of configuration help problem than a problem with the current docs.",2021-03-18 12:41:49.000000,1,1.0,Non Actionable Topic
554,https://github.com/renovatebot/renovate/discussions/9202,2021-03-18 12:35:21.000000,"You still need hostRules but you can add them to renovate.json instead in JSON format, using encrypted. Here's a similar older question I found: renovatebot/config-help#426
Any PR to improve the documentation on this would be very welcome",2021-03-18 12:58:53.000000,2,,Non Actionable Topic
555,https://github.com/renovatebot/renovate/discussions/9755,2021-04-27 20:02:35.000000,Renovate updated that particular dependency 5 days ago because we apply a stabilityDays=7 setting on this repository. The example you've given isn't valid so I've moved this to a discussion.,2021-04-27 20:07:05.000000,1,1.0,Invalid issues
556,https://github.com/serialport/node-serialport/discussions/2287,2021-06-22 15:54:46.000000,Hi @kennyyork have you tried using the drain method after the write?,2021-06-22 18:23:01.000000,1,,Further discussion
557,https://github.com/serialport/node-serialport/discussions/2287,2021-06-22 15:54:46.000000,"
Hi @kennyyork have you tried using the drain method after the write?

I just tried adding a drain after the initial write and get the same result.

I'm pretty confident my wiring is correct, but if it were not (say I had my TX/RX wires swapped), would I be seeing an error like this?  It seems odd for the underlying fs.write() to not error but also not write any data",2021-06-22 21:13:21.000000,2,,Further discussion
558,https://github.com/serialport/node-serialport/discussions/2287,2021-06-22 15:54:46.000000,It might only do that if it were blocked on the write like the control flow pins was not what the driver wanted or something.,2021-06-22 22:04:40.000000,3,,Further discussion
559,https://github.com/serialport/node-serialport/discussions/2287,2021-06-22 15:54:46.000000,I'm going to convert this to our new discussion system until we confirm some sort of bug.,2021-07-05 11:27:17.000000,4,1.0,Further discussion
560,https://github.com/serverless/serverless/discussions/10005,2021-09-24 13:47:38.000000,"@Matthieu-Tinycoaching this looks as something specific to your setup. Also we don't know how you have functions configured, what are the events there and settings.
As it feels as general support request (not really a bug report - as we do not have reproducible test case provided), I'll move it to discussions",2021-09-24 15:35:31.000000,1,1.0,Invalid issues
561,https://github.com/serverless/serverless/discussions/10005,2021-09-24 13:47:38.000000,"@Matthieu-Tinycoaching this looks as something specific to your setup. Also we don't know how you have functions configured, what are the events there and settings.
As it feels as general support request (not really a bug report - as we do not have reproducible test case provided), I'll move it to discussions",2021-09-24 15:35:31.000000,2,,Invalid issues
562,https://github.com/serverless/serverless/discussions/10012,2021-09-27 08:55:16.000000,"@MincheolC I'm moving it to discussions, as it's most likely some issue in your setup.",2021-09-27 11:35:58.000000,1,1.0,Not a Bug
563,https://github.com/serverless/serverless/discussions/10012,2021-09-27 08:55:16.000000,"@MincheolC I'm moving it to discussions, as it's most likely some issue in your setup.",2021-09-27 11:35:58.000000,2,1.0,Not a Bug
564,https://github.com/serverless/serverless/discussions/10061,2021-10-06 17:26:20.000000,"@dnalborczyk I believe the answer is in this part of an error message:

It appears that relying on provided runtimes is not supported by ARM on AWS side yet
I'm moving it to discussions as it's not a bug in the Framework",2021-10-07 06:51:33.000000,1,1.0,Not a Bug
565,https://github.com/serverless/serverless/discussions/10061,2021-10-06 17:26:20.000000,"Hey @dnalborczyk - I believe it might be the same problem as with Insights extension layer https://twitter.com/StephenBawks/status/1445493821861609476
Looks like not everything is working fine on AWS side when it comes to ARM support",2021-10-07 07:22:01.000000,2,,Not a Bug
566,https://github.com/serverless/serverless/discussions/10061,2021-10-06 17:26:20.000000,"after a bit more digging I found the problem! as the error message mentions Runtime provided does not support the following architectures [arm64], arm64 is only supported with provided.al2 (the Custom Runtime on Amazon Linux 2)
https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html

Runtimes that use the Amazon Linux operating system, such as Go 1.x, do not support the arm64 architecture. To use arm64 architecture, you can run Go with the provided.al2 runtime.

this should probably be mentioned in the docs?",2021-10-13 00:09:07.000000,3,,Not a Bug
567,https://github.com/serverless/serverless/discussions/10085,2021-10-12 11:35:34.000000,"@albasyir you're using some software that modifies the Framework code, and modified version in given form cannot work.
Please solve the issue with your setup.
I'm moving it to discussions, as it's not a problem with a Framwork itself",2021-10-12 11:41:49.000000,1,1.0,Not a Bug
568,https://github.com/serverless/serverless/discussions/10089,2021-10-13 09:38:26.000000,"@alepru ECONNRESET error signal problems with network connection, we're planning to improve reporting of that (see #7733) so the message is more meaningful.
I'm moving to discussions, as it doesn't report the issue with Framework itself",2021-10-13 09:41:10.000000,1,1.0,Not a Bug
569,https://github.com/serverless/serverless/discussions/10136,2021-10-22 14:50:52.000000,"Hello, are you using any cognitoUserPool event triggers for functions in your service? If not, then it seems like an issue with raw CloudFormation from Resources section and if that's the case, let's move this to a discussion as it's most likely not a bug in the Framework but misconfiguration in Resources section.",2021-10-22 14:56:58.000000,1,1.0,Not a bug
570,https://github.com/serverless/serverless/discussions/10136,2021-10-22 14:50:52.000000,"
Hello, are you using any cognitoUserPool event triggers for functions in your service? If not, then it seems like an issue with raw CloudFormation from Resources section and if that's the case, let's move this to a discussion as it's most likely not a bug in the Framework but misconfiguration in Resources section.

This is just raw creation of cognito user pool. No event triggers functions. I was under the impression that once we do an sls remove the Domain should be automatically removed along with it, right?",2021-10-22 15:28:27.000000,2,,Not a bug
571,https://github.com/serverless/serverless/discussions/10136,2021-10-22 14:50:52.000000,"My understanding is that it should be the case, but I'm not fully sure how CloudFormation provisions these resources. I'm moving it to dicussions as it's purely about CloudFormation logic and not a bug in Framework itself.",2021-10-22 15:39:21.000000,3,,Not a bug
572,https://github.com/serverless/serverless/discussions/10249,2021-11-16 13:29:00.000000,"@lastdoctor this doesn't look as issue in Frarmework, but problem with your setup. I'm moving it to discussions",2021-11-16 14:35:49.000000,1,1.0,Not a Bug
573,https://github.com/serverless/serverless/discussions/10358,2021-12-13 20:02:55.000000,"I'm moving it to discussion as it's a Q & A query and not real bug report.
Note, you're using not supported configuration options, and this is indicated to you in warnings.
I suggest to first clear all the warnings you see, and then seek the right solution",2021-12-14 12:20:11.000000,1,1.0,Non Actionable Topic
574,https://github.com/serverless/serverless/discussions/10358,2021-12-13 20:02:55.000000,"Hi medikoo,
This code :
sign_lambda:
handler: lambdas.lambda_write_two_s3.lambda_write_two_s3_sign
timeout: 900
DependsOn:
- CodeSigningConfig
role: CreateAthenaExecutionRole
CodeSigningConfigArn: !Ref CodeSigningConfig
logSubscription: false
environment:
PYTHONPATH: ""lib""
I just add here to say that if you try to sign lambda by adding this :

the setting as no effect and the lambda is not sign",2021-12-21 14:17:14.000000,2,,Non Actionable Topic
575,https://github.com/serverless/serverless/discussions/10358,2021-12-13 20:02:55.000000,"Hi medikoo,
do you know why this attribute
CodeSigningConfigArn: !Ref CodeSigningConfig --> valid arn of Code Signing Config
when putting on the lambda sectaion don't make the lambda sign?
Regards,
yaron",2022-01-09 18:52:18.000000,3,,Non Actionable Topic
576,https://github.com/serverless/serverless/discussions/10407,2021-12-21 22:40:43.000000,Hello @duvansh91 - this is not related directly to Framework Core in any way and is more of a Question than an Issue - I'm moving it to discussions.,2021-12-22 09:58:18.000000,1,1.0,Non Actionable Topic
577,https://github.com/serverless/serverless/discussions/10485,2022-01-10 16:12:18.000000,"@papagei-ma esbuild in stack trace suggests you're relying on serverless-esbuild plugin`. If you feel there's an issue with it, please report it at its repository https://github.com/floydspace/serverless-esbuild
I'm moving this to discussions",2022-01-10 16:52:53.000000,1,1.0,Not a Bug
578,https://github.com/serverless/serverless/discussions/10532,2022-01-17 20:22:44.000000,@pgrzesik moving to new issue,2022-01-17 20:23:09.000000,1,,Not a Bug
579,https://github.com/serverless/serverless/discussions/10532,2022-01-17 20:22:44.000000,I'm going to move this to discussions as it doesn't seem to be a bug report,2022-01-18 11:35:00.000000,2,1.0,Not a Bug
580,https://github.com/serverless/serverless/discussions/10532,2022-01-17 20:22:44.000000,Hey @AdamAH at this point it's really hard to suggest anything. Are you able to provide reproducible example plus detailed output of failing sls deploy command?,2022-01-18 11:36:11.000000,3,,Not a Bug
581,https://github.com/serverless/serverless/discussions/10532,2022-01-17 20:22:44.000000,Thanks for that @pgrzesik  - I checked release notes and looks like there was a change from HTTP API responses moving from 1.0 to 2.0 and params changed there. So I'm addressing those changes. Good to go on my end now!,2022-01-18 19:36:49.000000,4,,Not a Bug
582,https://github.com/serverless/serverless/discussions/10589,2022-01-28 17:05:20.000000,@wocodes thanks for reporting. Error comes out of bref plugin. I believe you should report it over there. It's likely it shares some bug related to v3 support,2022-01-28 17:24:48.000000,1,,Not a bug
583,https://github.com/serverless/serverless/discussions/10589,2022-01-28 17:05:20.000000,"

I can't find a reference link to the bref plugin or where to report it",2022-01-28 20:51:18.000000,2,,Not a bug
584,https://github.com/serverless/serverless/discussions/10589,2022-01-28 17:05:20.000000,"@wocodes try a google search, eventually, you may ask on Stack Overflow. (I'm also not that familiar with bref, afaik it's PHP ecosystem related)
I'm moving this issue to discussions as it doesn't look as an issue in Framework core",2022-01-29 07:54:06.000000,3,1.0,Not a bug
585,https://github.com/serverless/serverless/discussions/10589,2022-01-28 17:05:20.000000,@mnapoli Maybe you would be able to help out here?,2022-01-29 09:43:15.000000,4,,Not a bug
586,https://github.com/serverless/serverless/discussions/10589,2022-01-28 17:05:20.000000,"Thanks for the ping @pgrzesik.
@wocodes You need to update Bref to the latest version so that it works with Serverless Framework v3.",2022-01-31 07:39:12.000000,5,,Not a bug
587,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"Hey @christhomas - I've responded to the same question in this comment - #6593 (comment)
As this is more of a Q&A - I'm going to move this to discussions",2022-03-30 19:44:48.000000,1,1.0,Non Actionable Topic
588,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"I've been looking into this and I think it's a mistake that attaching a lambda to a cognito user pool creates the user pool. If you want to attach a lambda to that pool the user should create the pool, then this is merely just attaching A to B. No need for a custom lambda or any other logic. If you think about it, a user pool is quite a considerably important resource. It should be managed in responsible way, not created as a by-product of attaching a lambda.
Then the issue becomes easy. You take the Id and you just attach it. If it doesn't exist, surely the CF template will fail and the stack will roll back.
I honestly think this is way more complicated that it needs to be and if I specify existing:true, then it should just attach or fail. That is how you test for it's existence. Whether attaching succeeds or fails. Surely I can create a CF template which attaches a lambda to any cognito user pool just by Id and I don't need a lambda to check it's existence first? If it fails, then it's my problem and I have to fix that. Or is that just not possible to do?
Doesn't that make more sense?",2022-03-30 19:55:48.000000,2,,Non Actionable Topic
589,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"hey @christhomas

I've been looking into this and I think it's a mistake that attaching a lambda to a cognito user pool creates the user pool.

It's not mandatory - you can choose to provide an existing User Pool and that's where we unfortunatelly run into this behavior of needing an extra CF resource to handle the attachment.

Surely I can create a CF template which attaches a lambda to any cognito user pool just by Id and I don't need a lambda to check it's existence first? If it fails, then it's my problem and I have to fix that. Or is that just not possible to do?

Yeah, it sounds like something that should be possible out of the box via CF but unfortunately, it isn't - the attachment of handlers for specific triggers is a part of the config for the UserPool itself in CF - https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-lambdaconfig.html
So, when the Pool already exists, we cannot use that config method and we have to resort to workarounds such as custom resources.",2022-03-30 19:58:37.000000,3,,Non Actionable Topic
590,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"So hopefully I get this right. If the user pool exists. You can't create a CF template which creates a lambda, then attaches that lambda to an existing pool. Because there is no resource to do it and therefore you use a custom resource to do it instead?",2022-03-30 20:00:47.000000,4,,Non Actionable Topic
591,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,I'm aware of being able to create triggers on a user pool because of how terraform already does it. But I never thought I wouldn't be able to attach a lambda to a user pool without needing a custom lambda to do it. I imagined I would be able to create a aws function call to do it instead.,2022-03-30 20:03:06.000000,5,,Non Actionable Topic
592,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"I see, what do you think about the feasibility of having a post-deploy event where it reads all the lambda entries, finds a custom element and attaches the lambdas via sdk calls, since serverless already has the SDK and the access credentials. It a plugin could read this lambda config and find the data, it could just add extra sdk calls to patch the user pool accordingly and the calls should be idempotent.",2022-03-30 20:12:30.000000,6,,Non Actionable Topic
593,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"oh, I'm actually finding several plugins which seem to want to do a very similar idea

https://www.serverless.com/plugins/serverless-external-s3-event
https://github.com/silvermine/serverless-plugin-external-sns-events/blob/master/src/index.js
",2022-03-30 20:19:16.000000,7,,Non Actionable Topic
594,https://github.com/serverless/serverless/discussions/10917,2022-03-30 17:25:09.000000,"@pgrzesik thanks for your help and insight into the topic. What I ended up doing was building this plugin:
https://github.com/antimatter-studios/serverless-cognito-trigger
Ta daaaaaaaa!
It's already available through npm, you can install it via npm install @antimatter-studios/serverless-cognito-trigger
and it does exactly what it says on the tin. It runs after the deployment is complete and fills in the missing connections using sdk calls and it's reliable too in that you can run this 1 or 100 times and the result is the same. So no weird side effects from having repeated calls.
I understand what you are trying to achieve with CloudFormation and trying to keep everything in stack. But I think as you mentioned, with api-gateway its just not possible to do certain things without sidestepping CF and doing stuff in sdk calls. This does explain why terraform would continue to use the sdk instead of refactoring onto CloudFormation. Cause if you end up having to do these kinds of things anyway, then why bother.
In the case of this plugin, it's not stateless, but it's idempotent. So that's a good middle ground I think if it means I can avoid having lambdas created just to sidestep limitations of CF.
I find the AWS SDK a bit weird sometimes, it's missing some obvious functionality, other functionality is either missing, half baked, badly documented, or just not exposed and not possible to access through any SDK.",2022-03-31 12:01:29.000000,8,,Non Actionable Topic
595,https://github.com/serverless/serverless/discussions/10947,2022-04-08 08:04:10.000000,Hey @Ansh-Shah-Simform - I'm going to move this to discussions. It seems like your credentials might be invalid - are you able to use these credentials for other operations e.g. with awscli?,2022-04-08 08:07:53.000000,1,1.0,Not a Bug
596,https://github.com/serverless/serverless/discussions/10947,2022-04-08 08:04:10.000000,"
It ask me for payment.",2022-04-08 08:29:24.000000,2,,Not a Bug
597,https://github.com/serverless/serverless/discussions/10958,2022-04-11 05:46:45.000000,Hello @goforu - I believe it's not legal to offer public API endpoints without a licence in China AWS regions - please see the details on this here https://docs.amazonaws.cn/en_us/aws/latest/userguide/aws-ug.pdf in the section about API Gateway (page 14). I'm going to move this to discussions as it doesn't seem to be a bug with the framework,2022-04-11 10:38:42.000000,1,1.0,Not a Bug
598,https://github.com/serverless/serverless/discussions/9493,2021-05-18 00:12:43.000000,"Hello @hgg-dev, the example that you linked has been archived and is no longer working - the Framework now natively supports Websockets so the plugin is not needed. I'm moving this to a discussion as it's definitely not a bug nor feature request related to Framework core.",2021-05-18 07:43:00.000000,1,1.0,Not a Bug
599,https://github.com/serverless/serverless/discussions/9493,2021-05-18 00:12:43.000000,"Hello @hgg-dev, the example that you linked has been archived and is no longer working - the Framework now natively supports Websockets so the plugin is not needed. I'm moving this to a discussion as it's definitely not a bug nor feature request related to Framework core.",2021-05-18 07:43:00.000000,2,,Not a Bug
600,https://github.com/serverless/serverless/discussions/9534,2021-05-31 16:56:57.000000,Hello @diegoug - this tracker is intended for enhancement proposals and bug reports. I believe this is more suited for a discussion - I'm going to transfer it there.,2021-05-31 18:05:07.000000,1,1.0,Non Actionable Topic
601,https://github.com/serverless/serverless/discussions/9543,2021-06-01 08:39:37.000000,"Hello, could you please follow the issue template that is visible when you create a new one? From the above report it's hard to evaluate if this is a bug in the Framework or some misconfiguration. Thanks in advance",2021-06-01 14:38:34.000000,1,,Non Actionable Topic
602,https://github.com/serverless/serverless/discussions/9543,2021-06-01 08:39:37.000000,"@pgrzesik
thank you!
Created a sample repository
https://github.com/goda-kazuki/serverless-framework-sample
It works on AWS Lambda consoles

It does not work in a local environment
",2021-06-02 02:20:16.000000,2,,Non Actionable Topic
603,https://github.com/serverless/serverless/discussions/9543,2021-06-01 08:39:37.000000,"Hello @goda-kazuki 👋 Thanks for additional details. I believe the problem here is with configuration, so I'm going to move this to ""Discussions"" section.
As for the problem itself, it looks like in the example in Lambda console, you're not using any additional dependencies which are imported from node_modules. In the shared example however, you're importing moment with require('moment'), which is not installed/available in node_modules. The general idea is to list your required dependencies in package.json under dependencies. You can also install them with npm install --save <depedency-name>, so they will be automatically added to your package.json.
Could you please try again after ensuring that moment dependency is installed?",2021-06-02 07:04:28.000000,3,1.0,Non Actionable Topic
604,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,@Lucasdsk can you please paste a complete output of e.g. sls package command (ideally with SLS_DEBUG=* on),2021-07-01 18:46:22.000000,1,,Non Actionable Topic
605,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"hey @medikoo , sure:

serverless deploy --verbose output



serverless configure output

",2021-07-01 18:58:41.000000,2,,Non Actionable Topic
606,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,@Lucasdsk you might want to update your serveless.yml with the latest update you have made; I believe you have also tried with                 - /my-path/my-path-env/* and it didn't work either,2021-07-01 19:03:27.000000,3,,Non Actionable Topic
607,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk do you observe same issues when plugins are not used?
Also please upgrade to latest version (v2.50.0)",2021-07-01 19:13:00.000000,4,,Non Actionable Topic
608,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo I've updated to the latest version.
I could remove only the serverless-offline plugin, since I need the serverless-bundle and faced the same issue.


serverless deploy output


Also, what the following message means?
",2021-07-01 19:44:11.000000,5,,Non Actionable Topic
609,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk and when you do sls print do you see env variables resolved?

Also, what the following message means?

You can ignore it. It should not appear when you have variablesResolutionMode set (we'll fix it)",2021-07-01 20:01:55.000000,6,,Non Actionable Topic
610,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo Yep, I see

sls print output

",2021-07-01 20:19:14.000000,7,,Non Actionable Topic
611,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk have you tried using

directly in the code as opposed to process.env",2021-07-01 20:32:02.000000,8,,Non Actionable Topic
612,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"
@Lucasdsk have you tried using

directly in the code as opposed to process.env

yes @6ewis , I can do that. But the expected behavior as per serverless docs is that by declaring the envs in serverless.yml I should have already access to the vars directly on the code through process.env",2021-07-01 20:42:19.000000,9,,Non Actionable Topic
613,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"
@medikoo Yep, I see

It means they're resolved properly. What drives the conclusion they're not provided to lambdas in that form?
Have you inspected the generated CloudFormation template. What values ares configured for env vars there?",2021-07-01 21:01:28.000000,10,,Non Actionable Topic
614,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo the values were set in the template:
I've edited them but they were set correctly.

CloudFormation template output

",2021-07-02 19:10:49.000000,11,,Non Actionable Topic
615,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk in that case it means that everything works fine a in a Framework.
The template you see was deployed to AWS, and if after that in AWS Lambda you do not see configured environment variables it means it's an issue on AWS side (or maybe you do not confirm on lambdas that were actually updated/deployed ?)",2021-07-03 16:16:32.000000,12,,Non Actionable Topic
616,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"
@Lucasdsk in that case it means that everything works fine a in a Framework.
The template you see was deployed to AWS, and if after that in AWS Lambda you do not see configured environment variables it means it's an issue on AWS side (or maybe you do not confirm on lambdas that were actually updated/deployed ?)

They were deployed. I'm suspecting about a possible issue with some permission. I'll create a fresh lambda using a different account/user to check if I face the same issue.",2021-07-05 13:29:15.000000,13,,Non Actionable Topic
617,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"hey @medikoo I've changed the approach to read the SSM envs using the aws-sdk.
I have made some tests and it seems that serverless doesn't identify changes in the code neither in the serverless.yml even I doing that, and I believe that because of that the environment variables doesn't be updated.",2021-07-06 16:45:17.000000,14,,Non Actionable Topic
618,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk Serverless CLI takes serverless.yml as it is at the moment when you invoke serverless ... command
If you invoke servelress .... command and afterwards you make changes to serverless.yml it's very likely that file was already read, and new changes won't be seen",2021-07-06 16:47:49.000000,15,,Non Actionable Topic
619,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"I see, it wasn't the case. I'll record a video testing it and as soon as I have it, I'll post the link here.

@Lucasdsk Serverless CLI takes serverless.yml as it is at the moment when you invoke serverless ... command
If you invoke servelress .... command and afterwards you make changes to serverless.yml it's very likely that file was already read, and new changes won't be seen

I see, it wasn't the case. I'll record a video testing it and as soon as I have it, I'll post the link here.",2021-07-08 01:27:03.000000,16,,Non Actionable Topic
620,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo @Lucasdsk you might need to tell SSM to decrypt for you by adding ~true
",2021-08-03 18:03:59.000000,17,,Non Actionable Topic
621,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"I'm going to move it to discussions, and it doesn't seem to be a bug report",2021-08-09 15:18:34.000000,18,1.0,Non Actionable Topic
622,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,@Lucasdsk can you please paste a complete output of e.g. sls package command (ideally with SLS_DEBUG=* on),2021-07-01 18:46:22.000000,19,,Non Actionable Topic
623,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"hey @medikoo , sure:

serverless deploy --verbose output



serverless configure output

",2021-07-01 18:58:41.000000,20,,Non Actionable Topic
624,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,@Lucasdsk you might want to update your serveless.yml with the latest update you have made; I believe you have also tried with                 - /my-path/my-path-env/* and it didn't work either,2021-07-01 19:03:27.000000,21,,Non Actionable Topic
625,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk do you observe same issues when plugins are not used?
Also please upgrade to latest version (v2.50.0)",2021-07-01 19:13:00.000000,22,,Non Actionable Topic
626,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo I've updated to the latest version.
I could remove only the serverless-offline plugin, since I need the serverless-bundle and faced the same issue.


serverless deploy output


Also, what the following message means?
",2021-07-01 19:44:11.000000,23,,Non Actionable Topic
627,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk and when you do sls print do you see env variables resolved?

Also, what the following message means?

You can ignore it. It should not appear when you have variablesResolutionMode set (we'll fix it)",2021-07-01 20:01:55.000000,24,,Non Actionable Topic
628,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo Yep, I see

sls print output

",2021-07-01 20:19:14.000000,25,,Non Actionable Topic
629,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk have you tried using

directly in the code as opposed to process.env",2021-07-01 20:32:02.000000,26,,Non Actionable Topic
630,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"
@Lucasdsk have you tried using

directly in the code as opposed to process.env

yes @6ewis , I can do that. But the expected behavior as per serverless docs is that by declaring the envs in serverless.yml I should have already access to the vars directly on the code through process.env",2021-07-01 20:42:19.000000,27,,Non Actionable Topic
631,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"
@medikoo Yep, I see

It means they're resolved properly. What drives the conclusion they're not provided to lambdas in that form?
Have you inspected the generated CloudFormation template. What values ares configured for env vars there?",2021-07-01 21:01:28.000000,28,,Non Actionable Topic
632,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo the values were set in the template:
I've edited them but they were set correctly.

CloudFormation template output

",2021-07-02 19:10:49.000000,29,,Non Actionable Topic
633,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk in that case it means that everything works fine a in a Framework.
The template you see was deployed to AWS, and if after that in AWS Lambda you do not see configured environment variables it means it's an issue on AWS side (or maybe you do not confirm on lambdas that were actually updated/deployed ?)",2021-07-03 16:16:32.000000,30,,Non Actionable Topic
634,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"
@Lucasdsk in that case it means that everything works fine a in a Framework.
The template you see was deployed to AWS, and if after that in AWS Lambda you do not see configured environment variables it means it's an issue on AWS side (or maybe you do not confirm on lambdas that were actually updated/deployed ?)

They were deployed. I'm suspecting about a possible issue with some permission. I'll create a fresh lambda using a different account/user to check if I face the same issue.",2021-07-05 13:29:15.000000,31,,Non Actionable Topic
635,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"hey @medikoo I've changed the approach to read the SSM envs using the aws-sdk.
I have made some tests and it seems that serverless doesn't identify changes in the code neither in the serverless.yml even I doing that, and I believe that because of that the environment variables doesn't be updated.",2021-07-06 16:45:17.000000,32,,Non Actionable Topic
636,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@Lucasdsk Serverless CLI takes serverless.yml as it is at the moment when you invoke serverless ... command
If you invoke servelress .... command and afterwards you make changes to serverless.yml it's very likely that file was already read, and new changes won't be seen",2021-07-06 16:47:49.000000,33,,Non Actionable Topic
637,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"I see, it wasn't the case. I'll record a video testing it and as soon as I have it, I'll post the link here.

@Lucasdsk Serverless CLI takes serverless.yml as it is at the moment when you invoke serverless ... command
If you invoke servelress .... command and afterwards you make changes to serverless.yml it's very likely that file was already read, and new changes won't be seen

I see, it wasn't the case. I'll record a video testing it and as soon as I have it, I'll post the link here.",2021-07-08 01:27:03.000000,34,,Non Actionable Topic
638,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"@medikoo @Lucasdsk you might need to tell SSM to decrypt for you by adding ~true
",2021-08-03 18:03:59.000000,35,,Non Actionable Topic
639,https://github.com/serverless/serverless/discussions/9820,2021-07-01 18:42:06.000000,"I'm going to move it to discussions, and it doesn't seem to be a bug report",2021-08-09 15:18:34.000000,36,,Non Actionable Topic
640,https://github.com/sidorares/node-mysql2/discussions/1458,2021-11-23 18:32:17.000000,"can you try replacing undefined with null? There is no undefined mysql type and as a result no mapping from undefined js prameter
With your example - do you get any errors? Can you describe how it ""won't work"" with .execute() ?",2021-11-24 01:47:38.000000,1,,Non Actionable Topic
641,https://github.com/sidorares/node-mysql2/discussions/1458,2021-11-23 18:32:17.000000,"I'll try to practice converting ""likely just a question"" types of issues into a discussions and see how it goes.",2021-11-24 01:48:42.000000,2,1.0,Non Actionable Topic
642,https://github.com/software-mansion/react-native-gesture-handler/discussions/1200,2020-09-25 20:20:01.000000,Moving this issue to Discussions.,2020-12-07 12:50:33.000000,1,1.0,Non Actionable Topic
643,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"onError is a synctatic sugar for a transition for receiving an error event from the invoked service - this error happens in the parent machine though and this it shouldnt be triggered in my opinion, even though this might sound counter intuitive at first.
As this error has not been handled properly in the machine that has causes it (the parent one here) it should probably fail that machine, stop it, etc. Its part of the bogger story for v5 - we need to design error handling properly, so the rules can be written down and known to people. Changing this right now - in v4 - would be a breaking change.",2020-09-26 15:55:54.000000,1,,Further discussion
644,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"I would slightly clarify here. It's not related to only invoking an async function, but effectively anything that turns the machine into an asynchronous service. Notice that by adding entry: 'update-counts' in codesandbox above to the root state node, the test will pass because the error was thrown synchronously.

As this error has not been handled properly in the machine that has causes it (the parent one here) it should probably fail that machine, stop it, etc.

I think that makes sense, but still, you need some async-aware outlet. Anything thrown while service runs asynchronously will be swallowed unless caught on that promise chain directly.",2020-09-26 16:05:21.000000,2,,Further discussion
645,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
Anything thrown while service runs asynchronously will be swallowed unless caught on that promise chain directly.

Or to be precise, it might show up in the console in some cases as unhandledRejection, but AFAIK future NodeJS versions want to drop that outlet.
The problem is if you run a synchronous test that cannot see the internal promise chain and as such, it cannot wait for it and catch error on it.
I think that ultimately the service.send (maybe some others) needs to return a Promise so it can be awaited and used for catching errors.
In the React world, they solved this nicely with act utility that effectively hijacks all async crap and allows them to wait for it with nice API, but that's probably overkill for XState needs.",2020-09-26 16:12:10.000000,3,,Further discussion
646,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Hm, I'm not sure if I understand your concerns @FredyC , could you clarify them more? From what I understand @connectdotz issue is not really about being able to make test assertions on anything, the test is just written to showcase a particular behavior and the issue itself is about that behavior. Quoting the ""expected outcome"" by the OP:

either invoke onError() of the invoke or terminate the interpreter as the sync-operation does.
",2020-09-26 16:26:38.000000,4,,Further discussion
647,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Well, the OP is a valid use case, but I am pondering on a wider concern here.
You see, as long as the machine is synchronous (simple transitions between different states), the service itself stays synchronous, and any error thrown within action propagates synchronously. That means it can effectively stop the machine and die.

But at the moment you introduce asynchronicity, the actions that happen to throw can only pass that error to the Promise chain. It can no longer throw it synchronously.

These are call stacks and you can clearly see the difference where Promise turns the whole thing into an asynchronous process.

My general concern here is not about handling these errors but to be able to identify them without them getting lost. It's painful to not know why action failed and you don't know why. Technically it might be enough if the error is just output with console.error.",2020-09-26 17:12:48.000000,5,,Further discussion
648,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,Could u prepare a repro case of what you are experiencing? I think I might still be missing something. Rejected promises should trigger onError handlers correctly so those wouldnt be lost.,2020-09-26 17:19:29.000000,6,,Further discussion
649,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"The codesandbox in OP is already showing this problem. That's where I got that latter stack trace. Ignore onError concern for now, because that's not supposed to catch errors within actions anyway, correct? If you switch to the test tab in CS, the test fails, because it was unable to catch the error, synchronously.",2020-09-26 17:32:54.000000,7,,Further discussion
650,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
If you switch to the test tab in CS, the test fails, because it was unable to catch the error, synchronously.

I see what might be the confusion... The try/catch will never catch the async errors, unless like you said if the send() method returns a promise, which I think makes sense too, or maybe a separate API like sendAsync().

Ignore onError concern for now, because that's not supposed to catch errors within actions anyway, correct?

I guess it depends, if I translate the invoke into the following structure, the onError, i.e. catch should catch the error from both the promise and the onDone...

But of course, if onDone only created the faulty action instead of executing it right there, the onError will not be able to catch the error... In that situation, and maybe many other async use cases, I wonder perhaps the simplest solution is to just listen to the unhandledRejection (the warning behavior is going to be deprecated but not the event itself) or uncaughtException event, like you mentioned, at least to output with console.error. Maybe we can also consider adding a system-termination state or an onError on the StateNode for the uncaught error, much like the onDone to report reaching the final state... just some thoughts",2020-09-26 19:19:49.000000,8,,Further discussion
651,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
I see what might be the confusion... The try/catch will never catch the async errors, unless like you said if the send() method returns a promise, which I think makes sense too, or maybe a separate API like sendAsync().

This doesn't make a conceptual sense though. send can't return a promise because it doesn't await for anything - there is no moment in which we could consider it to be resolved. Basically think of send always as an async operation - it's only synchronous because we don't force it to be async, but conceptually it totally is. The mere meaning of it is ""schedule an event on this target"", but that target can be anywhere - it doesn't even have to live on your machine.

Maybe we can also consider adding a system-termination state or an onError on the StateNode for the uncaught error, much like the onDone to report reaching the final state... just some thoughts

Some sort of such behavior would be most desired I believe.


If you switch to the test tab in CS, the test fails, because it was unable to catch the error, synchronously.

So actually... no error should be even possible to be caught synchronously by a catch block wrapping the service.send. As mentioned here - send is always considered to be async. If we consider SCXML spec - all runtime errors should be converted to error.execution events and should be just raised on the machine. I don't quite believe that it's perfect though because it means that if you don't handle this special event then errors are effectively just swallowed. That's I believe that the error handling should be reconsidered by us and we should stop the machine and propagate error to the consumer through other channels (first try to propagate to a parent etc, so it could handle a failure in its onError handler). This is just tentative thought on my side though (the last part). The whole topic needs deep analysis.",2020-09-26 19:29:55.000000,9,,Further discussion
652,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
I don't quite believe that it's perfect though because it means that if you don't handle this special event then errors are effectively just swallowed. That's I believe that the error handling should be reconsidered by us and we should stop the machine and propagate error to the consumer through other channels

I am glad we are finally on the same page 😅
For V4 it might make sense a quick patch where error caught in actions is at least logged with console.error so we are not  driving in blind in case a mistake happens. In DEV mode only should be good enough.",2020-09-26 19:56:10.000000,10,,Further discussion
653,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
For V4 it might make sense a quick patch where error caught in actions is at least logged with console.error so we are not driving in blind in case a mistake happens. In DEV mode only should be good enough.

But arent those logged automatically? Those are just uncaught errors right now so should be logged by the browser. I've adjusted the @connectdotz  codesandbox' to switch to the sync mode and that error is being logged:
https://codesandbox.io/s/silent-failure-example2-forked-hcnlp?file=/src/index.ts:402-423",2020-09-26 21:51:32.000000,11,,Further discussion
654,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Yes, but async actions are a problem since the beginning of this issue and those are not logged anywhere, just silently swallowed. That's why am I suggesting adding console.error for V4.
Oh wait, you have to open devtools console in CS to see that. I guess it would be seen in the normal browser as well. But it's wildly inconsistent. Sync error is in CS console, async in devtools only. It's easy to miss that.",2020-09-26 22:09:07.000000,12,,Further discussion
655,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"That has to be some CS quirk though, the error is logged correctly to the browser's console in both cases and if we'd add an additional console.error then you'd end up with duplicates.",2020-09-26 22:50:56.000000,13,,Further discussion
656,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,@connectdotz I wonder what was your initial motivation for this? I mean you said it's not about being able to catch that error in the test but to know about an unexpected error that happened in the action. Didn't you get that error spilled in the console?,2020-09-27 05:58:20.000000,14,,Further discussion
657,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"It's a good question why the browser shows exception but the Test doesn't? One can find some clue from the bottom of the error panel in the browser tab:

I took a quick look at react-error-overlay, and the magic seems to be where we suspected: it registered to window's uncaught error, such as the unhandledRejection (here).
Jest did not do that so we won't know there is an uncaught exception for async operations during testing.
Sure we can defer the responsibility to the other runtime containers or ask our users to deal with it themselves (with enough console.log, one can find the problem eventually)... But I think if xstate can detect and help users to quickly realize and pinpoint the problem, without relying on the underlying engine, it will save everybody a lot of time thus make xstate a much better framework...
regarding double reporting, if these errors are reported to the optional onError, which can override the default console.error, then users can easily change how they are reported if it became a problem.",2020-09-27 15:00:37.000000,15,,Further discussion
658,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@connectdotz Wait, so you are developing your code in CodeSandbox? That sounds unlikely, so why do you refer to it? In normal development workflow you should always see that error somewhere, right?
Although there might be a problem with Jest watch mode as it's too aggressive about output and might hide some stuff. But that's out of scope for XState unfortunately.",2020-09-27 15:13:59.000000,16,,Further discussion
659,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"I was trying out xstate, so developing the machine part first, and try to unit testing it before adding more. I am not able to run the actual app yet and my unit tests keep failing by timeout without any error reported. Went to gitter and @davidkpiano suggested creating a codesandbox repo...
I think this is a pretty common pattern, particularly in test-driven development, we write a component/function/class, unit testing it before running the whole app. The app is actually going to be react-native app with web support...",2020-09-27 15:42:56.000000,17,,Further discussion
660,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
Although there might be a problem with Jest watch mode as it's too aggressive about output and might hide some stuff. But that's out of scope for XState unfortunately.

If I may offer another way to look at this: If the error occurred during xstate executing the user actions, why wouldn't xstate catch the error and report it in some way? Ideally, these errors should not be ""uncaught"" or worst, ""swallowed"", sync or async...",2020-09-27 15:49:13.000000,18,,Further discussion
661,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,I cannot get the tests to run in the original CodeSandbox. Am I missing something?,2020-09-27 20:43:53.000000,19,,Further discussion
662,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@davidkpiano I think there is a bug in codesandbox, when the index.ts crashed in the sync mode (send('SYNC')), the test tab hung... I just switched the index.ts back to ASYNC, you should be able to run the tests now...",2020-09-27 20:51:57.000000,20,,Further discussion
663,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Future note: this will be handled with a service.onError(cb) method in version 5; here is the relevant test:

I'm going to make a PR for adding this to v4; I believe it should be doable without introducing breaking changes.",2020-09-27 21:15:15.000000,21,,Further discussion
664,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@davidkpiano I would just point out that as much as service.onError sounds useful, in cases where you are just stumbling in the dark and not sure why is machine failing, it will be hard to remember there is some error callback.
I think that @connectdotz has got a point with this. Would it be too bad to ""handle"" action errors for developer's sake? At least in development mode for easier debugging.

If I may offer another way to look at this: If the error occurred during xstate executing the user actions, why wouldn't xstate catch the error and report it in some way? Ideally, these errors should not be ""uncaught"" or worst, ""swallowed"", sync or async...
",2020-09-27 21:30:24.000000,22,,Further discussion
665,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"You mean instead of throwing it (which is the current behavior)? What would you expect instead?

But I think if xstate can detect and help users to quickly realize and pinpoint the problem, without relying on the underlying engine, it will save everybody a lot of time thus make xstate a much better framework...

This is a good goal, but pretty ambiguous. What exactly should be expected from XState here? You should still assume that an error can be thrown ""asyncronously"" so the best way to catch it would still be in some sort of callback (i.e., service.onError(cb)). We can probably add some meta data though...
Please provide a concrete example (pseudocode is fine) that shows what your ideal API for this looks like.",2020-09-27 21:46:06.000000,23,,Further discussion
666,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
You mean instead of throwing it (which is the current behavior)? What would you expect instead?

Quite simple actually. It could just log errors by default and at the moment user calls service.onError for the first time, it would disable logging and let them handle it with that callback. My point is to improve DX by having a default behavior that doesn't rely on the environment showing uncaught rejection somewhere.",2020-09-28 06:00:36.000000,24,,Further discussion
667,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,But it is an uncaught error if it is not explicitly handled. Logging would be the equivalent of swallowing errors in this case; not sure if that's desired behavior.,2020-09-28 12:34:03.000000,25,,Further discussion
668,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
But it is an uncaught error if it is not explicitly handled. Logging would be the equivalent of swallowing errors in this case; not sure if that's desired behavior.

Normally, I would agree, but the asynchronicity makes a mess here. You can't really explicitly handle that unless you wrap every action in try/catch - unlikely anyone would bother imo.",2020-09-28 14:26:20.000000,26,,Further discussion
669,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@FredyC I'd still like to see what a more ideal API for this would be. Seems like .onError(...) covers this, and we can additionally add meta data about which machine/state the action execution failed for in the uncaught error.
Silently logging the error would be a bad idea IMO.",2020-09-28 14:39:07.000000,27,,Further discussion
670,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Let's try to converge... I think it boiled down to the following questions:


should xstate capture the error when executing users' code?

I think we have converged on this point and agree that we should.
bonus: Unlike the generic ""uncaught error"" handling react/node provided, xstate can provide a much better context for what and where the error is: such as assing context.data failed: ...



what to do with these errors? (i.e. @davidkpiano question: ""What exactly should be expected from XState here?"")

should xstate at least report (console.error) it? I think we probably also agree on this point. At least a default behavior if nothing else.
can xstate do better beyond print and rethrow? I think so...

Since this is the uncaught/unexpected error, shouldn't it render the machine's/interpreter's own state indeterministic? As a state machine engine, one would think xstate component should transition itself to something like an 'internal-error' state that is final and maybe with an entry point to print out the error...? No need to rethrow, as the error is being ""handled"" by advancing the machine state accordingly.
bonus1: maybe allow users to override this state in their machine definitions if they want to do something else.
bonus2: this can also unify both sync and async handling of this kind of errors (to fix the confusion that sync/async behave differently now)





(I didn't know xstate internal enough to be confident that the suggestions above actually make sense, just throw it out there hopefully help us reaching an action plan... )",2020-09-28 15:13:17.000000,28,,Further discussion
671,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
Silently logging the error would be a bad idea IMO.

Never heard the term ""silent logging"" :) I suppose you mean that it doesn't stop anything and code around is moving forward. However, errors in actions are already behaving like that since you cannot catch them. In some environments (why this issue exists) it's even more painful to rely on ""unhandledRejection"" to appear somewhere.

I'd still like to see what a more ideal API for this would be. Seems like .onError(...) covers this

I have no problem with that, that will certainly help in many cases. My concern is that you need to explicitly set it up for every machine. Not many people will realize they need to do that. Unless of course, you plan to add an implicit handler to useMachine React binding which could be technically set up to convert async error to sync one.",2020-09-28 15:14:43.000000,29,,Further discussion
672,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
...which could be technically set up to convert async error to sync one.

This is what I'm confused about. You cannot treat async errors as sync (i.e., via try/catch), unless you explicitly have a callback that handles them.
So let's resolve on adding an .onError(...) handler. We can probably discuss further DX after that, but I don't think that XState should be responsible for doing anything magical for async errors, besides stopping the running service, of course.
Unless you can demonstrate what converting an async error to a sync one would look like?

should xstate at least report (console.error) it? I think we probably also agree on this point. At least a default behavior if nothing else.

Sure, this can be done.

Since this is the uncaught/unexpected error, shouldn't it render the machine's/interpreter's own state indeterministic? As a state machine engine, one would think xstate component should transition itself to something like an 'internal-error' state that is final and maybe with an entry point to print out the error...? No need to rethrow, as the error is being ""handled"" by advancing the machine state accordingly.

We shouldn't define custom states for this. The interpreter should stop. But the error should still be ""visible"" - we shouldn't silence the error.
The relevant part of the SCXML spec is here: https://www.w3.org/TR/scxml/#ErrorEvents

Note however that authors can arrange for otherwise unhandled errors to cause the interpreter to exit by creating a transition with ""event"" attribute of 'error' and a target of any top-level final state (i.e. one that is a child of ). If such a transition T is placed in a state S, it will cause the state machine to terminate on any error that is raised in S or one of its substates and is not handled by another transition that is placed in a substate of S or in S and preceding T in document order.


So here is my proposal:

Add service.onError(errorHandler) for capturing unhandled errors.
Allow onError: ... properties on any state node to capture errors.
If none of the above are present, unhandled errors should be thrown (as is currently done), but with extra information about the machine/state/action/etc. where the error occurred.
",2020-09-28 15:35:42.000000,30,,Further discussion
673,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@davidkpiano a few questions:


In your proposal, what would happen if neither 1 nor 2 occurred? for sync operations, the rethrow will terminate the interpreter like it is now; but what will happen for the async operation? the rethrow will not terminate the interpreter, right? Will users see some logging or it will just fail ""silently"" (from a user's perspective) like it is now?


Seems like you prefer introducing a new callback API than a new state? If I read the SCXML spec (thanks for the link, it is quite helpful) correctly, it seems to recommend that the uncaught error could trigger a state transition to a ""top-level final state"", which caused the interpreter to ""exit"" (as it reached the final state).  It did not mention a callback approach... Do you feel we need to use callback because of the async operations? Will the state approach not working for async operations?

",2020-09-28 16:18:02.000000,31,,Further discussion
674,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
but what will happen for the async operation? the rethrow will not terminate the interpreter, right?

An async error is an event like any other. If it is not handled (i.e., in onError: ...) then nothing happens.

Will users see some logging or it will just fail ""silently"" (from a user's perspective) like it is now?

Yeah, that's reasonable. We should add logging.

Do you feel we need to use callback because of the async operations?

The .onError(cb) would basically be for convenience - capturing any error that occurs and avoiding uncaught async errors (which was part of the original concern). But it can certainly be an alternative to adding a specific error state:

You're right; as is described in SCXML, adding an explicit ""error handler"" transition should be preferred.",2020-09-28 16:24:16.000000,32,,Further discussion
675,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"It would certainly be nice if we could explicitly transition to an error state no matter where the error happened in the machine. I suppose the onError as callback would allow using send too, but that's less convenient.
Also ... what happens if error handler has error? :) Should be covered somehow so we don't end up in the loop.",2020-09-28 16:35:28.000000,33,,Further discussion
676,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
It would certainly be nice if we could explicitly transition to an error state no matter where the error happened in the machine.

Yes, that would work with the top-level onError transition.

Also ... what happens if error handler has error? :) Should be covered somehow so we don't end up in the loop.

Sigh, one thing at a time 😅 I'll consider that too.",2020-09-28 16:37:24.000000,34,,Further discussion
677,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"And what about currently available onError for invocations? Will this top-level handler ""win"", or both will run?
I would say that if a specific handler is declared, it should be only one to run. Otherwise, it would fallback to top-level one.",2020-09-28 16:38:15.000000,35,,Further discussion
678,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"The transition resolution follows the exact same semantics as SCXML. It goes from leaf-node to root-node; most-specific to least-specific.
If an error event is handled in a state, it will only be handled by that transition.
Otherwise, it propagates to the nearest ancestor that handles the error.",2020-09-28 16:46:26.000000,36,,Further discussion
679,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@davidkpiano I think the idea of making onError available to handle the user-state (expected) error is good, but see a few potential problems to use it for uncaught-error:

if users did not add onError in their machines, does the uncaught error, again, failed silently?
if xstate then implement a ""default"" onError transition as the answer to the above question,  what is the target state it is supposed to transition to? Some kind of system-defined final state? The onError doesn't really spare the system to create a new state then.
for users to see the uncaught error, they will have to add onError and a final state, most likely different from their normal final state... So the onError doesn't really spare users to create a new state.
what if users define an onError that did not transition to a final state (common if they use onError to capture the expected error like in the invoke-error-retry patten)? Now they have to check what kind of error it is and forced to handle the uncaught error in every onError? Or worse, it fails to distinguish the errors and transitioned to the wrong state...

Therefore, while I don't object onError as a general error handling mechanism for user-states, I do wondering if to tunnel all uncaught error via this transition is the best, simplest, or the least intrusive solution?",2020-09-28 18:15:57.000000,37,,Further discussion
680,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"@connectdotz I think it's generally correct to have at least one error state in each machine (except simple ones) used whenever something goes wrong. You can even have ""retry"" logic implemented with that.
Also if I understand correctly from the above snippet, it won't be mandatory to specify target. You could just define the action that can be used for logging or even sending it to a reporting service of yours.",2020-09-28 18:44:05.000000,38,,Further discussion
681,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Right; let's not complicate this. The scope is getting too large, so for v4, let's limit it to this:

An onError transition can be added to any state node. If you want to capture any error, add it to the root node:



If you don't add onError, the same behavior as today will happen. We can discuss if this behavior should change in a separate issue after the above is released, but I want to keep the scope down for this one, as there already is too much churn/discussion.

Again, XState is about being explicit, so if you don't explicitly add a transition to capture error events, then the normal (arguably undesirable) behavior should happen.",2020-09-28 18:52:00.000000,39,,Further discussion
682,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
Also if I understand correctly from the above snippet, it won't be mandatory to specify target.

Without the target the machine will not transition to a final state (exit) and thus remain in the wrong state, isn't it? Isn't this directly violate SCXML recommendation that it should lead to exit/final state (to maintain the state machine integrity)?

Right; let's not complicate this. The scope is getting too large...

indeed, introducing onError for every StateNode is not trivial, as there are many implications...

Again, XState is about being explicit,

It seems this is the main reason that @davidkpiano feels strongly against a new system-state approach...  I can see your point but let me make one last argument 😅 ... it might be actually desirable to make an exception for the uncaught-error state, which is mostly a development-stage scenario, so the machine definition won't need to be polluted...
ok, that's all I am going to say about this issue 🤐 . Whatever you guys decided to do that is better than what we have today is great. I appreciate your patient to discuss and continue to improve this product. 🙏",2020-09-28 19:56:46.000000,40,,Further discussion
683,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"
Without the target the machine will not transition to a final state (exit) and thus remain in the wrong state, isn't it? Isn't this directly violate SCXML recommendation that it should lead to exit/final state (to maintain the state machine integrity)?

It's a recommendation; it's up to the developer to specify a final state target if they feel it's appropriate.

It seems this is the main reason that @davidkpiano feels strongly against a new system-state approach... I can see your point but let me make one last argument 😅 ... it might be actually desirable to make an exception for the uncaught-error state, which is mostly a development-stage scenario, so the machine definition won't need to be polluted...

No exceptions. In the case that an error is not caught by any onError, the error will be thrown and the service will simply stop. In a way, you can consider that the ""uncaught-error state"".

ok, that's all I am going to say about this issue 🤐 . Whatever you guys decided to do that is better than what we have today is great. I appreciate your patient to discuss and continue to improve this product. 🙏

Thanks! I'll make a PR and we can bikeshed later, especially for v5.",2020-09-28 20:06:03.000000,41,,Further discussion
684,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"I must say that I still don't quite understand the whole discussion about adding logging for uncaught errors. From what I've checked this is exactly how it behaves right now - because it's the default behavior of most environments. I'm not aware of any modern environment that swallows UnhandledPromiseRejectionWarning entirely. And a lot of discussions here have revolved around this while I believe this just shouldn't be an issue. Improved logging with more context - sure, that could be done and discussed separately. But as to the sole fact if errors are ""swallowed"" or not currently - to the best of my knowledge: no, they are not. They should always be surfaced to the developer in the console.


It's a recommendation; it's up to the developer to specify a final state target if they feel it's appropriate.

Right, it's a recommendation in the SCXML but - as @connectdotz has noticed - this might not be enough for our default. I feel that recommendation favors unsafe behavior over safer ones. If any error is left without being handled by a specific user handler then the model is broken - repercussions are unknown and they might be severe for the application, user flow, or whatever. It's by far too easy to forget adding a proper error handling and thus leave your machines in the inconsistent states if we don't stop such broken machines from executing anything further.
But also you have expressed similar desire here:

We shouldn't define custom states for this. The interpreter should stop. But the error should still be ""visible"" - we shouldn't silence the error.

The whole conversation became lengthy and quite hard to track for me so I'm not even sure what are exact, final, opinions of all people involved here 😅",2020-10-01 12:30:32.000000,42,1.0,Further discussion
685,https://github.com/statelyai/xstate/discussions/1485,2020-09-26 15:35:59.000000,"Yeah, let's move this to discussions instead - there is nothing that is clearly actionable here. (EDIT: moved!)",2020-10-01 14:37:21.000000,43,,Further discussion
686,https://github.com/tailwindlabs/tailwindcss/discussions/1682,2020-05-02 01:21:15.000000,"Hey great question! We actually archived the discuss repo because we now have access to the new Discussions feature on GitHub, so moving this there!",2020-05-02 01:29:51.000000,1,1.0,Non Actionable Topic
687,https://github.com/tailwindlabs/tailwindcss/discussions/1682,2020-05-02 01:21:15.000000,"
(And also Laravel Mix and Ember.js, but I guess they're not relevant if you don't use either framework.)

Laravel Mix i have seen many people think it can be only used with laravel but that's not true. It's framework agnostic and can be used outside laravel and works well.
tailwindcss + laravel-mix gives a quick heard start and you can actually focus on building things.
Have been using this setup for

Simple HTML pages
Laravel App
React App
WordPress themes & plugins

And it fits perfectly into the workflow.",2020-05-02 05:52:36.000000,2,,Non Actionable Topic
688,https://github.com/tailwindlabs/tailwindcss/discussions/2107,2020-08-02 09:28:08.000000,"Hey - thanks for the suggestion!
Could definitely be useful, but also sometimes a bit too ""harsh"" when the intent is a more subtle divider? You can always apply a current border-color class to the <hr/> if you want for the situations where the default border color lacks contrast:
<hr class=""border-current"" />
Thoughts?",2020-08-21 06:33:03.000000,1,,Non Actionable Topic
689,https://github.com/tailwindlabs/tailwindcss/discussions/2107,2020-08-02 09:28:08.000000,"Yeah sure, that's possible!

a bit too ""harsh"" when the intent is a more subtle divider

This could be resolved by adding an opacity. This way the <hr> color will still adjust to the text color: https://codepen.io/MartijnCuppens/pen/QWNGMpL?editors=1100
<hr>s arealso often added by wysiwyg editors, making it a little harder to add classes.
Thoughts?",2020-08-21 08:40:59.000000,2,,Non Actionable Topic
690,https://github.com/tailwindlabs/tailwindcss/discussions/2107,2020-08-02 09:28:08.000000,"Moving this to discussions 👍
Your argument of the hr coming from a WYSIWYG is a good one!
The typography plugin helps with styling ""CMS content"" like that. I can also imagine scenarios where you'd want the hr color to be different from the text color.
It probably really Just Depends ™ from project to project",2020-08-25 09:38:13.000000,3,1.0,Non Actionable Topic
691,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,Did you try this https://tailwindcss.com/docs/using-with-preprocessors#sass ?,2020-09-11 09:09:54.000000,1,,Not a Bug
692,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,"@srcn I've just tried, didn't really help, another error
Error: Unexpected '!'. Escaping special characters with \ may help.
Escaping an exclamation mark is also not profitable",2020-09-11 10:09:25.000000,2,,Not a Bug
693,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,Happy to help if you can create a GitHub repo that reproduces the issue so we can easily troubleshoot.,2020-09-11 12:09:45.000000,3,,Not a Bug
694,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,"I had a similar problem with applying important, ended up having to also wrap it in quotes in order for sass to properly parse it, e.g. @apply foo, bar #{'!important'}; (as opposed to the preprocessor docs tailwind provide, which suggest that #{!important} is enough)",2020-09-14 15:17:33.000000,4,,Not a Bug
695,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,"@tomhughes-invento something like that? I have no idea why it also doesn't work for me. I guess I'll make a reproduction in a couple days.
",2020-09-15 04:36:37.000000,5,,Not a Bug
696,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,Have you customized the way Angular is processing sass? It seems like there's a missing sass preprocessor step there that would convert the templating syntax down to regular text before postcss attempts to format,2020-09-15 12:37:34.000000,6,,Not a Bug
697,https://github.com/tailwindlabs/tailwindcss/discussions/2366,2020-09-11 08:41:28.000000,Going to move this to discussions as it seems this is a configuration issue with Sass + Tailwind rather than a bug in the library.,2020-09-16 00:46:16.000000,7,1.0,Not a Bug
698,https://github.com/tailwindlabs/tailwindcss/discussions/2995,2020-11-27 10:37:50.000000,"Hey,
That's a great suggestion!
Going to move this suggestion to GitHub discussions, as I am doing a little ""end of the year issue cleanup"" and trying to keep only real issues (bugs, incorrect documentation etc) in the issues here.",2020-12-04 05:58:33.000000,1,1.0,Non Actionable Topic
699,https://github.com/tailwindlabs/tailwindcss/discussions/2995,2020-11-27 10:37:50.000000,"Nice collection keep up the good work.
FaceTime PC",2021-03-16 05:23:00.000000,2,,Non Actionable Topic
700,https://github.com/tailwindlabs/tailwindcss/discussions/3078,2020-12-13 16:14:15.000000,"You also need to inverse the spacing in this case:
Try adding space-x-reverse",2020-12-13 18:22:50.000000,1,,Information storage
701,https://github.com/tailwindlabs/tailwindcss/discussions/3078,2020-12-13 16:14:15.000000,"That's it - @Krutsch's answer is correct.
I will convert this to a GitHub discussion as some folks might find this one useful 👍",2020-12-14 05:29:39.000000,2,1.0,Information storage
702,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"Same here. Building also work if the glob array is empty. To be more precise, the problem is causing the css files to be passed through, keeping all the @tailwind directives intact. No error messages is present.",2020-12-14 10:59:55.000000,1,,Not a bug
703,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"Interestingly, using raw content work as expected:
",2020-12-14 11:06:12.000000,2,,Not a bug
704,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"Hey! Thank you for your bug report!
Much appreciated! 🙏
Can you provide more information on this case?

Can you create a minimal reproduction repository that showcases the issue?
Can you show the actual error that you get, apart from the ""it fails to build""?
Can you verify that files in those ./src files exists?
Can you share your Node version (or check that you are on node 12.13 or higher)?

I tried reproducing it with the information you mentioned, but I don't have any issues.",2020-12-14 12:01:14.000000,3,,Not a bug
705,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"
Can you provide more information on this case?

Sure, but as my skills allow.


Can you create a minimal reproduction repository that showcases the issue?


Unfortunately, it's still beyond my skills.

Can you show the actual error that you get, apart from the ""it fails to build""?


Note that the size of the file is very small to be the correct one!


Can you verify that files in those ./src files exists?


Yes, I do verify that they do exist.


Can you share your Node version (or check that you are on node 12.13 or higher)?


It's 15.4.0.

I tried reproducing it with the information you mentioned, but I don't have any issues.

Run to play lottery, it's your super lucky day!
It seems that for me and @LeLocTai, it's an unlucky day! The stars and planets are not aligned in a correct manner! -:)",2020-12-14 14:52:35.000000,4,,Not a bug
706,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"Yeah, I can't reproduce it, I need more information... A repository that showcases the error would be best. While I wait for that.

Can you share what the tailwind.css looks like?
Can you share an example file inside ./src that contains a tailwind class that is missing?
",2020-12-14 15:32:41.000000,5,,Not a bug
707,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"tailwind.css

tailwind.lit.css

Note: Comments have been removed.
I hope @LeLocTai to provide a reproduction repository.",2020-12-14 17:33:45.000000,6,,Not a bug
708,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"@GHNewbiee could you also share an .html file that is using any of the tailwind classes?
Btw, there's also a shorthand version for the prune dir extensions, like
'./src/**/*.{js,ts,jsx,tsx}'
Is direct postcss giving the same result?
npx postcss ./tailwind.css -o tailwind.exp.css --verbose
What's the npx postcss --version?",2020-12-14 17:39:17.000000,7,,Not a bug
709,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"@ahtik I use tailwind classes in components (LitElement) (js) files after JS-ifying the produced css file. For the time being, there is not an html file. Thanks for the shorthand version.
Both last two npx commands give npm ERR! could not determine executable to run. I follow the instructions given in

Using Tailwind without PostCSS, and
Optimizing for Production
",2020-12-14 18:17:21.000000,8,,Not a bug
710,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,Note: In node_modules I see that both postcss and purgecss exist.,2020-12-14 18:44:30.000000,9,,Not a bug
711,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"package.json
",2020-12-14 19:05:54.000000,10,,Not a bug
712,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,"Ok so for me the problem was with gulp/postcss. I was building the compilation stream based on some criterias:

This has worked with many plugins for years. For postcss however, it only worked if written like this:

I'm not sure if I been doing things wrong all this time and just got lucky, or postcss/gulp-postcss incorrectly modify the gulp stream somehow. Anyway, my problem is not specific to tailwind and likely not what OP is facing.",2020-12-15 09:58:39.000000,11,,Not a bug
713,https://github.com/tailwindlabs/tailwindcss/discussions/3080,2020-12-13 21:50:45.000000,This is definitely a configuration issue rather than a bug so moving this to discussions.,2020-12-15 11:06:03.000000,12,1.0,Not a bug
714,https://github.com/tailwindlabs/tailwindcss/discussions/4093,2021-04-13 05:45:40.000000,"Hey!
JIT is currently still an ""opt-in"" mode, and not the default. We can't remove that sort of information that is still relevant for the default way Tailwind works, and managing two parallel sets of documentation would be a lot of work.
We could have a toggle for ""jit mode vs default mode"" for these, but realistically we'll probably update the documentation when jit becomes the default mode for Tailwind.
Moving this to our community discussions 👍",2021-04-16 08:06:08.000000,1,1.0,Non Actionable Topic
715,https://github.com/tailwindlabs/tailwindcss/discussions/4778,2021-06-23 11:23:21.000000,"
I have a use case in which I need to persist previous build CSS for backward compatibility

If you don't mind me asking, what is that use case?",2021-06-23 16:17:38.000000,1,,Unrelated Repository
716,https://github.com/tailwindlabs/tailwindcss/discussions/4778,2021-06-23 11:23:21.000000,"

I have a use case in which I need to persist previous build CSS for backward compatibility

If you don't mind me asking, what is that use case?

Well there are HTML pages that are already In the system (database) with the old classes and all of them share the same CSS file,  for that reason I need to persist already used classes for the backward compatibility.",2021-06-23 16:45:03.000000,2,,Unrelated Repository
717,https://github.com/tailwindlabs/tailwindcss/discussions/4778,2021-06-23 11:23:21.000000,How did you generate the old CSS build file?,2021-06-23 16:53:30.000000,3,,Unrelated Repository
718,https://github.com/tailwindlabs/tailwindcss/discussions/4778,2021-06-23 11:23:21.000000,"Hey! This isn't really a bug, it's working correctly because PurgeCSS expects to be looking at HTML, not at CSS, so it thinks the classes with escaped characters just contain slashes, like if they were in HTML like this:

I would recommend just keeping the old CSS file and not running PurgeCSS against that one at all, or using their control comments to preserve parts of your CSS:
https://purgecss.com/safelisting.html#in-the-css-directly
Going to convert this to a discussion for you since it's not a bug in Tailwind or anything 👍",2021-06-23 17:59:24.000000,4,1.0,Unrelated Repository
719,https://github.com/tailwindlabs/tailwindcss/discussions/4778,2021-06-23 11:23:21.000000,"I'm also looking for a solution to this.

As a bit of context:


I'm using Tailwind to develop a design system in a repository (A). This repository contains the configuration (plugins, theme…), and outputs Vue components and the generated CSS file that only includes classes used by those components.


Then, I'm consuming that design system from another repository (B). Because I want to keep them in sync and share the same theme, I'm importing Tailwind configuration from A into B, and generate a new CSS file. However, I only want to load a single CSS file that would include classes from A and B, so I'm looking for a way to take into account classes generated from A.



For now, I've tried:


Including the generated CSS file from A to the purge.content array. (1)



Transforming the CSS file before looking for classes. (2)



Registering the CSS file under purge.options.css. (3)



None of these solutions worked unfortunately.

1 and 2 do take into account non-escaped classes, but fail when processing escaped classes such as .w-\[90px\].
3 does not include any classes from the design system at all.

I'm starting to run out of ideas here. Any help is welcome. 🙏",2021-07-26 16:07:53.000000,5,,Unrelated Repository
720,https://github.com/tailwindlabs/tailwindcss/discussions/5474,2021-09-04 15:22:36.000000,"Hey! Going to convert this to a discussion as it's a more general CSS question and not a bug in our build tool or anything (you'll see the same issue writing raw CSS in iOS Safari).
This might help: https://discourse.webflow.com/t/multi-line-gradient-text-safari-ios-fix-i-e-prevent-disappearing-text/135029",2021-09-10 18:51:44.000000,1,1.0,Not a Bug
721,https://github.com/tailwindlabs/tailwindcss/discussions/5480,2021-09-11 16:09:25.000000,"Hey! You'll have to provide a real reproduction (a GitHub repo actually running React) — the classes you have all are correct and are picked up as expected in this static demo:
https://play.tailwindcss.com/dMBDNbRUAv
Going to convert to a discussion since I don't believe this is an actual bug but still happy to help you figure it out.",2021-09-12 12:28:13.000000,1,1.0,Not a Bug
722,https://github.com/tailwindlabs/tailwindcss/discussions/5509,2021-09-13 21:46:35.000000,"Correct me if I'm wrong but this doesn't seem like an issue with Tailwind, perhaps something for the discussions board, or SO as you already mentioned?",2021-09-15 11:26:20.000000,1,1.0,Non Actionable Topic
723,https://github.com/tailwindlabs/tailwindcss/discussions/5509,2021-09-13 21:46:35.000000,"Hey @opensas! The issue here is just in how tools like SvelteKit (and basically all others) process multiple CSS sources like this.
Basically what happens is they process every style block from every Svelte component independently, so if you have a global CSS file and 12 Svelte components that all have a style block, SvelteKit is running Tailwind 13 separate times that are all isolated from each other. So when you try to use @layer components { ... } in a Svelte component, Tailwind has no idea that there is a @tailwind components directive in your global CSS file because it might as well be in someone else's project on a different computer in another country, since everything is processed independently in isolation.
Only real options here are:

Put the custom class in your global CSS file instead of the component so that Tailwind can relocate the styles properly.
Don't use a custom class here at all and just use the utilities right in the markup.
Use the important modifier for your overrides like !bg-red-800

Generally I would recommend against these sort of class-based styling APIs for components because of these specificity issues, and instead do something like:

...where the logic to add the right utility classes based on the selected color happens inside the component. Hope that helps!",2021-09-15 14:15:49.000000,2,,Non Actionable Topic
724,https://github.com/tailwindlabs/tailwindcss/discussions/5509,2021-09-13 21:46:35.000000,"
Don't use a custom class here at all and just use the utilities right in the markup.

Isn't that counter productive?
Say I have an app with structure like so:


With my button component,


Now if I were to use this Button anywhere else in the app, it'll error as expected @layer components is used but no matching @tailwind components directive is present.  Without @layer, the specificity of the component style is lower than the base styles and it seems it never gets applied. 😢
The only way I can think of fixing this is to move all component styles to index.css, which defeats the purpose of component specific styles. Or maybe I'm dumb and don't really understand how Tailwind works. 🤷🏽

Also, probably a personal preference, but

looks cleaner than
",2021-09-20 08:11:34.000000,3,,Non Actionable Topic
725,https://github.com/tailwindlabs/tailwindcss/discussions/5606,2021-07-13 09:49:47.000000,"Hey! The typography plugin has a peer dependency on the tailwindcss package so you'll have to actually install Tailwind locally in your project so the typography plugin can reference it:
npm install tailwindcss
After that everything should work. The issue is happening because using npx without installing Tailwind is just executing it without actually adding it to the project, so while it works great in isolation, the library isn't in node_modules for anything else that depends on it.",2021-07-13 12:06:33.000000,1,,Non Actionable Topic
726,https://github.com/tailwindlabs/tailwindcss/discussions/5606,2021-07-13 09:49:47.000000,"Thanks for the reply Adam! Installing Tailwind led to the next error below:

I then installed PostCSS v8.3.5, which gets everything working - except that PostCSS now screams at me that it's not actually doing anything (which I guess is wrong, as it got the Tailwind plugins working)

Anyways, maybe this issue is more related to Nuxt/PostCSS, or what do you think?",2021-07-13 13:01:37.000000,2,,Non Actionable Topic
727,https://github.com/tailwindlabs/tailwindcss/discussions/5606,2021-07-13 09:49:47.000000,"Yeah this seems like a configuration thing unfortunately, I'm not super familiar with Nuxt but I know they recommend using their @nuxt/tailwindcss module:
https://tailwindcss.nuxtjs.org/
Going to move this to discussions since as far as I can tell there's nothing for us to do on our end here, and probably just need to tweak the config to get it working the way you need.",2021-09-26 15:01:11.000000,3,1.0,Non Actionable Topic
728,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"Settings    corePlugins: { preflight: false, } It can be fixed But I also need other default styles",2021-11-02 10:58:58.000000,1,,Non Actionable Topic
729,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,Can you explain the problem more clearly and show the old behavior compared to the new behavior so we can understand what has actually changed for you?,2021-11-02 13:53:42.000000,2,,Non Actionable Topic
730,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"When I upgrade 3.0.0-alpha.1 Default base button style like button, [type='button'], [type='reset'], [type='submit'] It has a great impact on existing projects
if Settings corePlugins: { preflight: false } It can be fixed But I also need other default styles
",2021-11-02 14:04:26.000000,3,,Non Actionable Topic
731,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"Looks like you have your CSS in a bad order — you should make sure your .n-button class is defined after your base styles.
The order needs to be like this:

Giving you control over this order is the reason Tailwind provides three layers for the styles.
Those styles are there in v2 as well, just organized very slightly differently but not in a way that should impact this:
https://unpkg.com/tailwindcss@2.2.19/dist/base.css
Going to convert this to a help discussion, but if there is a real issue here that I'm missing (there totally could be, sorry if so!) please open a new issue and follow the issue template, including providing a proper reproduction repository.",2021-11-02 17:15:20.000000,4,1.0,Non Actionable Topic
732,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,I upgraded to 3.0 and the background colors on my MUI Button component went transparent. I don't want to completely disable the preflight. How can I only disable the button > background-color: transparent?,2021-12-13 05:12:19.000000,5,,Non Actionable Topic
733,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"I have the same problem, but only when building my react app. Everything works when using development build.",2021-12-14 12:19:08.000000,6,,Non Actionable Topic
734,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"I also noticed this change, it looks to just be an update to the reset in V3 that now sets the background color to be transparent.
My fix was to just switch the order of imports and make sure my (legacy) custom CSS was imported after Tailwind so that it won.",2021-12-15 22:56:52.000000,7,,Non Actionable Topic
735,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"Same problem with element-plus.
Now I have to set corePlugins: { preflight: false, } and add tailwind 2.x base css import into entry file.",2021-12-16 06:40:34.000000,8,,Non Actionable Topic
736,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"I also encountered this problem, I hope there will be a solution",2021-12-21 04:50:11.000000,9,,Non Actionable Topic
737,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"I make several ways to solve problem. If you have installed ElementPlus 1.3.0-beta.x and tailwindcss 3.0.x with vite 2.6.5, it might helps you.


If you are fully import ElementPlus, that should notice main.ts(or js) file, the css file import order, element-plus should be imported after tailwindcss. For example:

that would be fine.


If you need On-demand Import(auto import) ElementPlus components, as offical guide, you could also import full ElementPlus css file after tailwindcss file, but it produce unnecessary and reduplicate css. So #5969 (comment) can help you, but I just remove tailwindcss @tailwind base; and add my modified base css file(just remove line: background-color: transparent; at button, [type='button'], [type='reset'], [type='submit'])


If vite can set package css file order, base on way 2, it might solve too, but it seem no config for vite, and never will.


Import!!! Maybe best solution, base on 2. On-demand Import(auto import), at last, just put tailwindcss file in index.html, it works too.

remember to remove your tailwindcss file in main.ts. And here part of vite.config.ts code:

You will see under dev mode, it works, wonderful step!!!
Don't happy too early, production mode doesn't work! wtf : (
Take it easy, after hours hardwork, a really one solution dansheng le  (come out : ). Maybe not good, but it really succeed! the solution would not under list, need another headline.


Temporary Solution
Now, you need get ready with these files:

index.html
src/main.ts
src/assets/styles/index.scss (my tailwindcss file)
vite.config.ts
src/tailwindcss.ts (optional, I will explain later)

Edit your html as below, /src/assets/styles/index.scss or /src/tailwindcss.ts, just keep one, I don't recommend create another ts file with scss import, of course as your need.

Remeber a bit modify with main.ts

Here is my src/assets/styles/index.scss:

Most important one with vite.config.ts, here is mine:

Please keep eyes on manualChunks part, two customize config, but what order here not effects the build result.

You ask me why this work, I'm not sure, but it really works. Maybe you could try and tell me it would or not work.

At last, I need to show what I have researched for this problem, vite has lots of issues about this similar questions, such as:

vitejs/vite#3924
vitejs/vite#6301
vitejs/vite#6044

It seems that will be fixed sooner or later.
And my solution mostly inspired by vitejs/vite#6375
relative issues: #6602

我目前有几个办法来解决。当前我使用的是ElementPlus 1.3.0-beta.x、tailwindcss 3.0.x、vite 2.6.5，如果你也差不多，可以参考下。

需要全局使用ElementPlus，只需要在入口文件main.ts(js)中，保证css的导入顺序，ElementPlus在后面就可以覆盖了。
如果是需要按需导入，那就麻烦了，按照ElementPlus官方的方法，实际上组件被优先打包，所以tailwindcss的样式随后，就覆盖了button的样式，那就可能需要重复再导入一次ElementPlus的css文件，这个非常不好，只能算曲线救国的方法，因此可以如#5969 的兄弟的方法，灵活处理。
如果vite能控制css打包顺序那就是最好的，不过我找了关于rollup的相关option，包括同步异步打包之类的，并没有什么收获，因为上面的英文版已经详细介绍了可能有用的解决方案，虽然英文很蹩脚，解决方案很奇葩，但是有效，并且无副作用，我觉得还是可以参考一下的。这里就不在复述这个奇技淫巧了。
",2022-01-11 06:39:21.000000,10,,Non Actionable Topic
738,https://github.com/tailwindlabs/tailwindcss/discussions/5969,2021-11-02 10:40:55.000000,"I solved this creating custom classes with @apply and using !important in the end. This overwrite default styles just like !important in CSS.
For someone like me that haved this problem ;)",2022-04-21 17:45:04.000000,11,,Non Actionable Topic
739,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"Converting to a discussion since this does not use the issue template or include any of the required information.
Can you provide a reproduction? I can't get it to not generate classes. For example tailwindcss.com is built with JIT mode and the classes have definitely been generated there.",2021-11-23 18:23:17.000000,1,1.0,Invalid issues
740,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"I made a condensed git repo of my project here: https://github.com/TomDeSmet/tailwind-jit-issue
It's more or less a basic Vite + Tailwind setup.
I configured the purge list targeting files directly instead of with a wildcard.
I didn't include TAILWIND_MODE=watch as this didn't work for me either.
If you run it with npm run dev and add p-8 or text-green-500 to the p tag in app.vue. It doesn't do anything unless you save the Tailwind config file again.",2021-11-24 08:46:11.000000,2,,Invalid issues
741,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"This is helpful and I can reproduce, thanks! Will dig into it.",2021-11-24 16:16:08.000000,3,,Invalid issues
742,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"So this looks like a bug in Vite that we actually reported back in June, it doesn't respect PostCSS dependency messages for .vue files:
vitejs/vite#3717
Thanks for the reminder, will try to push things forward there.",2021-11-24 17:58:39.000000,4,,Invalid issues
743,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"Testing again, one thing that's weird is in your purge config you have app.vue but the file is App.vue on the file system. Using Vue 3 this actually fixes the problem completely, but in Vue 2 it still doesn't seem to work.
Here's a Vue 3 project where all of this stuff works perfectly:
https://github.com/adamwathan/vite-issue-repro
Talked to Evan about and sent him the reproduction, he says this is an issue with vite-plugin-vue2, and unfortunately that's a totally third party thing and Vite doesn't support Vue 2 natively. I've opened an issue there for you, hopefully someone is willing to help out:
underfin/vite-plugin-vue2#153",2021-11-25 11:39:47.000000,5,,Invalid issues
744,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,Thanks for figuring this out! Time to move on to Vue 3 I think.,2021-11-25 13:45:34.000000,6,,Invalid issues
745,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"i just want to come in here and say that taking the time to debug other people's problems like this is really freaking cool of you @adamwathan
love tailwind!",2021-11-26 10:35:24.000000,7,,Invalid issues
746,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,@adamwathan is there a way to make TAILWIND_MODE=watch work in such scenario (underfin/vite-plugin-vue2#153)?,2021-12-23 08:44:22.000000,8,,Invalid issues
747,https://github.com/tailwindlabs/tailwindcss/discussions/6187,2021-11-23 15:43:14.000000,"After much struggling with the same issue despite using Vue 3, I realized the problem was coming from postcss-each, I thought I'd mention this here.
My postcss.config.js file looks like this:

(I put Tailwind in beforeEach after reading this issue: #7362 – doesn't a lot of sense to me but it was the only way to get it to work)
Removing the postcss-each plugin and putting Tailwind and the rest at the top level enables proper HMR.
(I guess I'm gonna have to do a lot of copy-pasting – dreading the font-face rules – does anyone know of a good alternative to write some loops in css?)",2022-03-01 16:18:00.000000,9,,Invalid issues
748,https://github.com/tailwindlabs/tailwindcss/discussions/6427,2021-12-11 18:02:32.000000,"Make sure you change the default language for CSS files to PostCSS and that stuff should go away. If not you may also have to disable the built in CSS linting in VS Code.
Going to close as not an issue in the docs per se, better suited as a discussion in our main discussion area I think ❤️",2021-12-12 00:36:18.000000,1,1.0,Non Actionable Topic
749,https://github.com/tailwindlabs/tailwindcss/discussions/6427,2021-12-11 18:02:32.000000,"I'm pretty sure the errors come directly from the extension. If I disable it those errors become warnings. VSCode definitely regards the file as PostCSS. I'm just saying it might be a good idea to remove the recommendation for the extension from the docs because it either doesn't work or is complicated to set up. The sentence ""VS Code has a PostCSS Language Support plugin you can use that works great with Tailwind CSS"" is simply not correct.",2021-12-12 17:29:56.000000,2,,Non Actionable Topic
750,https://github.com/tailwindlabs/tailwindcss/discussions/6427,2021-12-11 18:02:32.000000,"This is what I see when the language is set to CSS:

And this is what I see when it is set to PostCSS:

This is with no other CSS options edited, so not sure what the difference would be.",2021-12-12 17:32:50.000000,3,,Non Actionable Topic
751,https://github.com/tailwindlabs/tailwindcss/discussions/6427,2021-12-11 18:02:32.000000,"Oh wow, there was another extension (postcss-sugarss-language) enabled. As soon as I disabled it, the errors went away. Sorry for the confusion and thanks for your help.",2021-12-12 17:46:42.000000,4,,Non Actionable Topic
752,https://github.com/tailwindlabs/tailwindcss/discussions/6427,2021-12-11 18:02:32.000000,"Only now there is no autocomplete for regular CSS attributes. 😕
I wonder, if there is a perfect VS Code setup that supports the development for both Tailwind and regular CSS.",2021-12-12 18:00:38.000000,5,,Non Actionable Topic
753,https://github.com/tailwindlabs/tailwindcss/discussions/6507,2021-12-14 15:07:24.000000,Hey! Can you please provide a minimal reproduction repo for this?,2021-12-14 17:22:34.000000,1,,Invalid issues
754,https://github.com/tailwindlabs/tailwindcss/discussions/6507,2021-12-14 15:07:24.000000,"Converting this to a help discussion since the issue template wasn't followed — if you want to report a bug please follow the instructions, it's just not possible for us to keep up and help if people don't do their part to give us the information we need.",2021-12-14 17:31:14.000000,2,1.0,Invalid issues
755,https://github.com/tailwindlabs/tailwindcss/discussions/6507,2021-12-14 15:07:24.000000,"My first thought is that this content path is not specific enough:

https://tailwindcss.com/docs/content-configuration#pattern-recommendations",2021-12-14 17:32:12.000000,3,,Invalid issues
756,https://github.com/tailwindlabs/tailwindcss/discussions/7215,2022-01-25 11:23:37.000000,"Hey! I am moving this to a discussion since it's more of an idea than an issue.
Also, I'm not sure that showing invalid classes makes sense with the Prettier plugin for Tailwind CSS, as Prettier is not a linter. That sounds like something that would be better implement with ESLint.",2022-01-26 13:01:25.000000,1,1.0,Non Actionable Topic
757,https://github.com/tailwindlabs/tailwindcss/discussions/7215,2022-01-25 11:23:37.000000,I was trying this out and got some issues and still finding it can you give some more suggestions if any thanks in advance. Dunkinrunsonyou,2022-01-29 11:37:33.000000,2,,Non Actionable Topic
758,https://github.com/tailwindlabs/tailwindcss/discussions/7508,2022-02-16 01:17:36.000000,Hey! Do you get a different result when you use vanilla CSS instead of Tailwind?,2022-02-16 01:30:19.000000,1,,Further discussion
759,https://github.com/tailwindlabs/tailwindcss/discussions/7508,2022-02-16 01:17:36.000000,"@adamwathan No! when I tried this  codepen link, it acts the same. Does that mean there is something wrong with my browser's CSS engine? Should I close this issue?",2022-02-16 01:59:25.000000,2,,Further discussion
760,https://github.com/tailwindlabs/tailwindcss/discussions/7508,2022-02-16 01:17:36.000000,"I can confirm this also happens with chrome on windows 10/11, but only when you scroll with the mouse wheel(Push the mouse wheel to a side and it'll scroll in the direction you push, Not all Mice support this feature thought) , but it's smooth when you use the arrow keys. But I don't think this is a Tailwind Related bug.",2022-02-17 11:26:05.000000,3,,Further discussion
761,https://github.com/tailwindlabs/tailwindcss/discussions/7508,2022-02-16 01:17:36.000000,"Got it yeah this sounds like a browser-related thing and not something we could fix by generating different CSS, so I'm going to convert this to a discussion in case anyone has some suggestions for dealing with it (if it can be dealt with at all).",2022-02-17 16:11:13.000000,4,1.0,Further discussion
762,https://github.com/tailwindlabs/tailwindcss/discussions/7528,2022-02-19 02:11:32.000000,"Hey! Yep this is a bug in whatever minifier you are using, Tailwind is generating a space there and some other tool is removing it. I feel like this should be fine in the latest version of every popular minifier though, so try updating dependencies and seeing if that helps.
Going to convert to a discussion since not a bug in Tailwind.",2022-02-19 02:24:19.000000,1,1.0,Unrelated Repository
763,https://github.com/tailwindlabs/tailwindcss/discussions/7644,2021-12-10 13:51:33.000000,"Hey thanks for sharing this idea! This honestly would be nice to have some day, but it's probably a bigger project than it sounds, so it isn't something we've been able to get to yet.
I've moved this over to our discussions, as this is a better place for ideas like this, since it's not really an issue.",2022-02-24 20:06:49.000000,1,1.0,Non Actionable Topic
764,https://github.com/tailwindlabs/tailwindcss/discussions/7667,2021-11-25 13:51:57.000000,"At least in Tailwind 2.2.x with jit mode, I think only safelist option is supported.",2021-12-24 19:19:34.000000,1,,Not a Bug
765,https://github.com/tailwindlabs/tailwindcss/discussions/7667,2021-11-25 13:51:57.000000,"Tailwind CSS v2.0 has been updated for the latest PostCSS release which requires installing postcss and autoprefixer as peer dependencies alongside Tailwind itself.
mcdvoice",2022-02-10 09:43:38.000000,2,,Not a Bug
766,https://github.com/tailwindlabs/tailwindcss/discussions/7667,2021-11-25 13:51:57.000000,"Hey! Yeah Tailwind doesn't have a blocklist feature and never has, that was a feature of PurgeCSS which we aren't using under the hood anymore in v3. I think a blocklist is a good potential feature idea and have it in my list of things for us to consider though 👍 Going to convert this to a discussion to track as a feature request.",2022-02-25 19:09:58.000000,3,1.0,Not a Bug
767,https://github.com/TanStack/react-table/discussions/2271,2020-05-06 07:52:28.000000,Version 6 issues are no longer tracked in the main issues section of the Github repo. I'll convert this to a discussion for the community to help out with.,2020-05-07 06:14:15.000000,1,1.0,Further discussion
768,https://github.com/TanStack/react-table/discussions/2271,2020-05-06 07:52:28.000000,"There was an issue with one of the <StockRange cs={cs} hs={hs} os={os} /> Components that was causing the error, this had nothing to do with react table. Its resolved.",2020-05-10 08:28:30.000000,2,,Further discussion
769,https://github.com/TanStack/react-table/discussions/2428,2020-06-09 16:42:11.000000,"@dsoffiantini I am looking for a way to do the same. I group a column A and column B sums up the integers within that group. If I now sort column B it will consider all the subRows, too. However, this behaviour is slightly confusing for the user who would rather want to sort by the grouped sum. Were you able to figure out if this is possible?",2020-06-13 20:56:42.000000,1,,Non Actionable Topic
770,https://github.com/TanStack/react-table/discussions/2428,2020-06-09 16:42:11.000000,"This is a question, so converting it to discussions. Feel free to use the discord server too!",2020-08-03 18:23:34.000000,2,1.0,Non Actionable Topic
771,https://github.com/TanStack/react-table/discussions/2450,2020-06-16 08:56:46.000000,"I converted this over to a discussion. :) Also, feel free to use the discord server to ask questions! https://discord.com/invite/WrRKjPJ",2020-08-03 18:24:58.000000,1,1.0,Non Actionable Topic
772,https://github.com/TanStack/react-table/discussions/2744,2020-09-22 19:48:21.000000,V6 support is deprecated. Please use the discussions tab to discuss deprecated versions.,2020-10-05 03:29:17.000000,1,1.0,Non Actionable Topic
773,https://github.com/TanStack/react-table/discussions/3812,2022-03-20 12:48:57.000000,"Yes, you can just use  Ternary (if) with a useState(true),  if it is true (?), while your data is fetching, render the bar image. When the fetch is finished, set the state to false,then ( : ) then display: none or something on the image. there are another solutions, but this is the most simple.",2022-03-23 01:58:03.000000,1,,Non Actionable Topic
774,https://github.com/TanStack/react-table/discussions/3812,2022-03-20 12:48:57.000000,This issue is being marked as stale (no activity in the last 14 days),2022-04-08 16:20:25.000000,2,,Non Actionable Topic
775,https://github.com/TanStack/react-table/discussions/3812,2022-03-20 12:48:57.000000,"This issue has been detected as stale and automatically closed. It's very likely that your issue has remained here this long because it would require breaking changes to v7. React Table v8 is currently in alpha (soon beta!) and already contains bug fixes, performance improvements and architectural changes that likely address this issue.

If your v7 issue has been previously labeled as requiring breaking changes, please try the new v8 alpha/beta releases
If your v7 issue has not already been labeled as a breaking change, open a new issue.
If this was a v8 issue and was closed by mistake, please reopen or leave a comment below.
",2022-04-08 16:23:29.000000,3,,Non Actionable Topic
776,https://github.com/TanStack/react-table/discussions/3812,2022-03-20 12:48:57.000000,"
Yes, you can just use Ternary (if) with a useState(true), if it is true (?), while your data is fetching, render the bar image. When the fetch is finished, set the state to false,then ( : ) then display: none or something on the image. there are another solutions, but this is the most simple.

Can you provide a sample by using stackblitz? it is easier to understand.",2022-04-08 17:35:41.000000,4,,Non Actionable Topic
777,https://github.com/TanStack/react-table/discussions/3812,2022-03-20 12:48:57.000000,This is a markup question that doesn't really have to do with react-table's core. Going to convert to a discussion.,2022-04-08 17:52:19.000000,5,1.0,Non Actionable Topic
778,https://github.com/TanStack/react-table/discussions/3814,2022-03-28 05:41:18.000000,"This is more of a question of implementation, so I'm going to move this to a discussion.",2022-04-08 18:32:15.000000,1,1.0,Non Actionable Topic
779,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"I'm still not in support of any changes here. HTML5 has long been the implicitly preferred doctype for frontend development. XHTML is nearly dead as far as I can tell: https://softwareengineering.stackexchange.com/questions/149839/is-xhtml5-dead-or-is-it-just-an-synonym-of-html5.

So now it will be at least the second time, you've been asked.

Not trying to be mean or anything here, but this is the second time in a year that it's been asked about, and as far as I know only the second time in the ~9 years of Bootstrap. So I'm still not inclined to adopt a competing spec, recommend it anyway, or even support it in anyway.",2020-05-02 01:15:14.000000,1,,Non Actionable Topic
780,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"In the end it is a standards issue and one not easily solvable on grounds of the standards. At the same time the bootstrap team might run into issues while developing bootstrap5, because of some really weird quirks.
Read this discussion on SO
https://stackoverflow.com/questions/27223756/is-element-tagname-always-uppercase
And then examine the page(s) linked to in there. I used Firefox
https://programming.enthuses.me/tag-node-case.php?doc=x
Notice the differences when rendering the same page in XHTML and HTML5. Most startling is the uppercase section in the SVG part.
Imagine the following scenario. Bootstrap 5 apparantly (correct me if I am wrong) uses more SVG elements. So users will start editing some of the SVG stuff.  And casing might be changed by the preferred editor automatically.
Won't be long if there is a discussion about XML/XHTML and case preserving of tags in here.
If nothing else, it's good to be aware of unexpected issues popping up.
From a developers perspective, I can use camel-case tags in XML/SVG too, hence I think about these issues as I enjoy the freedom that comes with it. Never understand the fixation of either lower- or uppercase
Hence I build my own code accordingly to deal with tags that might even use mixed case. The W3C guy mentioned in the SO discussion in the link above, might be unhappy with my stance, but I'm personally  fed up with bug hunting for issues like mixed cases that might creep up.  Been there, done that. In this case I don't see much value to enforce a certain case for tags.
I do understand however the stance of the bootstrap development team. It's not a problem they created, and the usage for XHTML is indeed small. In the past I've also posted bug reports to the jQuery team for XHTML pages, that thankfully got resolved, as XHTML was more popular back then. My point is: bootstrap 4 relies on jQuery,.
My wish for the future is that we developers are free from these uppercase/lowercase issues, as they are partially remnants of old OS wars. The Internet strives to be come more accessible in any form, and that should apply for mixed case in HTML too. HTML is a subset of XML, that case restriction issu never, ever made sense at all, no matter from what side I look at it.",2020-05-04 01:26:15.000000,2,,Non Actionable Topic
781,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"
Not trying to be mean or anything here, but this is the second time in a year that it's been asked about, and as far as I know only the second time in the ~9 years of Bootstrap. So I'm still not inclined to adopt a competing spec, recommend it anyway, or even support it in anyway.

And how many requests did you need to change your mind?
What do you say to this:

Sorry, but for me it sounds weird not to do so. HTML is a very, very loose standard.
HTML says <html> is valid code and <HTML> is valid code; even <Html>, <HtMl>, <HtmL> - all valid code. Even any combination for opening and closing tag, like <HtmL></hTMl> is valid code. XHTML is a strict standard, which is case sensitive and differences them.
Now is your argumentation, you want to be compatible with the ""everything is correct"" standard, that need to convert all tags in uppercase, just to make it possible to handle it and you are using strict comparsion (=== and !==) for it but don't want to be compatible with the XHTML standard, which is strict by itself?

And what to the fact, that even html5 sometimes use lower case, as said in the answer before?
https://programming.enthuses.me/tag-node-case.php?doc=5
https://jsfiddle.net/j6rpox8y/",2020-05-04 19:52:03.000000,3,,Non Actionable Topic
782,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"And as I see, there are 4 people, who want's to get the support and 5 people who vote up for your post.
Maybe a bit offtopic: I would like to know, why html makes tags to uppercase. I don't find an answer to it.",2020-05-04 20:28:31.000000,4,,Non Actionable Topic
783,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"
why html makes tags to uppercase

Not sure what you mean by that. Uppercase tags (i.e. <BODY>) was really just something people used to do before text editors that provided syntax highlighting  - it was easier to see what was markup and what was content.",2020-05-05 00:07:40.000000,5,,Non Actionable Topic
784,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"@tiesont
To me uppercase is like shouting. Even my eyes tend to ignore it. Even when syntax highlighting wasn't there, I'd write lowercase, did tag matching as soon it was essential for xhtml, etc..
As a full stack developer I appreciate that modern browsers have been designed rather smartly:
An example
<a href=""index.html"" ...> ... </a>
A style sheet apprently matches all these selectors regardless of the case
'a[href=index.html] { ... }'
'A[href=index.html] { ... }'
'a[HREF=index.html] { ... }'
'A[HREF=index.html] { ... }'
Internally this happens because browsers, according to the built in browser dev tools, changes standard html/css related things to lowercase. In other words the software helps to smooth out user preferences and choices being made by standard committees. Browser developers seems to 1) see the big picture how these technologies interact with one another. 2) Are feed up to deal with issues in the example above.
And the real fun for me is that my point that I am trying to make can be seen as an argument of either side of the isle. xhtml/xml (not the custom tags) is a bit restrictive in many regards (hence many developers dropped it). Yet I also try to promote the idea, that libraries such as bootstrap should be agnostic to the user preferences and deal with anything, as it is. bootstrap and many other libraries have apparently adopted the infamous gigo approach in that matter.
( https://en.wikipedia.org/wiki/Garbage_in,_garbage_out )
Again I'm happy that browser developers seem to see things differently.",2020-05-05 01:29:22.000000,6,,Non Actionable Topic
785,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,"

why html makes tags to uppercase

Not sure what you mean by that.

I mean this:

https://developer.mozilla.org/en-US/docs/Archive/Web/Writing_JavaScript_for_HTML
Scripts that used getElementsByTagName() with an upper case HTML name no longer work, and attributes like nodeName or tagName return upper case in HTML and lower case in XHTML.

I can see, why xml use lower case; because it don't change the case and returns it like it is and most developers (as far, as I have seen it) write their code in lower case. But why did nodeTage and tagName transform to upper case in html, not lower case? Who have decided this and what was the reason for it? That could be really interesting to know.",2020-05-06 14:56:11.000000,7,,Non Actionable Topic
786,https://github.com/twbs/bootstrap/discussions/30705,2020-05-01 21:52:38.000000,Going to convert this to a discussion since it's an open ended convo.,2020-05-06 15:05:10.000000,8,1.0,Non Actionable Topic
787,https://github.com/twbs/bootstrap/discussions/30763,2020-05-07 18:28:20.000000,"This is more appropriate for a how-to place like our Discussions, our Slack, or Stack Overflow. Converting it to a discussion for now in case anyone in the community has some ideas for you.",2020-06-16 03:37:35.000000,1,1.0,Non Actionable Topic
788,https://github.com/twbs/bootstrap/discussions/31656,2020-09-15 01:15:16.000000,Please use discussions for open ended questions.,2020-09-15 02:13:24.000000,1,1.0,Non Actionable Topic
789,https://github.com/twbs/bootstrap/discussions/31656,2020-09-15 01:15:16.000000,"also, as support is still not all that pervasive...i'd say it's best to hold off https://caniuse.com/?search=dialog",2020-09-15 08:42:29.000000,2,,Non Actionable Topic
790,https://github.com/twbs/bootstrap/discussions/31656,2020-09-15 01:15:16.000000,"Here is a demo.
There are some benefits:

Less markup required: .modal-dialog and .modal-content could be removed.
Much less JS: Only little JS is required to show the dialog, and, that's it!

And yes, it does not support Safari, iOS and Firefox. But it is polyfillable.",2020-09-15 12:08:10.000000,3,,Non Actionable Topic
791,https://github.com/twbs/bootstrap/discussions/31656,2020-09-15 01:15:16.000000,"With the recent release of Safari 15.4 all major browser now support the  element natively:

https://caniuse.com/dialog
https://developer.apple.com/documentation/safari-release-notes/safari-15_4-release-notes
https://webkit.org/blog/12445/new-webkit-features-in-safari-15-4/
",2022-03-21 21:58:23.000000,4,,Non Actionable Topic
792,https://github.com/twbs/bootstrap/discussions/31656,2020-09-15 01:15:16.000000,@mkurz @techboyg5 https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement#browser_compatibility,2022-03-27 15:16:20.000000,5,,Non Actionable Topic
793,https://github.com/twbs/bootstrap/discussions/31656,2020-09-15 01:15:16.000000,"With the improved browser support, we may be able to implement it in a v6 when we we get around to that. Not 100% sure just yet. All depends on how many browser versions we drop between now and then.",2022-03-27 17:55:32.000000,6,,Non Actionable Topic
794,https://github.com/twbs/bootstrap/discussions/31709,2020-09-20 03:44:06.000000,moving this to discussion section,2020-09-20 12:51:02.000000,1,1.0,Non Actionable Topic
795,https://github.com/twbs/bootstrap/discussions/31709,2020-09-20 03:44:06.000000,The render blocking warning is due to not loading CSS asynchronously. You can investigate adding critical CSS and loading the rest asynchronously.,2020-09-21 06:22:21.000000,2,,Non Actionable Topic
796,https://github.com/twbs/bootstrap/discussions/32404,2020-12-09 17:19:09.000000,"instead of just obliquely referencing a comment from 8 years ago, I'd suggest formulating your question (and titling your issues) a bit more understandably.
moved this to discussions, as it appears to be a how-to/why isn't this working type query",2020-12-09 17:43:07.000000,1,1.0,Invalid issues
797,https://github.com/twbs/bootstrap/discussions/33566,2021-04-06 15:56:57.000000,"This isn't a bug, this is a how-to question. Converting to a Discussion.",2021-04-06 18:06:43.000000,1,1.0,Not a Bug
798,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"rem is a relative unit, meaning everything sized with it will resize accordingly to the root font size. So for anyone changing their base font size, layout and content will resize and preserve their proportion altogether.
When used correctly, zooming in and out will even trigger breakpoints, thus switch responsive layout.
Would you be able to provide a reduced test case demonstrating an issue?",2021-12-13 20:11:32.000000,1,,Non Actionable Topic
799,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"I'll have a harder time demonstrating a broken design I think, but here is an example of the undesirable consequences of REM for spacing:
Here is a page section with a medium font-size set in browser settings:

Here is the section after increasing the default browser font-size:

When I adjust font-size, I expect the font-size of elements on a page to increase. What I don't expect or desire is for my visuals (images, etc) to be more spaced out. The padding on the left of the text also increases unnecessarily. The increased space in the grid and other padding means less space for my visuals and text.",2021-12-13 20:48:04.000000,2,,Non Actionable Topic
800,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"How are you sizing your cards, in this example? Would you mind creating a CodePen or something that'd allow to have a closer look?",2021-12-13 21:07:27.000000,3,,Non Actionable Topic
801,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"In the screenshot below, you can see the padding utility p-* classes rely on the $spacer variable. I hope this helps. This is a quick example. We have many custom components and content sections throughout our site that use similar spacing methods. Other jobs I've had teams have done pretty much the same thing.
",2021-12-13 21:21:42.000000,4,,Non Actionable Topic
802,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"Regarding your point of using rem for element spacing to ""preserve their proportion altogether"", this seems to make too many assumptions and seems to do more than what a user might expect. I.e increasing the browser font-size should keep the existing layout and only adjust font-sizes.",2021-12-13 21:26:33.000000,5,,Non Actionable Topic
803,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"
",2021-12-14 22:41:07.000000,6,,Non Actionable Topic
804,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"@thenomadicmann
Without seeing everything at play here I can only guess what's going on but it appears these two elements, class.card-img and class.card-img-overlay, are positioned. The card-img is essentially the background and the card-img-overlay is bottom-left aligned.
If I'm right, the bottom-left alignment is your issue. Align it from the top ensuring you leave enough space for the image to fully display and not cause the elements to overlap.
e.g. card-img-overlay { top: 15rem; left: 0;}",2021-12-15 16:27:43.000000,7,,Non Actionable Topic
805,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"I wanted to follow this up with the fact that in BS4 the column gutter width is set with pixels ($grid-gutter-width: 30px !default;). In BS5, it is set using REM ($grid-gutter-width: 1.5rem !default;).",2021-12-16 17:13:59.000000,8,,Non Actionable Topic
806,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,Are you setting $font-size-root instead of $font-size-base somewhere ?,2022-01-23 12:46:48.000000,9,,Non Actionable Topic
807,https://github.com/twbs/bootstrap/discussions/35820,2021-12-13 19:59:18.000000,"We long ago made the decision to move nearly all our units to rems. The grid was a leftover as an assumption that, similar to the media queries not rendering properly with rems, that we needed to keep some pixel values around. Spacers affect the margin and padding of type elements like headings and paragraphs, and provide more consistent scaling, so it makes sense they should be set in rems like everything else.
Edit: Also, I turned this into another discussion as this wasn't an issue (bug or feature request).",2022-02-10 17:49:26.000000,10,1.0,Non Actionable Topic
808,https://github.com/vercel/next.js/discussions/13505,2020-05-28 17:23:56.000000,Can you provide a full github repository?,2020-06-01 07:23:16.000000,1,,Not a Bug
809,https://github.com/vercel/next.js/discussions/13505,2020-05-28 17:23:56.000000,"@timneutkens Sure! Check out https://github.com/olaven/error-reproductions/tree/master/nextjs-api-route-error
yarn test -> is undefined
yarn dev/browser -> is defined",2020-06-01 10:28:51.000000,2,,Not a Bug
810,https://github.com/vercel/next.js/discussions/13505,2020-05-28 17:23:56.000000,"Ran yarn dev and went to:

The correct id is returned there.
Same if you open:

The output looks correct as well.
Looks like your testing setup is wrong though. Particularly you're using Next.js internals that you shouldn't touch: import {apiResolver} from 'next/dist/next-server/server/api-utils'.
Instead you can next build and next start and then run the tests against http://localhost:3000 for example.
Going to convert this to a discussion as it's not a bug in Next.js, the [id] is provided correctly.",2020-06-01 17:18:57.000000,3,1.0,Not a Bug
811,https://github.com/vercel/next.js/discussions/16032,2020-08-10 05:22:02.000000,"I see that this bug report has been converted into a discussion. Are there any solutions to this issue besides using next@canary (which was mentioned in a similar issue but isn't working in my case)? If so, can anyone make suggestions even if you think this report is trivial. I'd hate to have to scrap my project (larger in scope than the simplified repo example) and switch to a different tech stack because of this bug in production. I like the benefits of Next JS (and would like to stick to it in the long run) but can't afford to have such issues with production deployments going unresolved.",2020-08-10 15:35:11.000000,1,1.0,Unrelated Repository
812,https://github.com/vercel/next.js/discussions/16032,2020-08-10 05:22:02.000000,"This is unrelated to Next. There are some code choices that should be fixed which should fix your problem.
For example, you're invoking event.preventDefault within the changeSomething class property; however, this is not needed as it's not preventing any default event action (if button was type submit and it's a child of a form, then event.preventDefault would prevent the page from refreshing -- in this case, since its type is button, then it prevents nothing). Also you're also passing in this.state.someState (oldState) as an argument to changeSomething when the state is already available via this.state.
You can simplify your code to the following example below (confirmed working in development and production -- comments are an optional way of using traditional functions (function(){ ... }) as class properties where this needs to be manually binded to the class property, otherwise this will be undefined. When fat arrow functions (() => { ... }) are used as class properties, then  they retain the lexical scope of this and don't require this to be manually binded to it. As to which one to use, it's a personal preference):
",2020-08-10 17:09:46.000000,2,,Unrelated Repository
813,https://github.com/vercel/next.js/discussions/16032,2020-08-10 05:22:02.000000,"Thanks to the greatly appreciated feedback of @mattcarlotta , it was determined that this was not a Next JS issue. I also managed to get my code repo and original app working without any problems in production (both locally and on my cloud-hosted virtual private server).
Just in case anyone runs into the same problem, I'll post where I went wrong. In local development and production, the app worked because all I had to do was go to localhost:3000 to see the app. However, on my remote server (containing a domain name), I had my app running on localhost behind Nginx as a reverse proxy. I had Nginx set up in such a way that it would only forward requests to my Next JS app if the relative path began with some random string known only to me. For example, mydomainDOTcom/secretstring (secretstring = home in the repo example) would point to the Next JS app while mydomainDOTcom/ (slash nothing), would point to a completely different resource.
It turns out that when a request was made to the server, it would fetch the main HTML page from the server (with Nginx forwarding the request to the right app thanks to the ""/secretstring"" rule in my Nginx setup). However, when fetching the necessary Javascript from the server, the request was not forwarded to my Next JS app. Instead it was forwarded to the resource behind the rule for the ""/"" path. Since that resource doesn't contain the necessary Javascript, no Javascript was loaded and therefore none of my website's buttons worked at all.
I fixed it by modifying the routing rules directly inside my Next JS app and changed the Nginx setup so that all requests beginning with ""/"" are forwarded to my Next JS app. Now requests for the HTML and Javascript (which occur separately) are routed to the same app on the server. I wanted to hide my webpages behind a secret relative path so that search engines wouldn't crawl my website before I was ready for them to do so. I just went about it the wrong way when configuring Nginx.
All-in-all, this was never a problem with NextJS but with my server setup. Thanks to @mattcarlotta , I was able to resolve this issue fairly quickly and get over fears about possibly having to use some other frontend framework (which wouldn't have been very desirable given the user-friendliness of Next).",2020-08-11 02:23:03.000000,3,,Unrelated Repository
814,https://github.com/vercel/next.js/discussions/16032,2020-08-10 05:22:02.000000,"Actually i have the same problem but i don't have the unneeded syntax , and the problem appear only in root page pages/index.js
do you have any recommendation thanks",2021-09-21 15:42:21.000000,4,,Unrelated Repository
815,https://github.com/vercel/next.js/discussions/17146,2020-09-16 17:57:48.000000,try to update nodejs,2020-09-16 18:56:47.000000,1,,Invalid issues
816,https://github.com/vercel/next.js/discussions/17146,2020-09-16 17:57:48.000000,"@vitaliemiron I don't think it's the node version.

Node.js 10.13 or later

See from here: https://nextjs.org/docs#system-requirements",2020-09-17 03:12:42.000000,2,,Invalid issues
817,https://github.com/vercel/next.js/discussions/17146,2020-09-16 17:57:48.000000,What does your package.json look like?,2020-09-17 03:14:39.000000,3,,Invalid issues
818,https://github.com/vercel/next.js/discussions/17146,2020-09-16 17:57:48.000000,Converted to a github discussion given this is not reproducible.,2020-09-17 09:08:36.000000,4,1.0,Invalid issues
819,https://github.com/vercel/next.js/discussions/17146,2020-09-16 17:57:48.000000,"I think this might have had to do with me having a next.config.js or package.json above this project folder (I created the project within another repo). I'm not entirely sure, but it seems that doing this outside of the folder I did it in originally fixed the issue.",2020-09-17 16:30:11.000000,5,,Invalid issues
820,https://github.com/vercel/next.js/discussions/18177,2020-10-23 21:20:01.000000,"I'm not sure why exactly this was converted from an issue (it was confusing - GitHub doesn't notify you that this has happened, and I couldn't find the original issue I posted - I had to go back to my browser history to find it to make sure that I didn't dream posting it).
Also seems unfortunate since discussions don't get nearly the same amount of attention as issues (and if this doesn't count as a feature request - what does? why does that GitHub issue template exist)?
At any rate, I was able to come up with a VERY HACKY way of doing this for my own purposes, though I'd really love for it to be solved in Next itself.
tl;dr: It's an API inspired by Suspense. Throw a specific exception if you detect your in an SSR and don't have the stuff from getServerSideProps and have _app.getInitialProps catch it, invoke the async function, and re-render. This requires doing a bunch of stuff (eg, I have a webpack plugin that defines __SERVER__, which is only true for server-side builds), and you have to deal with the fact that getServerSideProps might be invoked more than once (I use a WeakMap whose keys are the http.IncomingMessage objects).
I'm simultaneously proud and horrified at this solution. I hope it can be fixed by Next (I can't think of scenarios where you'd want getInitialProps to run before getServerSideProps considering that the latter blocks page transitions on client-side renders).",2020-10-25 20:44:42.000000,1,1.0,Others
821,https://github.com/vercel/next.js/discussions/18607,2020-11-01 07:29:27.000000,"Looks like the correct page is being served, just that your data fetching does not return a ipsum-lorem post 🤔 Will convert this into a help discussion given it's not a bug.",2020-11-02 09:40:35.000000,1,1.0,Not a Bug
822,https://github.com/vercel/next.js/discussions/21424,2021-01-21 11:11:08.000000,"@timneutkens Hello, can you explain why this was moved into discussion? This issue can be fixed in one line. I can submit a PR if it will be accepted. What should be discussed and who can approve the change?",2021-01-21 15:29:48.000000,1,1.0,Others
823,https://github.com/vercel/next.js/discussions/21424,2021-01-21 11:11:08.000000,"@timneutkens @SleepWalker
Let me break down year-long silence on this topic.
I see no other way to make strong types on custom App without rewriting some of the already existing types manually.",2022-01-10 15:34:10.000000,2,,Others
824,https://github.com/vercel/next.js/discussions/22617,2021-02-23 11:54:52.000000,"Converted this to a discussion. The example isn't broken, but you're looking for help using Relay + Next.js + Pagination 👍",2021-02-28 22:27:33.000000,1,1.0,Invalid issues
825,https://github.com/vercel/next.js/discussions/22895,2021-03-08 17:49:01.000000,I don't know why the topic was moved for discussion if it clearly can be a bug because in other languages ​​it works normally as in the links I showed in the topic.,2021-03-09 13:43:43.000000,1,1.0,Not a Bug
826,https://github.com/vercel/next.js/discussions/23737,2021-04-05 10:00:00.000000,"@timneutkens why was this moved to discussion? It is a bug, the pathname is consistent and the query is not.",2021-04-06 16:17:01.000000,1,1.0,Not a Bug
827,https://github.com/vercel/next.js/discussions/23737,2021-04-05 10:00:00.000000,"I'm basically asking that same question here: #24659 and on StackOverflow
Where did you see that on the documentation?
Do you mean this part?

I've read that before and I was assuming it was referring to the prerender cycle (either during SSG or SSR). And I'm getting this on the client (and apparently you are also). Do you consider the render on the client to be a prerender cycle?
In my case, the page is rendered via SSG (without any data fetching for the prerender). I'm fetching data on the client, inside a useEffect. So I was not expecting router.query to be {} for a url like /search?q=xxx. I was expecting it to be { q: ""xxx"" } since the 1st client render. I still don't get it.",2021-04-30 16:00:05.000000,2,,Not a Bug
828,https://github.com/vercel/next.js/discussions/23737,2021-04-05 10:00:00.000000,"@droganov
Just found out a solution to this: #24659 (comment)
You need to check for the router.isReady property.
From: https://nextjs.org/docs/api-reference/next/router#router-object

I.e: If you need to use router.query on client for a SSG page. You need to ""wait"" for the router.isReady property.",2021-05-03 10:11:27.000000,3,,Not a Bug
829,https://github.com/vercel/next.js/discussions/25300,2021-05-19 20:12:33.000000,"@timneutkens saw you moved this into a discussion - thanks for triaging it to the proper place.
do you know or can you tag someone that can advise 1) whether this is a legitimate issue and 2) if there are any known ways to navigate around this issue?  thanks",2021-05-25 08:14:14.000000,1,1.0,Non Actionable Topic
830,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"Hey team, why did a feature request become a discussion? It's that simple, make a way to let Next.js stop refreshing the page - what can be wrong about having a way to control this simple behavior? What kind of discussion do you expect? Do you want to find people who'll say that's not an issue? Of course there are people who don't need this setting.",2021-06-02 12:06:07.000000,1,1.0,Non Actionable Topic
831,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,Have you looked into customising Next's webpack config? I expect you could find the fast refresh plugin/config in there and disable it.,2021-06-02 15:19:26.000000,2,,Non Actionable Topic
832,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"I was looking to disable fast refresh also. I have my prettier format on save, and If I don't type fast enough. It formats due to fast refresh on every change and my code is all over the place. I ended up just disabling prettier (format on save) and have it set to manual with the keymap the same as formatting on save before fast refresh (cmd + s)
seems way better, my code is running on every change and I can format whenever I want.",2021-06-19 18:34:47.000000,3,,Non Actionable Topic
833,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"I've come to this because of what I thought may have been a bug but is apparently the expected behaviour. Also I think I have a slightly different perspective to @meglio's original post.
Right now I'm working on a Stripe integration and I'm having some issues with automatic reloading:

A page that uses getServerSideProps() and has side effects: I really don't want this page to run out of the blue (some setup is required and if it runs before the setup is finished I have to start again)
A webhook which—I think—sometimes refreshes just as it's being invoked (I can't control when it gets called but I guess even if I could, I can't always predict when automatic reloading might run)

The general feeling of not being in control is very frustrating and I'd rather sacrifice automatic reloading completely, at least in certain scenarios.
Thanks 👍",2021-09-21 07:54:34.000000,4,,Non Actionable Topic
834,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"Hey @meglio, I'm having the same problem. Still trying to debug to see if there's anything I can do w/my code or at least identify the cause. You mention...

...some 3rd party libraries are not compatible with Fast Refresh.

Are you referring to the Fast Refresh limitations?
Any details will be helpful.
Thank you.",2021-10-01 16:47:42.000000,5,,Non Actionable Topic
835,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"New [Fast Refresh] rebuilding entries in developer console are displayed time to time without me touching a single file of the codebase. It is very confusing:

I have no idea why it rebuilds
I cannot turn this auto-rebuild off
I simply cannot stop it doing something without me asking it to do it

It is very dissatisfying and makes for bad user experience.
Please, please, give us an option to turn fast refresh off entirely.
It would also be very useful if it added a comment to the log entries in console about WHY exactly it rebuilt - was it because some file got changed (if so, which one?), or was it on a timer (if so, then how do we turn that timer off), etc.
These unpredictable page updates are killing developer experience entirely in some scenarios. Please can you do something about it. I can't understand how you dedicate so much resources on collaboration and super features like in V12, but still can't sort basic stuff like this out. Please could you pay attention to this issue - it is a serious deal-breaker.",2021-11-10 01:22:13.000000,6,,Non Actionable Topic
836,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,I can't believe there is no option to turn this off. Really? I'm very close to just going back to Node and Vue. Developer experience with Next has been frustrating.,2022-01-08 08:57:15.000000,7,,Non Actionable Topic
837,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"I have the same issue, I was testing a login page with form and submit button, and to figure out any bugs or misbehavior, the page automatically reload and the console log clears up and I can't read what happened and what logs I've put to understand what's going on!!
It's not a solution as I am here looking for efficient one, but I put alert(""the object or the log I am trying to display"") and it stops the reload, and then I can be able to read the console history.
But it is still frustrating as the trying to control the lifecycle of the app after submitting is hard to debug because of the random reloading and clearing up the console.",2022-01-10 12:27:31.000000,8,,Non Actionable Topic
838,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,Changing the environment variable NODE_ENV='production' for me seems to fix it,2022-03-03 05:36:51.000000,9,,Non Actionable Topic
839,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"Same problem here. This doesn't look good at all for Next.js.
Same as @meglio, I just leave my Chrome and Firefox alone with the page open, and not changing any code files at all. Every N seconds, the page will do a full refresh with, saying on the console:
",2022-03-04 09:52:58.000000,10,,Non Actionable Topic
840,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"Is it possible that this could perhaps be caused by the IDE or a Git client, that is changing some file in the app dir, causing Next Js to do a fast refresh because it listens to some file system signal?
Does anyone have a clue how we could get more info an WHICH file change exactly is triggering Next?",2022-03-09 14:29:42.000000,11,,Non Actionable Topic
841,https://github.com/vercel/next.js/discussions/25712,2021-06-02 09:09:25.000000,"One small workaround I found that sometimes helps: pause JS execution in the dev tools of your browser. This way, at least you can look at the console log or DOM elements without Next refreshing on you for no good reason.",2022-03-30 12:37:43.000000,12,,Non Actionable Topic
842,https://github.com/vercel/next.js/discussions/25844,2021-06-05 17:01:05.000000,It has nothing to do with Next.js. It's just node-sass doesn't work with latest node yet.,2021-06-05 17:31:33.000000,1,,Already fixed
843,https://github.com/vercel/next.js/discussions/25844,2021-06-05 17:01:05.000000,"@bnn1 it's not right i guess. Because node-sass 6 support node 16 (see sass/node-sass#3077)
next.js team should change peerDependency to allow node-sass 6 and fix related problems with node-sass",2021-06-07 10:22:25.000000,2,,Already fixed
844,https://github.com/vercel/next.js/discussions/25844,2021-06-05 17:01:05.000000,"Just ran into the same issue. When using Node 16 and Next 10, one cannot npm install sass, as described in the documentation. If there's no incompatibilities between Next 10 and Sass 6, the peerDependency should indeed be updated.",2021-06-11 14:18:24.000000,3,,Already fixed
845,https://github.com/vercel/next.js/discussions/25844,2021-06-05 17:01:05.000000,"I believe that there's a dependency chain on the newest version of sass-loader, and then webpack 5 to enable this",2021-08-05 15:50:22.000000,4,,Already fixed
846,https://github.com/vercel/next.js/discussions/25844,2021-06-05 17:01:05.000000,"node-sass@6 seems to be not supported as now.
The current dependency of sass-loader link to version 10.0.5 which doesn't support node-sass@6",2021-08-31 09:36:18.000000,5,,Already fixed
847,https://github.com/vercel/next.js/discussions/25844,2021-06-05 17:01:05.000000,"A PR has been merged to address this! #28710
Relevant discussion: #28704",2021-09-21 17:56:28.000000,6,1.0,Already fixed
848,https://github.com/vercel/next.js/discussions/26409,2021-06-19 15:18:31.000000,"Converted to discussions as the issue template was not followed, please fill out all sections correctly including providing a reproduction and clear description of what you'd like to change.",2021-06-21 09:30:27.000000,1,1.0,Invalid issues
849,https://github.com/vercel/next.js/discussions/27756,2021-08-04 00:46:19.000000,"@timneutkens
Is it normal that feature requests are moved to a discussion?
I don't see how it could be re-implemented soon if I'm the only one tagged in the discussion, I'm a bit confused, sorry.
I thought I was very specific and precise when I provided:

Some history involving the feature
A perfectly valid case not covered by the default static image method
A link to PRs that implemented the feature and the PR where it was removed, including the discussions/comments about the feature (which is the only reason it was removed was because the newer method was more elegant)

Was there  any information missing in the ticket?
I'm sorry, it's just I'm very confused about the ""discussion"" part. When I see something moved there, it's usually to be forgotten...",2021-08-08 12:47:18.000000,1,1.0,Non Actionable Topic
850,https://github.com/vercel/next.js/discussions/27756,2021-08-04 00:46:19.000000,I would love this too. Is there a workaround currently to generate StaticImageData from strings of files in public?,2021-11-15 16:59:42.000000,2,,Non Actionable Topic
851,https://github.com/vercel/next.js/discussions/28642,2021-08-30 22:39:19.000000,@timneutkens Since this was converted to a discussion. Do you care to discuss?,2021-09-02 01:52:34.000000,1,1.0,Non Actionable Topic
852,https://github.com/vercel/next.js/discussions/28642,2021-08-30 22:39:19.000000,any momentum on this?  Or any workaround gist?,2022-02-19 01:54:12.000000,2,,Non Actionable Topic
853,https://github.com/vercel/next.js/discussions/29315,2021-09-21 13:14:41.000000,Could you guys please help,2021-09-24 12:28:54.000000,1,,Not a bug
854,https://github.com/vercel/next.js/discussions/29315,2021-09-21 13:14:41.000000,"Don't expect to get much help quickly when your issue is moved to discussions. I was dealing with the same issue today and the solution is to use Next.js 12 and next.config.mjs (instead of .js), like so:
",2021-11-09 22:54:56.000000,2,,Not a bug
855,https://github.com/vercel/next.js/discussions/30871,2021-10-28 12:14:08.000000,@timneutkens could you convert this to a discussion please? thanks!,2021-11-03 09:52:01.000000,1,1.0,Non Actionable Topic
856,https://github.com/vercel/next.js/discussions/30871,2021-10-28 12:14:08.000000,"Thanks for logging this! Overall, I agree that the current behavior of passing in files and directories through different flags is a little bit wonky, so I'm all in favor of improving it :)

I propose to add a new --paths option

I like it! That sounds great to me, and looking at your suggested changes I'm glad you've kept support for --file and --dir (for the meantime at least) to not introduce any breaking changes immediately.

For the next major version, it could be considered to drop reading the baseDir from the first argument, and always require passing it via --base-dir

Hmm if I recall correctly, I was planning to introduce --base-dir as part of the changes within #26777 and it was all reverted due to it being a breaking change. Why do we need to re-introduce --base-dir if we are including a new --paths flag that can work with the current behavior?",2021-11-16 15:35:24.000000,2,,Non Actionable Topic
857,https://github.com/vercel/next.js/discussions/31142,2021-11-06 03:16:43.000000,"The code used to test it:

KEY=1 PASS=234 PORT=8000 yarn dev:
Result:


Same but with .env.local:

Result:

Seems there's something in your app given that this is working as expected. I'll convert the issue to discussions.",2021-11-08 12:29:36.000000,1,1.0,Not a Bug
858,https://github.com/vercel/next.js/discussions/31142,2021-11-06 03:16:43.000000,"Just did this from scratch. As you can see, it doesn't work:
https://nextjs-test-nine-tan.vercel.app
Here's the repo:
https://gitlab.com/nabeards/nextjs-test/
Something is wrong with what's available on the Vercel site, and it's wasted a few hours of my time at this point.",2021-11-08 18:09:45.000000,2,,Not a Bug
859,https://github.com/vercel/next.js/discussions/31142,2021-11-06 03:16:43.000000,"Hey @nabeards 👋🏼
Thanks for the link and the repo. Would you be able to confirm if you added the variables to your Vercel deployment? Here's more information.",2021-11-08 18:46:31.000000,3,,Not a Bug
860,https://github.com/vercel/next.js/discussions/32119,2021-12-03 22:37:24.000000,You'll want to upgrade to the latest version. Converted to discussions given that no full reproduction was provided.,2021-12-04 12:09:40.000000,1,1.0,Invalid issues
861,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"This would be super handy. I may want to disable these on a per feature basis rather than swallowing all warnings.
Might we do [in pseudo types]:
",2021-11-03 20:42:00.000000,1,,Not a Bug
862,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"I'm curious, what's the purpose of disabling the warning? From my perspective, the whole point of the warning is to make it impossible to start the app without an acknowledgement that you're relying on prerelease features.",2021-11-04 00:43:51.000000,2,,Not a Bug
863,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"I explicitly acknowledged that I was using an ""experimental feature"" when I wrote the key experimental in my config file.
I don't need to be reminded of that every time the app starts up in both development and production builds.
On top of that, we use the next-page-tester library to do ""integration""-style tests of an entire page route at a time.... and every single test that loads a page is printing out these console warnings.
I was already hijacking console.log() to filter out some warnings in certain tests, including the ever-popular ""useLayoutEffect can't be used in SSR"" warning from React itself. I was partially successful in filtering out the ""experimental"" warning in tests as well.
But, from my perspective, it's a useless message cluttering up my terminal, much akin to the ""hundreds of packages have audit issues warnings"" you wrote about recently.  It's irrelevant to my workflow, and it gets printed every time.
(On top of that, the particular ""experimental"" feature I just enabled is the externalDirs flag that was just suggested to me by Sokra specifically for my use case of importing files from other folders in the repo.)",2021-11-04 00:49:51.000000,3,,Not a Bug
864,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"My initial feeling is to err on the side of caution and verbosity.
One benefit of the verbose console output is it helps the team understand what experimental features folks are currently opting into, which could explain why they're seeing breaking behavior. Without that, it requires another ask to see their next.config.js file to find out if they're turned off this logging.
Folks who are using experimental features are the early testers we're looking to provide feedback. I wonder if the root issue here is the particular experimental flag should be considered to be moved to the next stage (maybe still opt-in, not on by default) depending on its usage.",2021-11-04 15:07:35.000000,4,,Not a Bug
865,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"
I wonder if the root issue here is the particular experimental flag should be considered to be moved to the next stage (maybe still opt-in, not on by default) depending on its usage.

externalDir is essential for Next.js usage in monorepos, it would be great if that is the case",2021-11-04 16:15:18.000000,5,,Not a Bug
866,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"
One benefit of the verbose console output is it helps the team understand what experimental features folks are currently opting into, which could explain why they're seeing breaking behavior. Without that, it requires another ask to see their next.config.js file to find out if they're turned off this logging.

What if on the first startup message, there were ""shortcodes"" for experimental features:

ready - started server on 0.0.0.0:3000, url: http://localhost:3000, Experimental: ACDF

e.g. E = external dirs enabled
That might be pushing into ""over-optimization"" territory and over-complication, but I do agree suppressing these messages would be nice.",2021-11-04 20:49:42.000000,6,,Not a Bug
867,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,"As this seems to be more of a feature request, not an actual bug, I'll convert this to an Idea so the discussion can be continued there.",2021-12-07 00:52:34.000000,7,1.0,Not a Bug
868,https://github.com/vercel/next.js/discussions/32192,2021-11-03 20:23:48.000000,These warnings also make CI fail since a non zero return code is sent. It would be awesome to be able to silent these.,2022-03-17 21:43:50.000000,8,,Not a Bug
869,https://github.com/vercel/next.js/discussions/33059,2022-01-05 10:43:50.000000,"There is quite a lot going on in your _app, and I'm not sure how to reproduce it. It would help if you could isolate the issue and create a complete reproduction.",2022-01-05 22:31:36.000000,1,,Invalid issues
870,https://github.com/vercel/next.js/discussions/33059,2022-01-05 10:43:50.000000,"As I said, I have been trying to reproduce it for debugging the issue, but I have not been able to reproduce it unfortunately. But Still, thought was worth raise the issue and hope someone could give an hand. I will update if I have any more info, but for now this is all.",2022-01-06 09:03:10.000000,2,,Invalid issues
871,https://github.com/vercel/next.js/discussions/33059,2022-01-05 10:43:50.000000,"Using this very simple code:

And running next build && next export produces an HTML containing the correct elements in head:

The problem seems to be specific for your use case so I converted it to a discussion.",2022-01-06 11:29:17.000000,3,1.0,Invalid issues
872,https://github.com/vercel/next.js/discussions/33059,2022-01-05 10:43:50.000000,"Hi @balazsorban44  I managed to reproduce the issue.
Could you please check the repo I created?
https://github.com/Vanals/Hello-NextJS



yarn


yarn next build && yarn next export


Outcome:
Meta tags from page2/index.tsx, _app.jsx and _document are in the static files (index.html & page2.html)

If you now go to _document and uncomment getInitialProps() and re run the step2 only the meta tags in _document will be rendered.

We are currently using getInitialProps, and therefore renderPage(), in our repo to make a script work and we are also using a css-in-js library.
Is this a bug? some bad practice we are applying?
I would expect in both cases(commenting getInitialProps or not) to have all the meta tags, nested in <Head>, statically rendered.
As I understood from the docs getInitialProps does static rendering when exporting with yarn next build && yarn next export
Thank you",2022-01-10 15:00:28.000000,4,,Invalid issues
873,https://github.com/vercel/next.js/discussions/34248,2022-02-11 11:02:14.000000,"This sounds like a duplicate of this feature request if not word by word, but judging from your intent, you want a solution to solve the art direction problem: #26728
A more direct duplicate is #29612 which has a less active conversation.
Here is our most up-to-date answer that I could find: #26728 (comment) Head over to that discussion and give your concern. The more upvote/engagement a feature request gets, the higher the likelihood we are going to look more into it! 🙏",2022-02-11 22:55:24.000000,1,1.0,Already fixed
874,https://github.com/vercel/next.js/discussions/34572,2022-02-14 18:11:02.000000,"@balazsorban44 not sure why this was moved to a discussion, could you ellaborate? Right now Next.js has a dependency on postcss-preset-env which is not meant to work with postcss version 8 and that seems like an issue to me.",2022-02-21 06:25:25.000000,1,1.0,Others
875,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,ask for help      thank you,2022-02-24 10:33:21.000000,1,,Others
876,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,,2022-02-24 10:36:44.000000,2,,Others
877,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,"Hello.
Did you check out shallow routing? https://nextjs.org/docs/routing/shallow-routing

Shallow routing allows you to change the URL without running data fetching methods again, that includes getServerSideProps, getStaticProps, and getInitialProps.
",2022-02-24 10:58:06.000000,3,,Others
878,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,"But I'm not shallow，I go to page B from page a, and press the return key in the browser to page a",2022-02-24 11:07:48.000000,4,,Others
879,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,"Shallow routing only works for same page URL changes. For example, let's assume we have another page called pages/about.js, and you run this:
router.push('/?counter=10', '/about?counter=10', { shallow: true })
Since that's a new page, it'll unload the current page, load the new one and wait for data fetching even though we asked to do shallow routing.",2022-02-24 11:08:26.000000,5,,Others
880,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,"@balazsorban44 What can the authors do? We don't want router Push: when returning to the page, getserversideprops is executed again, which will cause my page data to be updated once",2022-02-24 12:43:49.000000,6,,Others
881,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,"For example, the product list page enters the product details page. The product details page then returns to the list page. Getserversideprops is executed again, resulting in the update of commodity list data. This is not what I want to see！
Our website does not use getstaticprops because getstaticprops is not suitable for our website. And we are not shallow route jump",2022-02-25 01:36:13.000000,7,,Others
882,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,I want to know whether this bug is not solved officially or for other reasons. Please let me know. Thank you,2022-02-28 01:32:24.000000,8,,Others
883,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,Or why not let getserversideprops execute,2022-02-28 01:33:06.000000,9,,Others
884,https://github.com/vercel/next.js/discussions/34760,2022-02-24 07:01:54.000000,"So far, this problem has not been solved. The author puts this problem in the discussion area. If this problem is caused by me, please tell me that this is my own problem. If this problem is caused by the official, I will abandon next and change the scheme!",2022-02-28 01:34:28.000000,10,1.0,Others
885,https://github.com/verdaccio/verdaccio/discussions/2224,2021-05-03 10:57:28.000000,"I don't understand your request, maybe if you elaborate more on your idea and how fits this project. (I've moved it to discussion since there is not a clear action plan)",2021-05-04 06:00:48.000000,1,1.0,Invalid issues
886,https://github.com/verdaccio/verdaccio/discussions/3101,2022-03-29 02:16:43.000000,"I see https://registry.verdaccio.org/fis-preprocessor-annotate the main field on the body. That might be local issue since verdaccio does not modify the manfiest or remove main field.
Why npm3? anyway does works fine on npm6. I will move this to a discussion because is not a bug.",2022-03-29 07:56:41.000000,1,1.0,Not a Bug
887,https://github.com/webpack/webpack/discussions/13257,2021-04-26 08:42:47.000000,"Please use Discussions for questions, issues for bugs/features, you can set name for vendor chunk, what is the problem with new naming?",2021-04-28 13:58:37.000000,1,1.0,Non Actionable Topic
888,https://github.com/webpack/webpack/discussions/13528,2021-06-05 22:24:14.000000,"For questions, please use Discussions. What do you try achieve? Why do you need rebuild module?",2021-06-07 10:36:20.000000,1,1.0,Non Actionable Topic
889,https://github.com/webpack/webpack/discussions/13788,2021-07-13 23:12:23.000000,"Please ask this in electron repo, you set https://github.com/isasmendiagus/scanoss-scannerJS/blob/main/webpack.config.js#L9, so import.meta.url should be supported, but looks like your env is not supported import.meta.url why? Due:

SyntaxError: Cannot use 'import.meta' outside a module

electron thinking it is commonjs format, try change filename: 'electron-scanoss.js' on filename: 'electron-scanoss.mjs',
Please use https://github.com/webpack/webpack/discussions for questions in future",2021-07-14 10:10:00.000000,1,1.0,Unrelated Repository
890,https://github.com/webpack/webpack/discussions/14388,2021-10-02 15:32:47.000000,"For questions please use https://github.com/webpack/webpack/discussions, because requiredVersion are different",2021-10-02 15:37:09.000000,1,1.0,Non Actionable Topic
891,https://github.com/webpack/webpack/discussions/15067,2021-12-28 13:42:49.000000,"We have resolver plugins and you can achieve it using them - https://webpack.js.org/api/resolvers/, but I strongly recommend to avoid extra complex and don't use this approach, sorry no solutions out of box because it is exotic
Let's use discussions for questions",2021-12-28 14:10:05.000000,1,1.0,Non Actionable Topic
